{
  "components": {
    "schemas": {
      "ApplyPaymentToInvoiceSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/ApplyPaymentToInvoiceSchemaList.a9993e3.ApplyPaymentToInvoiceSchema"
        },
        "title": "ApplyPaymentToInvoiceSchemaList",
        "type": "array"
      },
      "ApplyPaymentToInvoiceSchemaList.a9993e3.ApplyPaymentToInvoiceSchema": {
        "example": {
          "applied_amount": 100,
          "invoice_id": 123
        },
        "properties": {
          "applied_amount": {
            "title": "Applied Amount",
            "type": "integer"
          },
          "invoice_id": {
            "title": "Invoice Id",
            "type": "integer"
          }
        },
        "required": [
          "invoice_id",
          "applied_amount"
        ],
        "title": "ApplyPaymentToInvoiceSchema",
        "type": "object"
      },
      "AssayFilterSchema.7a3ad72": {
        "properties": {
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "additional_fields_encoded": {
            "description": "Base64 Encoded Assay Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "ASSAY"
            },
            "title": "Additional Fields Encoded",
            "type": "string"
          },
          "assay_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Assay Ids",
            "type": "array"
          },
          "assay_tags_action": {
            "$ref": "#/components/schemas/AssayFilterSchema.7a3ad72.TagActionValues"
          },
          "category_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Category Ids",
            "type": "array"
          },
          "include_deleted": {
            "$ref": "#/components/schemas/AssayFilterSchema.7a3ad72.IncludeDeletedValues"
          },
          "integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Integration Ids",
            "type": "array"
          },
          "invoice_last_updated": {
            "description": "Return the assays whose related invoices were updated after this unix timestamp",
            "title": "Invoice Last Updated",
            "type": "string"
          },
          "last_updated": {
            "description": "Last updated unix timestamp",
            "title": "Last Updated",
            "type": "string"
          },
          "not_integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Not Integration Ids",
            "type": "array"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "sort_by": {
            "title": "Sort By",
            "type": "string"
          },
          "sort_order": {
            "$ref": "#/components/schemas/AssayFilterSchema.7a3ad72.SortOrderValues"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "team_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Team Ids",
            "type": "array"
          },
          "tech_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Tech Ids",
            "type": "array"
          },
          "title_keyword": {
            "title": "Title Keyword",
            "type": "string"
          },
          "worksheet_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Worksheet Ids",
            "type": "array"
          }
        },
        "title": "AssayFilterSchema",
        "type": "object"
      },
      "AssayFilterSchema.7a3ad72.IncludeDeletedValues": {
        "description": "An enumeration.",
        "enum": [
          "TRUE",
          "DELETED_ONLY"
        ],
        "title": "IncludeDeletedValues"
      },
      "AssayFilterSchema.7a3ad72.SortOrderValues": {
        "description": "An enumeration.",
        "enum": [
          "ASC",
          "DESC"
        ],
        "title": "SortOrderValues"
      },
      "AssayFilterSchema.7a3ad72.TagActionValues": {
        "description": "An enumeration.",
        "enum": [
          "Or",
          "And",
          "Not"
        ],
        "title": "TagActionValues"
      },
      "AuthenticationSchema.0d0ead6": {
        "properties": {
          "assertion": {
            "title": "Assertion",
            "type": "string"
          },
          "grant_type": {
            "title": "Grant Type",
            "type": "string"
          }
        },
        "required": [
          "grant_type",
          "assertion"
        ],
        "title": "AuthenticationSchema",
        "type": "object"
      },
      "BadRequestResponseSchema.69d0de0": {
        "properties": {
          "error_description": {
            "title": "Error Description",
            "type": "string"
          },
          "error_token": {
            "title": "Error Token",
            "type": "string"
          },
          "error_type": {
            "title": "Error Type",
            "type": "string"
          },
          "errors": {
            "items": {
              "type": "object"
            },
            "title": "Errors",
            "type": "array"
          }
        },
        "required": [
          "error_description",
          "error_type",
          "error_token",
          "errors"
        ],
        "title": "BadRequestResponseSchema",
        "type": "object"
      },
      "BatchFilterSchema.7a3ad72": {
        "properties": {
          "additional_fields_encoded": {
            "description": "Base64 Encoded Batch Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "BATCH"
            },
            "title": "Additional Fields Encoded",
            "type": "string"
          },
          "assay_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Assay Ids",
            "type": "array"
          },
          "batch_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Batch Ids",
            "type": "array"
          },
          "batch_tags_action": {
            "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.TagActionValues"
          },
          "current_object_protocol_step_current_user": {
            "title": "Current Object Protocol Step Current User",
            "type": "boolean"
          },
          "current_object_protocol_step_user_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Current Object Protocol Step User Ids",
            "type": "array"
          },
          "current_protocol_step_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Current Protocol Step Ids",
            "type": "array"
          },
          "date_created_end": {
            "title": "Date Created End",
            "type": "string"
          },
          "date_created_filter_range": {
            "title": "Date Created Filter Range",
            "type": "string"
          },
          "date_created_relative": {
            "title": "Date Created Relative",
            "type": "string"
          },
          "date_created_relative_days": {
            "title": "Date Created Relative Days",
            "type": "string"
          },
          "date_created_start": {
            "title": "Date Created Start",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "type": "string"
          },
          "ids": {
            "items": {
              "type": "integer"
            },
            "title": "Ids",
            "type": "array"
          },
          "include_batches_without_assay": {
            "title": "Include Batches Without Assay",
            "type": "boolean"
          },
          "include_deleted": {
            "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.IncludeDeletedValues"
          },
          "last_updated": {
            "description": "Last updated unix timestamp",
            "title": "Last Updated",
            "type": "string"
          },
          "object_protocol_step_assigned_current_user": {
            "title": "Object Protocol Step Assigned Current User",
            "type": "boolean"
          },
          "object_protocol_step_assigned_user_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Object Protocol Step Assigned User Ids",
            "type": "array"
          },
          "object_protocol_step_no_user_assigned": {
            "title": "Object Protocol Step No User Assigned",
            "type": "boolean"
          },
          "object_protocol_step_statuses": {
            "items": {
              "type": "integer"
            },
            "title": "Object Protocol Step Statuses",
            "type": "array"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          },
          "parent_batch_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Parent Batch Ids",
            "type": "array"
          },
          "project_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Project Ids",
            "type": "array"
          },
          "protocol_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Protocol Ids",
            "type": "array"
          },
          "sample_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Sample Ids",
            "type": "array"
          },
          "sort_by": {
            "title": "Sort By",
            "type": "string"
          },
          "sort_order": {
            "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.SortOrderValues"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "test_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Test Ids",
            "type": "array"
          }
        },
        "title": "BatchFilterSchema",
        "type": "object"
      },
      "BatchFilterSchema.7a3ad72.IncludeDeletedValues": {
        "description": "An enumeration.",
        "enum": [
          "TRUE",
          "DELETED_ONLY"
        ],
        "title": "IncludeDeletedValues"
      },
      "BatchFilterSchema.7a3ad72.SortOrderValues": {
        "description": "An enumeration.",
        "enum": [
          "ASC",
          "DESC"
        ],
        "title": "SortOrderValues"
      },
      "BatchFilterSchema.7a3ad72.TagActionValues": {
        "description": "An enumeration.",
        "enum": [
          "Or",
          "And",
          "Not"
        ],
        "title": "TagActionValues"
      },
      "CommentFilterSchema.7a3ad72": {
        "properties": {
          "ids": {
            "description": "List of Comment IDs",
            "items": {
              "type": "integer"
            },
            "title": "Ids",
            "type": "array"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          }
        },
        "title": "CommentFilterSchema",
        "type": "object"
      },
      "ContactCustomerCreateSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/ContactCustomerCreateSchemaList.a9993e3.ContactCustomerCreateSchema"
        },
        "title": "ContactCustomerCreateSchemaList",
        "type": "array"
      },
      "ContactCustomerCreateSchemaList.a9993e3.ContactCustomerCreateSchema": {
        "example": {
          "contact_id": 123,
          "customer_id": 321,
          "portal_role_ids": [
            1,
            2,
            3
          ],
          "portal_user": true,
          "receive_email": true,
          "receive_invoice_email": true,
          "send_portal_invite": true
        },
        "properties": {
          "contact": {
            "title": "Contact",
            "type": "object"
          },
          "contact_id": {
            "title": "Contact Id",
            "type": "integer"
          },
          "customer": {
            "title": "Customer",
            "type": "object"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "integer"
          },
          "portal_role_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Portal Role Ids",
            "type": "array"
          },
          "portal_user": {
            "title": "Portal User",
            "type": "boolean"
          },
          "preferences": {
            "title": "Preferences",
            "type": "object"
          },
          "receive_email": {
            "title": "Receive Email",
            "type": "boolean"
          },
          "receive_invoice_email": {
            "title": "Receive Invoice Email",
            "type": "boolean"
          },
          "send_portal_invite": {
            "title": "Send Portal Invite",
            "type": "boolean"
          }
        },
        "title": "ContactCustomerCreateSchema",
        "type": "object"
      },
      "ContactFilterSchema.7a3ad72": {
        "properties": {
          "additional_fields_encoded": {
            "description": "Base64 Encoded Contact Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "CONTACT"
            },
            "title": "Additional Fields Encoded",
            "type": "string"
          },
          "contact_tags_action": {
            "$ref": "#/components/schemas/ContactFilterSchema.7a3ad72.TagActionValues"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "integer"
          },
          "customer_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Customer Ids",
            "type": "array"
          },
          "customer_integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Customer Integration Ids",
            "type": "array"
          },
          "email_addresses": {
            "items": {
              "type": "string"
            },
            "title": "Email Addresses",
            "type": "array"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "include_deleted": {
            "$ref": "#/components/schemas/ContactFilterSchema.7a3ad72.IncludeDeletedValues"
          },
          "integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Integration Ids",
            "type": "array"
          },
          "is_doctor": {
            "title": "Is Doctor",
            "type": "boolean"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "last_updated": {
            "description": "Last updated unix timestamp",
            "title": "Last Updated",
            "type": "string"
          },
          "not_integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Not Integration Ids",
            "type": "array"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          },
          "sort_by": {
            "title": "Sort By",
            "type": "string"
          },
          "sort_order": {
            "$ref": "#/components/schemas/ContactFilterSchema.7a3ad72.SortOrderValues"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          }
        },
        "title": "ContactFilterSchema",
        "type": "object"
      },
      "ContactFilterSchema.7a3ad72.IncludeDeletedValues": {
        "description": "An enumeration.",
        "enum": [
          "TRUE",
          "DELETED_ONLY"
        ],
        "title": "IncludeDeletedValues"
      },
      "ContactFilterSchema.7a3ad72.SortOrderValues": {
        "description": "An enumeration.",
        "enum": [
          "ASC",
          "DESC"
        ],
        "title": "SortOrderValues"
      },
      "ContactFilterSchema.7a3ad72.TagActionValues": {
        "description": "An enumeration.",
        "enum": [
          "Or",
          "And",
          "Not"
        ],
        "title": "TagActionValues"
      },
      "CreateAssaySchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateAssaySchemaList.a9993e3.CreateAssaySchema"
        },
        "title": "CreateAssaySchemaList",
        "type": "array"
      },
      "CreateAssaySchemaList.a9993e3.CreateAssaySchema": {
        "example": {
          "title": "Hardening"
        },
        "properties": {
          "accessioning_types": {
            "items": {
              "type": "object"
            },
            "title": "Accessioning Types",
            "type": "array"
          },
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "batch_inventory_template_id": {
            "title": "Batch Inventory Template Id",
            "type": "integer"
          },
          "batch_protocol_id": {
            "title": "Batch Protocol Id",
            "type": "integer"
          },
          "batch_worksheet_ent": {
            "title": "Batch Worksheet Ent",
            "type": "object"
          },
          "batch_worksheet_id": {
            "title": "Batch Worksheet Id",
            "type": "integer"
          },
          "category": {
            "title": "Category",
            "type": "object"
          },
          "category_id": {
            "title": "Category Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "default_technician": {
            "title": "Default Technician",
            "type": "object"
          },
          "default_technician_id": {
            "title": "Default Technician Id",
            "type": "integer"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "document_id": {
            "title": "Document Id",
            "type": "integer"
          },
          "duration": {
            "title": "Duration",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "inventory_template_id": {
            "title": "Inventory Template Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "method": {
            "title": "Method",
            "type": "string"
          },
          "method_detection_limit": {
            "title": "Method Detection Limit",
            "type": "number"
          },
          "order_report_config_id": {
            "title": "Order Report Config Id",
            "type": "integer"
          },
          "panels": {
            "items": {
              "type": "object"
            },
            "title": "Panels",
            "type": "array"
          },
          "per_sample_fee_name": {
            "title": "Per Sample Fee Name",
            "type": "string"
          },
          "per_sample_fee_price": {
            "title": "Per Sample Fee Price",
            "type": "number"
          },
          "percent_recovery_lower_limit": {
            "title": "Percent Recovery Lower Limit",
            "type": "number"
          },
          "percent_recovery_upper_limit": {
            "title": "Percent Recovery Upper Limit",
            "type": "number"
          },
          "protocol_id": {
            "title": "Protocol Id",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "relative_percent_difference_limit": {
            "title": "Relative Percent Difference Limit",
            "type": "number"
          },
          "reporting_limit": {
            "title": "Reporting Limit",
            "type": "number"
          },
          "sample_level_worksheet": {
            "title": "Sample Level Worksheet",
            "type": "boolean"
          },
          "sample_report_config_id": {
            "title": "Sample Report Config Id",
            "type": "integer"
          },
          "show_in_portal": {
            "title": "Show In Portal",
            "type": "boolean"
          },
          "sort_order": {
            "title": "Sort Order",
            "type": "integer"
          },
          "spike_level": {
            "title": "Spike Level",
            "type": "number"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "team": {
            "title": "Team",
            "type": "object"
          },
          "team_id": {
            "title": "Team Id",
            "type": "integer"
          },
          "test_report_config_id": {
            "title": "Test Report Config Id",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "turnarounds": {
            "items": {
              "type": "object"
            },
            "title": "Turnarounds",
            "type": "array"
          },
          "units": {
            "title": "Units",
            "type": "string"
          },
          "worksheet_ent": {
            "title": "Worksheet Ent",
            "type": "object"
          },
          "worksheet_id": {
            "title": "Worksheet Id",
            "type": "integer"
          }
        },
        "required": [
          "title"
        ],
        "title": "CreateAssaySchema",
        "type": "object"
      },
      "CreateAttachmentSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateAttachmentSchemaList.a9993e3.CreateAttachmentSchema"
        },
        "title": "CreateAttachmentSchemaList",
        "type": "array"
      },
      "CreateAttachmentSchemaList.a9993e3.CreateAttachmentSchema": {
        "example": {
          "attachment_type": "ORDER",
          "file_name": "Chain of Custody.pdf",
          "object_id": 123
        },
        "properties": {
          "attach_to_report": {
            "title": "Attach To Report",
            "type": "boolean"
          },
          "attach_to_report_email": {
            "title": "Attach To Report Email",
            "type": "boolean"
          },
          "attachment_type": {
            "example": "ORDER",
            "title": "Attachment Type",
            "type": "string"
          },
          "file_name": {
            "example": "Chain of Custody.pdf",
            "title": "File Name",
            "type": "string"
          },
          "ignore_sns": {
            "title": "Ignore Sns",
            "type": "boolean"
          },
          "is_public": {
            "title": "Is Public",
            "type": "boolean"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "object_id": {
            "example": 1,
            "title": "Object Id",
            "type": "integer"
          },
          "published_to_portal": {
            "title": "Published To Portal",
            "type": "boolean"
          },
          "usage": {
            "title": "Usage",
            "type": "string"
          }
        },
        "required": [
          "attachment_type",
          "file_name",
          "object_id"
        ],
        "title": "CreateAttachmentSchema",
        "type": "object"
      },
      "CreateContactSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateContactSchemaList.a9993e3.CreateContactSchema"
        },
        "title": "CreateContactSchemaList",
        "type": "array"
      },
      "CreateContactSchemaList.a9993e3.CreateContactSchema": {
        "example": {
          "first_name": "Eren",
          "last_name": "Jaeger"
        },
        "properties": {
          "address": {
            "maxLength": 1000,
            "title": "Address",
            "type": "string"
          },
          "customers": {
            "items": {
              "type": "object"
            },
            "title": "Customers",
            "type": "array"
          },
          "email_address": {
            "maxLength": 500,
            "title": "Email Address",
            "type": "string"
          },
          "fax": {
            "maxLength": 50,
            "title": "Fax",
            "type": "string"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "is_doctor": {
            "title": "Is Doctor",
            "type": "boolean"
          },
          "last_name": {
            "maxLength": 100,
            "title": "Last Name",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "mobile": {
            "maxLength": 50,
            "title": "Mobile",
            "type": "string"
          },
          "phone": {
            "maxLength": 50,
            "title": "Phone",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          }
        },
        "required": [
          "first_name"
        ],
        "title": "CreateContactSchema",
        "type": "object"
      },
      "CreateCustomerSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateCustomerSchemaList.a9993e3.CreateCustomerSchema"
        },
        "title": "CreateCustomerSchemaList",
        "type": "array"
      },
      "CreateCustomerSchemaList.a9993e3.CreateCustomerSchema": {
        "example": {
          "customer_name": "Scout Regiment"
        },
        "properties": {
          "address": {
            "maxLength": 1000,
            "title": "Address",
            "type": "string"
          },
          "city_name": {
            "maxLength": 100,
            "title": "City Name",
            "type": "string"
          },
          "comments": {
            "maxLength": 2000,
            "title": "Comments",
            "type": "string"
          },
          "company_discount": {
            "title": "Company Discount",
            "type": "number"
          },
          "confident_cannabis_customer_id": {
            "title": "Confident Cannabis Customer Id",
            "type": "string"
          },
          "contacts": {
            "items": {
              "type": "object"
            },
            "title": "Contacts",
            "type": "array"
          },
          "country_name": {
            "maxLength": 45,
            "title": "Country Name",
            "type": "string"
          },
          "customer_name": {
            "title": "Customer Name",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "fax": {
            "title": "Fax",
            "type": "string"
          },
          "group_name": {
            "title": "Group Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "id_abbreviation": {
            "maxLength": 50,
            "title": "Id Abbreviation",
            "type": "string"
          },
          "invoicing_notes": {
            "maxLength": 5000,
            "title": "Invoicing Notes",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "mfa_enforced": {
            "title": "Mfa Enforced",
            "type": "boolean"
          },
          "parent_customer_id": {
            "title": "Parent Customer Id",
            "type": "integer"
          },
          "payment_term": {
            "maxLength": 45,
            "title": "Payment Term",
            "type": "string"
          },
          "payment_term_days": {
            "title": "Payment Term Days",
            "type": "integer"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          },
          "po_number": {
            "maxLength": 1000,
            "title": "Po Number",
            "type": "string"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "qbd_skip_address_sync": {
            "title": "Qbd Skip Address Sync",
            "type": "boolean"
          },
          "sources": {
            "items": {
              "type": "object"
            },
            "title": "Sources",
            "type": "array"
          },
          "special_instructions": {
            "maxLength": 5000,
            "title": "Special Instructions",
            "type": "string"
          },
          "state_name": {
            "maxLength": 45,
            "title": "State Name",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "zip_postal_code": {
            "maxLength": 45,
            "title": "Zip Postal Code",
            "type": "string"
          }
        },
        "required": [
          "customer_name"
        ],
        "title": "CreateCustomerSchema",
        "type": "object"
      },
      "CreateEntityIntegrationVendorRelationshipSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateEntityIntegrationVendorRelationshipSchemaList.a9993e3.CreateEntityIntegrationVendorRelationshipSchema"
        },
        "title": "CreateEntityIntegrationVendorRelationshipSchemaList",
        "type": "array"
      },
      "CreateEntityIntegrationVendorRelationshipSchemaList.a9993e3.CreateEntityIntegrationVendorRelationshipSchema": {
        "example": {
          "entity_id": 1,
          "integration_vendor_id": "merge_uuid"
        },
        "properties": {
          "entity_id": {
            "title": "Entity Id",
            "type": "integer"
          },
          "entity_type": {
            "title": "Entity Type",
            "type": "string"
          },
          "integration_id": {
            "title": "Integration Id",
            "type": "integer"
          },
          "integration_vendor_id": {
            "title": "Integration Vendor Id",
            "type": "string"
          },
          "integraton_vendor_id": {
            "title": "Integraton Vendor Id",
            "type": "string"
          }
        },
        "required": [
          "entity_id",
          "integration_vendor_id"
        ],
        "title": "CreateEntityIntegrationVendorRelationshipSchema",
        "type": "object"
      },
      "CreateGenReportSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateGenReportSchemaList.a9993e3.CreateGenReportSchema"
        },
        "title": "CreateGenReportSchemaList",
        "type": "array"
      },
      "CreateGenReportSchemaList.a9993e3.CreateGenReportSchema": {
        "example": {
          "report_config_id": 1,
          "signature_id": 1,
          "test_id": 1,
          "test_ids": [
            1
          ],
          "use_default_attachments": true
        },
        "properties": {
          "report_config_id": {
            "title": "Report Config Id",
            "type": "string"
          },
          "signature_id": {
            "title": "Signature Id",
            "type": "string"
          },
          "test_id": {
            "title": "Test Id",
            "type": "string"
          },
          "test_ids": {
            "items": {
              "type": "string"
            },
            "title": "Test Ids",
            "type": "array"
          },
          "use_default_attachments": {
            "title": "Use Default Attachments",
            "type": "boolean"
          }
        },
        "required": [
          "report_config_id"
        ],
        "title": "CreateGenReportSchema",
        "type": "object"
      },
      "CreateInvoiceItemSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateInvoiceItemSchemaList.a9993e3.CreateInvoiceItemSchema"
        },
        "title": "CreateInvoiceItemSchemaList",
        "type": "array"
      },
      "CreateInvoiceItemSchemaList.a9993e3.CreateInvoiceItemSchema": {
        "example": {
          "amount": 59.98,
          "base_price": 29.99,
          "invoice_id": 123,
          "invoice_item_type": "INVOICE_ITEM",
          "name": "Hardening",
          "quantity": 2
        },
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "number"
          },
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoice": {
            "title": "Invoice",
            "type": "object"
          },
          "invoice_id": {
            "title": "Invoice Id",
            "type": "integer"
          },
          "invoice_item_type": {
            "title": "Invoice Item Type",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "panel": {
            "title": "Panel",
            "type": "object"
          },
          "panel_id": {
            "title": "Panel Id",
            "type": "integer"
          },
          "quantity": {
            "title": "Quantity",
            "type": "integer"
          },
          "quantity_discount": {
            "title": "Quantity Discount",
            "type": "object"
          },
          "quantity_discount_id": {
            "title": "Quantity Discount Id",
            "type": "integer"
          },
          "sort_order": {
            "title": "Sort Order",
            "type": "integer"
          },
          "surcharge": {
            "title": "Surcharge",
            "type": "number"
          },
          "surcharge_invoice_item_uuid": {
            "title": "Surcharge Invoice Item Uuid",
            "type": "string"
          },
          "tax_rate": {
            "title": "Tax Rate",
            "type": "object"
          },
          "tax_rate_id": {
            "title": "Tax Rate Id",
            "type": "integer"
          },
          "tax_rate_name": {
            "title": "Tax Rate Name",
            "type": "string"
          },
          "tax_rate_percentage": {
            "title": "Tax Rate Percentage",
            "type": "number"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          },
          "uuid": {
            "title": "Uuid",
            "type": "string"
          }
        },
        "required": [
          "invoice_id",
          "name",
          "invoice_item_type"
        ],
        "title": "CreateInvoiceItemSchema",
        "type": "object"
      },
      "CreateInvoiceSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateInvoiceSchemaList.a9993e3.CreateInvoiceSchema"
        },
        "title": "CreateInvoiceSchemaList",
        "type": "array"
      },
      "CreateInvoiceSchemaList.a9993e3.CreateInvoiceSchema": {
        "example": {
          "order_id": 123,
          "template_id": 4
        },
        "properties": {
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_paid": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Paid"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "discount_individual_items": {
            "title": "Discount Individual Items",
            "type": "boolean"
          },
          "do_not_show_sync_warning": {
            "title": "Do Not Show Sync Warning",
            "type": "boolean"
          },
          "due_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Due Date"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "force_full_panel_prices": {
            "title": "Force Full Panel Prices",
            "type": "boolean"
          },
          "group_by_panel": {
            "title": "Group By Panel",
            "type": "boolean"
          },
          "group_by_panel_turnaround_not_applied": {
            "title": "Group By Panel Turnaround Not Applied",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoice_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Invoice Date"
          },
          "invoice_items": {
            "items": {
              "type": "object"
            },
            "title": "Invoice Items",
            "type": "array"
          },
          "invoice_payments": {
            "items": {
              "type": "object"
            },
            "title": "Invoice Payments",
            "type": "array"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "order_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Order Ids",
            "type": "array"
          },
          "orders": {
            "items": {
              "type": "object"
            },
            "title": "Orders",
            "type": "array"
          },
          "out_of_sync": {
            "title": "Out Of Sync",
            "type": "boolean"
          },
          "outstanding_amount": {
            "title": "Outstanding Amount",
            "type": "number"
          },
          "paid": {
            "title": "Paid",
            "type": "boolean"
          },
          "payment_term": {
            "title": "Payment Term",
            "type": "string"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "quotation_custom_prices_not_applied": {
            "title": "Quotation Custom Prices Not Applied",
            "type": "boolean"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "sub_total": {
            "title": "Sub Total",
            "type": "number"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "type": "number"
          },
          "total_after_tax": {
            "title": "Total After Tax",
            "type": "number"
          }
        },
        "required": [
          "order_id",
          "order_ids",
          "template_id"
        ],
        "title": "CreateInvoiceSchema",
        "type": "object"
      },
      "CreateOrderSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateOrderSchemaList.a9993e3.CreateOrderSchema"
        },
        "title": "CreateOrderSchemaList",
        "type": "array"
      },
      "CreateOrderSchemaList.a9993e3.CreateOrderSchema": {
        "example": {
          "customer_account_id": 123
        },
        "properties": {
          "approved_by": {
            "title": "Approved By",
            "type": "object"
          },
          "approved_by_id": {
            "title": "Approved By Id",
            "type": "integer"
          },
          "cc_id": {
            "title": "Cc Id",
            "type": "string"
          },
          "cc_latest_sync": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Cc Latest Sync"
          },
          "cc_order": {
            "title": "Cc Order",
            "type": "boolean"
          },
          "cc_order_status": {
            "title": "Cc Order Status",
            "type": "integer"
          },
          "cc_sync_error": {
            "title": "Cc Sync Error",
            "type": "string"
          },
          "cc_sync_status": {
            "title": "Cc Sync Status",
            "type": "string"
          },
          "created_from_quotation": {
            "title": "Created From Quotation",
            "type": "object"
          },
          "created_from_quotation_id": {
            "title": "Created From Quotation Id",
            "type": "integer"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "customer_account": {
            "title": "Customer Account",
            "type": "object"
          },
          "customer_account_id": {
            "title": "Customer Account Id",
            "type": "integer"
          },
          "date_approved": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Approved"
          },
          "date_completed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Completed"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_received": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Received"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "date_requested": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Requested"
          },
          "date_required": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Required"
          },
          "division": {
            "title": "Division",
            "type": "object"
          },
          "division_id": {
            "title": "Division Id",
            "type": "integer"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "entered_by": {
            "title": "Entered By",
            "type": "object"
          },
          "entered_by_api_client": {
            "title": "Entered By Api Client",
            "type": "object"
          },
          "entered_by_api_client_id": {
            "title": "Entered By Api Client Id",
            "type": "string"
          },
          "entered_by_id": {
            "title": "Entered By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoicing_notes": {
            "title": "Invoicing Notes",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "order_request": {
            "title": "Order Request",
            "type": "boolean"
          },
          "order_request_notes": {
            "title": "Order Request Notes",
            "type": "string"
          },
          "order_request_status": {
            "title": "Order Request Status",
            "type": "string"
          },
          "portal_read": {
            "title": "Portal Read",
            "type": "boolean"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "published_to_portal": {
            "title": "Published To Portal",
            "type": "boolean"
          },
          "received_by": {
            "title": "Received By",
            "type": "object"
          },
          "received_by_id": {
            "title": "Received By Id",
            "type": "integer"
          },
          "release_report": {
            "title": "Release Report",
            "type": "boolean"
          },
          "requested_by": {
            "title": "Requested By",
            "type": "object"
          },
          "requested_by_id": {
            "title": "Requested By Id",
            "type": "integer"
          },
          "requested_for": {
            "title": "Requested For",
            "type": "object"
          },
          "requested_for_id": {
            "title": "Requested For Id",
            "type": "integer"
          },
          "revision_notes": {
            "title": "Revision Notes",
            "type": "string"
          },
          "special_instructions": {
            "title": "Special Instructions",
            "type": "string"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "type": "string"
          },
          "total_samples_created": {
            "default": 0,
            "title": "Total Samples Created",
            "type": "integer"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          }
        },
        "required": [
          "customer_account_id"
        ],
        "title": "CreateOrderSchema",
        "type": "object"
      },
      "CreatePanelSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreatePanelSchemaList.a9993e3.CreatePanelSchema"
        },
        "title": "CreatePanelSchemaList",
        "type": "array"
      },
      "CreatePanelSchemaList.a9993e3.CreatePanelSchema": {
        "example": {
          "title": "Upstream Flow"
        },
        "properties": {
          "assays": {
            "items": {
              "type": "object"
            },
            "title": "Assays",
            "type": "array"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "show_in_portal": {
            "title": "Show In Portal",
            "type": "boolean"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "title"
        ],
        "title": "CreatePanelSchema",
        "type": "object"
      },
      "CreatePaymentSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreatePaymentSchemaList.a9993e3.CreatePaymentSchema"
        },
        "title": "CreatePaymentSchemaList",
        "type": "array"
      },
      "CreatePaymentSchemaList.a9993e3.CreatePaymentSchema": {
        "example": {
          "amount": 100,
          "customer_id": 123,
          "template_id": 456
        },
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "integer"
          },
          "check_number": {
            "title": "Check Number",
            "type": "string"
          },
          "created_by_api_client": {
            "title": "Created By Api Client",
            "type": "object"
          },
          "created_by_api_client_id": {
            "title": "Created By Api Client Id",
            "type": "string"
          },
          "created_by_user": {
            "title": "Created By User",
            "type": "object"
          },
          "created_by_user_id": {
            "title": "Created By User Id",
            "type": "integer"
          },
          "customer": {
            "title": "Customer",
            "type": "object"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "payment_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Payment Date"
          },
          "payment_type": {
            "title": "Payment Type",
            "type": "string"
          },
          "payment_type_id": {
            "title": "Payment Type Id",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "unapplied_amount": {
            "title": "Unapplied Amount",
            "type": "number"
          }
        },
        "required": [
          "customer_id",
          "amount",
          "template_id"
        ],
        "title": "CreatePaymentSchema",
        "type": "object"
      },
      "CreatePrintDocSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreatePrintDocSchemaList.a9993e3.CreatePrintDocSchema"
        },
        "title": "CreatePrintDocSchemaList",
        "type": "array"
      },
      "CreatePrintDocSchemaList.a9993e3.CreatePrintDocSchema": {
        "example": {
          "order_id": 1,
          "printdoc_config_id": 1
        },
        "properties": {
          "batch_id": {
            "description": "Required when generating a Batch Print Doc",
            "title": "Batch Id",
            "type": "integer"
          },
          "order_id": {
            "description": "Required when generating an Order Print Doc",
            "title": "Order Id",
            "type": "integer"
          },
          "printdoc_config_id": {
            "title": "Printdoc Config Id",
            "type": "integer"
          },
          "sample_id": {
            "description": "Required when generating a Sample Print Doc",
            "title": "Sample Id",
            "type": "integer"
          },
          "test_id": {
            "description": "Required when generating a Test Print Doc",
            "title": "Test Id",
            "type": "integer"
          },
          "test_ids": {
            "description": "Required when generating a Test List Print Doc",
            "items": {
              "type": "integer"
            },
            "title": "Test Ids",
            "type": "array"
          }
        },
        "required": [
          "printdoc_config_id"
        ],
        "title": "CreatePrintDocSchema",
        "type": "object"
      },
      "CreateResponseAssaySchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseAssaySchema.a9993e3.AssaySchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseAssaySchema",
        "type": "object"
      },
      "CreateResponseAssaySchema.a9993e3.AssaySchema": {
        "properties": {
          "accessioning_types": {
            "items": {
              "type": "object"
            },
            "title": "Accessioning Types",
            "type": "array"
          },
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "batch_inventory_template_id": {
            "title": "Batch Inventory Template Id",
            "type": "integer"
          },
          "batch_protocol_id": {
            "title": "Batch Protocol Id",
            "type": "integer"
          },
          "batch_worksheet_ent": {
            "title": "Batch Worksheet Ent",
            "type": "object"
          },
          "batch_worksheet_id": {
            "title": "Batch Worksheet Id",
            "type": "integer"
          },
          "category": {
            "title": "Category",
            "type": "object"
          },
          "category_id": {
            "title": "Category Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "default_technician": {
            "title": "Default Technician",
            "type": "object"
          },
          "default_technician_id": {
            "title": "Default Technician Id",
            "type": "integer"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "document_id": {
            "title": "Document Id",
            "type": "integer"
          },
          "duration": {
            "title": "Duration",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "inventory_template_id": {
            "title": "Inventory Template Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "method": {
            "title": "Method",
            "type": "string"
          },
          "method_detection_limit": {
            "title": "Method Detection Limit",
            "type": "number"
          },
          "order_report_config_id": {
            "title": "Order Report Config Id",
            "type": "integer"
          },
          "panels": {
            "items": {
              "type": "object"
            },
            "title": "Panels",
            "type": "array"
          },
          "per_sample_fee_name": {
            "title": "Per Sample Fee Name",
            "type": "string"
          },
          "per_sample_fee_price": {
            "title": "Per Sample Fee Price",
            "type": "number"
          },
          "percent_recovery_lower_limit": {
            "title": "Percent Recovery Lower Limit",
            "type": "number"
          },
          "percent_recovery_upper_limit": {
            "title": "Percent Recovery Upper Limit",
            "type": "number"
          },
          "protocol_id": {
            "title": "Protocol Id",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "relative_percent_difference_limit": {
            "title": "Relative Percent Difference Limit",
            "type": "number"
          },
          "reporting_limit": {
            "title": "Reporting Limit",
            "type": "number"
          },
          "sample_level_worksheet": {
            "title": "Sample Level Worksheet",
            "type": "boolean"
          },
          "sample_report_config_id": {
            "title": "Sample Report Config Id",
            "type": "integer"
          },
          "show_in_portal": {
            "title": "Show In Portal",
            "type": "boolean"
          },
          "sort_order": {
            "title": "Sort Order",
            "type": "integer"
          },
          "spike_level": {
            "title": "Spike Level",
            "type": "number"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "team": {
            "title": "Team",
            "type": "object"
          },
          "team_id": {
            "title": "Team Id",
            "type": "integer"
          },
          "test_report_config_id": {
            "title": "Test Report Config Id",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "turnarounds": {
            "items": {
              "type": "object"
            },
            "title": "Turnarounds",
            "type": "array"
          },
          "units": {
            "title": "Units",
            "type": "string"
          },
          "worksheet_ent": {
            "title": "Worksheet Ent",
            "type": "object"
          },
          "worksheet_id": {
            "title": "Worksheet Id",
            "type": "integer"
          }
        },
        "title": "AssaySchema",
        "type": "object"
      },
      "CreateResponseAssaySchema.a9993e3.AssaySchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseAssaySchema.a9993e3.AssaySchema"
        },
        "title": "AssaySchemaList",
        "type": "array"
      },
      "CreateResponseAttachmentSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseAttachmentSchema.a9993e3.AttachmentSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseAttachmentSchema",
        "type": "object"
      },
      "CreateResponseAttachmentSchema.a9993e3.AttachmentSchema": {
        "properties": {
          "asset_id": {
            "title": "Asset Id",
            "type": "integer"
          },
          "attach_to_report": {
            "title": "Attach To Report",
            "type": "boolean"
          },
          "attach_to_report_email": {
            "title": "Attach To Report Email",
            "type": "boolean"
          },
          "attachment_data_type": {
            "title": "Attachment Data Type",
            "type": "string"
          },
          "attachment_upload_type": {
            "title": "Attachment Upload Type",
            "type": "string"
          },
          "date_public": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Public"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "id_hash": {
            "title": "Id Hash",
            "type": "string"
          },
          "ignore_sns": {
            "title": "Ignore Sns",
            "type": "boolean"
          },
          "is_public": {
            "title": "Is Public",
            "type": "boolean"
          },
          "made_public_by_api_client_id": {
            "title": "Made Public By Api Client Id",
            "type": "string"
          },
          "made_public_by_id": {
            "title": "Made Public By Id",
            "type": "integer"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "object_id": {
            "title": "Object Id",
            "type": "integer"
          },
          "object_ids": {
            "title": "Object Ids",
            "type": "string"
          },
          "published_to_portal": {
            "title": "Published To Portal",
            "type": "boolean"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "title": "AttachmentSchema",
        "type": "object"
      },
      "CreateResponseAttachmentSchema.a9993e3.AttachmentSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseAttachmentSchema.a9993e3.AttachmentSchema"
        },
        "title": "AttachmentSchemaList",
        "type": "array"
      },
      "CreateResponseContactSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseContactSchema.a9993e3.ContactSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseContactSchema",
        "type": "object"
      },
      "CreateResponseContactSchema.a9993e3.ContactSchema": {
        "properties": {
          "address": {
            "maxLength": 1000,
            "title": "Address",
            "type": "string"
          },
          "customers": {
            "items": {
              "type": "object"
            },
            "title": "Customers",
            "type": "array"
          },
          "email_address": {
            "maxLength": 500,
            "title": "Email Address",
            "type": "string"
          },
          "fax": {
            "maxLength": 50,
            "title": "Fax",
            "type": "string"
          },
          "first_name": {
            "maxLength": 100,
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "is_doctor": {
            "title": "Is Doctor",
            "type": "boolean"
          },
          "last_name": {
            "maxLength": 100,
            "title": "Last Name",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "mobile": {
            "maxLength": 50,
            "title": "Mobile",
            "type": "string"
          },
          "phone": {
            "maxLength": 50,
            "title": "Phone",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          }
        },
        "title": "ContactSchema",
        "type": "object"
      },
      "CreateResponseContactSchema.a9993e3.ContactSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseContactSchema.a9993e3.ContactSchema"
        },
        "title": "ContactSchemaList",
        "type": "array"
      },
      "CreateResponseCustomerSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseCustomerSchema.a9993e3.CustomerSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseCustomerSchema",
        "type": "object"
      },
      "CreateResponseCustomerSchema.a9993e3.CustomerSchema": {
        "properties": {
          "address": {
            "maxLength": 1000,
            "title": "Address",
            "type": "string"
          },
          "city_name": {
            "maxLength": 100,
            "title": "City Name",
            "type": "string"
          },
          "comments": {
            "maxLength": 2000,
            "title": "Comments",
            "type": "string"
          },
          "company_discount": {
            "title": "Company Discount",
            "type": "number"
          },
          "confident_cannabis_customer_id": {
            "title": "Confident Cannabis Customer Id",
            "type": "string"
          },
          "contacts": {
            "items": {
              "type": "object"
            },
            "title": "Contacts",
            "type": "array"
          },
          "country_name": {
            "maxLength": 45,
            "title": "Country Name",
            "type": "string"
          },
          "customer_name": {
            "maxLength": 250,
            "title": "Customer Name",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "fax": {
            "title": "Fax",
            "type": "string"
          },
          "group_name": {
            "title": "Group Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "id_abbreviation": {
            "maxLength": 50,
            "title": "Id Abbreviation",
            "type": "string"
          },
          "invoicing_notes": {
            "maxLength": 5000,
            "title": "Invoicing Notes",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "mfa_enforced": {
            "title": "Mfa Enforced",
            "type": "boolean"
          },
          "parent_customer_id": {
            "title": "Parent Customer Id",
            "type": "integer"
          },
          "payment_term": {
            "maxLength": 45,
            "title": "Payment Term",
            "type": "string"
          },
          "payment_term_days": {
            "title": "Payment Term Days",
            "type": "integer"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          },
          "po_number": {
            "maxLength": 1000,
            "title": "Po Number",
            "type": "string"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "qbd_skip_address_sync": {
            "title": "Qbd Skip Address Sync",
            "type": "boolean"
          },
          "sources": {
            "items": {
              "type": "object"
            },
            "title": "Sources",
            "type": "array"
          },
          "special_instructions": {
            "maxLength": 5000,
            "title": "Special Instructions",
            "type": "string"
          },
          "state_name": {
            "maxLength": 45,
            "title": "State Name",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "zip_postal_code": {
            "maxLength": 45,
            "title": "Zip Postal Code",
            "type": "string"
          }
        },
        "title": "CustomerSchema",
        "type": "object"
      },
      "CreateResponseCustomerSchema.a9993e3.CustomerSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseCustomerSchema.a9993e3.CustomerSchema"
        },
        "title": "CustomerSchemaList",
        "type": "array"
      },
      "CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3.EntityIntegrationVendorRelationshipSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseEntityIntegrationVendorRelationshipSchema",
        "type": "object"
      },
      "CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3.EntityIntegrationVendorRelationshipSchema": {
        "properties": {
          "entity_id": {
            "title": "Entity Id",
            "type": "integer"
          },
          "entity_type": {
            "title": "Entity Type",
            "type": "string"
          },
          "integration_id": {
            "title": "Integration Id",
            "type": "integer"
          },
          "integraton_vendor_id": {
            "title": "Integraton Vendor Id",
            "type": "string"
          }
        },
        "required": [
          "entity_id"
        ],
        "title": "EntityIntegrationVendorRelationshipSchema",
        "type": "object"
      },
      "CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3.EntityIntegrationVendorRelationshipSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3.EntityIntegrationVendorRelationshipSchema"
        },
        "title": "EntityIntegrationVendorRelationshipSchemaList",
        "type": "array"
      },
      "CreateResponseGenReportSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseGenReportSchema.a9993e3.GenReportSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseGenReportSchema",
        "type": "object"
      },
      "CreateResponseGenReportSchema.a9993e3.GenReportSchema": {
        "properties": {
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_generated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Generated"
          },
          "date_public": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Public"
          },
          "date_published": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Published"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_api_client": {
            "title": "Emailed By Api Client",
            "type": "object"
          },
          "emailed_by_api_client_id": {
            "title": "Emailed By Api Client Id",
            "type": "string"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "generated_by": {
            "title": "Generated By",
            "type": "object"
          },
          "generated_by_api_client": {
            "title": "Generated By Api Client",
            "type": "object"
          },
          "generated_by_api_client_id": {
            "title": "Generated By Api Client Id",
            "type": "string"
          },
          "generated_by_id": {
            "title": "Generated By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "id_hash": {
            "title": "Id Hash",
            "type": "string"
          },
          "is_public": {
            "title": "Is Public",
            "type": "boolean"
          },
          "made_public_by": {
            "title": "Made Public By",
            "type": "object"
          },
          "made_public_by_api_client": {
            "title": "Made Public By Api Client",
            "type": "object"
          },
          "made_public_by_api_client_id": {
            "title": "Made Public By Api Client Id",
            "type": "string"
          },
          "made_public_by_id": {
            "title": "Made Public By Id",
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "published_by_api_client": {
            "title": "Published By Api Client",
            "type": "object"
          },
          "published_by_api_client_id": {
            "title": "Published By Api Client Id",
            "type": "string"
          },
          "render_batch_uuid": {
            "title": "Render Batch Uuid",
            "type": "string"
          },
          "render_error_message": {
            "title": "Render Error Message",
            "type": "string"
          },
          "render_params": {
            "title": "Render Params",
            "type": "string"
          },
          "render_status": {
            "title": "Render Status",
            "type": "string"
          },
          "report_config_id": {
            "title": "Report Config Id",
            "type": "integer"
          },
          "sample": {
            "title": "Sample",
            "type": "object"
          },
          "sample_id": {
            "title": "Sample Id",
            "type": "integer"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "test": {
            "title": "Test",
            "type": "object"
          },
          "test_id": {
            "title": "Test Id",
            "type": "integer"
          },
          "url": {
            "title": "Url",
            "type": "string"
          }
        },
        "title": "GenReportSchema",
        "type": "object"
      },
      "CreateResponseGenReportSchema.a9993e3.GenReportSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseGenReportSchema.a9993e3.GenReportSchema"
        },
        "title": "GenReportSchemaList",
        "type": "array"
      },
      "CreateResponseInvoiceItemSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseInvoiceItemSchema.a9993e3.InvoiceItemSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseInvoiceItemSchema",
        "type": "object"
      },
      "CreateResponseInvoiceItemSchema.a9993e3.InvoiceItemSchema": {
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "number"
          },
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoice": {
            "title": "Invoice",
            "type": "object"
          },
          "invoice_id": {
            "title": "Invoice Id",
            "type": "integer"
          },
          "invoice_item_type": {
            "title": "Invoice Item Type",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "panel": {
            "title": "Panel",
            "type": "object"
          },
          "panel_id": {
            "title": "Panel Id",
            "type": "integer"
          },
          "quantity": {
            "title": "Quantity",
            "type": "integer"
          },
          "quantity_discount": {
            "title": "Quantity Discount",
            "type": "object"
          },
          "quantity_discount_id": {
            "title": "Quantity Discount Id",
            "type": "integer"
          },
          "sort_order": {
            "title": "Sort Order",
            "type": "integer"
          },
          "surcharge": {
            "title": "Surcharge",
            "type": "number"
          },
          "surcharge_invoice_item_uuid": {
            "title": "Surcharge Invoice Item Uuid",
            "type": "string"
          },
          "tax_rate": {
            "title": "Tax Rate",
            "type": "object"
          },
          "tax_rate_id": {
            "title": "Tax Rate Id",
            "type": "integer"
          },
          "tax_rate_name": {
            "title": "Tax Rate Name",
            "type": "string"
          },
          "tax_rate_percentage": {
            "title": "Tax Rate Percentage",
            "type": "number"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          },
          "uuid": {
            "title": "Uuid",
            "type": "string"
          }
        },
        "title": "InvoiceItemSchema",
        "type": "object"
      },
      "CreateResponseInvoiceItemSchema.a9993e3.InvoiceItemSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseInvoiceItemSchema.a9993e3.InvoiceItemSchema"
        },
        "title": "InvoiceItemSchemaList",
        "type": "array"
      },
      "CreateResponseInvoiceSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseInvoiceSchema.a9993e3.InvoiceSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseInvoiceSchema",
        "type": "object"
      },
      "CreateResponseInvoiceSchema.a9993e3.InvoiceSchema": {
        "properties": {
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_paid": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Paid"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "discount_individual_items": {
            "title": "Discount Individual Items",
            "type": "boolean"
          },
          "do_not_show_sync_warning": {
            "title": "Do Not Show Sync Warning",
            "type": "boolean"
          },
          "due_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Due Date"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "force_full_panel_prices": {
            "title": "Force Full Panel Prices",
            "type": "boolean"
          },
          "group_by_panel": {
            "title": "Group By Panel",
            "type": "boolean"
          },
          "group_by_panel_turnaround_not_applied": {
            "title": "Group By Panel Turnaround Not Applied",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoice_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Invoice Date"
          },
          "invoice_items": {
            "items": {
              "type": "object"
            },
            "title": "Invoice Items",
            "type": "array"
          },
          "invoice_payments": {
            "items": {
              "type": "object"
            },
            "title": "Invoice Payments",
            "type": "array"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "order_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Order Ids",
            "type": "array"
          },
          "orders": {
            "items": {
              "type": "object"
            },
            "title": "Orders",
            "type": "array"
          },
          "out_of_sync": {
            "title": "Out Of Sync",
            "type": "boolean"
          },
          "outstanding_amount": {
            "title": "Outstanding Amount",
            "type": "number"
          },
          "paid": {
            "title": "Paid",
            "type": "boolean"
          },
          "payment_term": {
            "title": "Payment Term",
            "type": "string"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "quotation_custom_prices_not_applied": {
            "title": "Quotation Custom Prices Not Applied",
            "type": "boolean"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "sub_total": {
            "title": "Sub Total",
            "type": "number"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "type": "number"
          },
          "total_after_tax": {
            "title": "Total After Tax",
            "type": "number"
          }
        },
        "title": "InvoiceSchema",
        "type": "object"
      },
      "CreateResponseInvoiceSchema.a9993e3.InvoiceSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseInvoiceSchema.a9993e3.InvoiceSchema"
        },
        "title": "InvoiceSchemaList",
        "type": "array"
      },
      "CreateResponseOrderSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseOrderSchema.a9993e3.OrderSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseOrderSchema",
        "type": "object"
      },
      "CreateResponseOrderSchema.a9993e3.OrderSchema": {
        "properties": {
          "approved_by": {
            "title": "Approved By",
            "type": "object"
          },
          "approved_by_id": {
            "title": "Approved By Id",
            "type": "integer"
          },
          "cc_id": {
            "title": "Cc Id",
            "type": "string"
          },
          "cc_latest_sync": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Cc Latest Sync"
          },
          "cc_order": {
            "title": "Cc Order",
            "type": "boolean"
          },
          "cc_order_status": {
            "title": "Cc Order Status",
            "type": "integer"
          },
          "cc_sync_error": {
            "title": "Cc Sync Error",
            "type": "string"
          },
          "cc_sync_status": {
            "title": "Cc Sync Status",
            "type": "string"
          },
          "created_from_quotation": {
            "title": "Created From Quotation",
            "type": "object"
          },
          "created_from_quotation_id": {
            "title": "Created From Quotation Id",
            "type": "integer"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "customer_account": {
            "title": "Customer Account",
            "type": "object"
          },
          "customer_account_id": {
            "title": "Customer Account Id",
            "type": "integer"
          },
          "date_approved": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Approved"
          },
          "date_completed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Completed"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_received": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Received"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "date_requested": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Requested"
          },
          "date_required": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Required"
          },
          "division": {
            "title": "Division",
            "type": "object"
          },
          "division_id": {
            "title": "Division Id",
            "type": "integer"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "entered_by": {
            "title": "Entered By",
            "type": "object"
          },
          "entered_by_api_client": {
            "title": "Entered By Api Client",
            "type": "object"
          },
          "entered_by_api_client_id": {
            "title": "Entered By Api Client Id",
            "type": "string"
          },
          "entered_by_id": {
            "title": "Entered By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoicing_notes": {
            "title": "Invoicing Notes",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "order_request": {
            "title": "Order Request",
            "type": "boolean"
          },
          "order_request_notes": {
            "title": "Order Request Notes",
            "type": "string"
          },
          "order_request_status": {
            "title": "Order Request Status",
            "type": "string"
          },
          "portal_read": {
            "title": "Portal Read",
            "type": "boolean"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "published_to_portal": {
            "title": "Published To Portal",
            "type": "boolean"
          },
          "received_by": {
            "title": "Received By",
            "type": "object"
          },
          "received_by_id": {
            "title": "Received By Id",
            "type": "integer"
          },
          "release_report": {
            "title": "Release Report",
            "type": "boolean"
          },
          "requested_by": {
            "title": "Requested By",
            "type": "object"
          },
          "requested_by_id": {
            "title": "Requested By Id",
            "type": "integer"
          },
          "requested_for": {
            "title": "Requested For",
            "type": "object"
          },
          "requested_for_id": {
            "title": "Requested For Id",
            "type": "integer"
          },
          "revision_notes": {
            "title": "Revision Notes",
            "type": "string"
          },
          "special_instructions": {
            "title": "Special Instructions",
            "type": "string"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "type": "string"
          },
          "total_samples_created": {
            "default": 0,
            "title": "Total Samples Created",
            "type": "integer"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          }
        },
        "title": "OrderSchema",
        "type": "object"
      },
      "CreateResponseOrderSchema.a9993e3.OrderSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseOrderSchema.a9993e3.OrderSchema"
        },
        "title": "OrderSchemaList",
        "type": "array"
      },
      "CreateResponsePanelSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponsePanelSchema.a9993e3.PanelSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponsePanelSchema",
        "type": "object"
      },
      "CreateResponsePanelSchema.a9993e3.PanelSchema": {
        "properties": {
          "assays": {
            "items": {
              "type": "object"
            },
            "title": "Assays",
            "type": "array"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "show_in_portal": {
            "title": "Show In Portal",
            "type": "boolean"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "title": "PanelSchema",
        "type": "object"
      },
      "CreateResponsePanelSchema.a9993e3.PanelSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponsePanelSchema.a9993e3.PanelSchema"
        },
        "title": "PanelSchemaList",
        "type": "array"
      },
      "CreateResponsePaymentSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponsePaymentSchema.a9993e3.PaymentSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponsePaymentSchema",
        "type": "object"
      },
      "CreateResponsePaymentSchema.a9993e3.PaymentSchema": {
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "number"
          },
          "check_number": {
            "title": "Check Number",
            "type": "string"
          },
          "created_by_api_client": {
            "title": "Created By Api Client",
            "type": "object"
          },
          "created_by_api_client_id": {
            "title": "Created By Api Client Id",
            "type": "string"
          },
          "created_by_user": {
            "title": "Created By User",
            "type": "object"
          },
          "created_by_user_id": {
            "title": "Created By User Id",
            "type": "integer"
          },
          "customer": {
            "title": "Customer",
            "type": "object"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "payment_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Payment Date"
          },
          "payment_type": {
            "title": "Payment Type",
            "type": "string"
          },
          "payment_type_id": {
            "title": "Payment Type Id",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "unapplied_amount": {
            "title": "Unapplied Amount",
            "type": "number"
          }
        },
        "title": "PaymentSchema",
        "type": "object"
      },
      "CreateResponsePaymentSchema.a9993e3.PaymentSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponsePaymentSchema.a9993e3.PaymentSchema"
        },
        "title": "PaymentSchemaList",
        "type": "array"
      },
      "CreateResponsePrintDocSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponsePrintDocSchema.a9993e3.PrintDocSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponsePrintDocSchema",
        "type": "object"
      },
      "CreateResponsePrintDocSchema.a9993e3.PrintDocSchema": {
        "properties": {
          "asset_id": {
            "title": "Asset Id",
            "type": "integer"
          },
          "attach_to_email": {
            "title": "Attach To Email",
            "type": "boolean"
          },
          "attach_to_report": {
            "title": "Attach To Report",
            "type": "boolean"
          },
          "attach_to_report_email": {
            "title": "Attach To Report Email",
            "type": "boolean"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "integer"
          },
          "date_generated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Generated"
          },
          "generated_by_api_client_id": {
            "title": "Generated By Api Client Id",
            "type": "string"
          },
          "generated_by_contact_id": {
            "title": "Generated By Contact Id",
            "type": "integer"
          },
          "generated_by_id": {
            "title": "Generated By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "object_id": {
            "title": "Object Id",
            "type": "integer"
          },
          "render_error": {
            "title": "Render Error",
            "type": "string"
          },
          "render_params": {
            "title": "Render Params",
            "type": "string"
          },
          "render_status": {
            "title": "Render Status",
            "type": "string"
          },
          "report_config_id": {
            "title": "Report Config Id",
            "type": "integer"
          },
          "signature_cancelled_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Signature Cancelled At"
          },
          "signature_cancelled_by_id": {
            "title": "Signature Cancelled By Id",
            "type": "integer"
          },
          "signature_completed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Signature Completed At"
          },
          "signature_error": {
            "title": "Signature Error",
            "type": "string"
          },
          "signature_request_id": {
            "title": "Signature Request Id",
            "type": "string"
          },
          "signature_requested_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Signature Requested At"
          },
          "signature_requested_by_id": {
            "title": "Signature Requested By Id",
            "type": "integer"
          },
          "signature_status": {
            "title": "Signature Status",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "integer"
          }
        },
        "title": "PrintDocSchema",
        "type": "object"
      },
      "CreateResponsePrintDocSchema.a9993e3.PrintDocSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponsePrintDocSchema.a9993e3.PrintDocSchema"
        },
        "title": "PrintDocSchemaList",
        "type": "array"
      },
      "CreateResponseSampleSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseSampleSchema.a9993e3.SampleSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseSampleSchema",
        "type": "object"
      },
      "CreateResponseSampleSchema.a9993e3.SampleSchema": {
        "properties": {
          "accessioning_type": {
            "title": "Accessioning Type",
            "type": "object"
          },
          "accessioning_type_id": {
            "title": "Accessioning Type Id",
            "type": "integer"
          },
          "batches": {
            "items": {
              "type": "object"
            },
            "title": "Batches",
            "type": "array"
          },
          "cc_id": {
            "title": "Cc Id",
            "type": "string"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "complete": {
            "title": "Complete",
            "type": "boolean"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_received": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Received"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "inventory_stock": {
            "title": "Inventory Stock",
            "type": "object"
          },
          "inventory_stock_id": {
            "title": "Inventory Stock Id",
            "type": "integer"
          },
          "inventory_stock_quantity_used": {
            "title": "Inventory Stock Quantity Used",
            "type": "number"
          },
          "lab_id": {
            "title": "Lab Id",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "linked": {
            "title": "Linked",
            "type": "boolean"
          },
          "location": {
            "title": "Location",
            "type": "object"
          },
          "location_id": {
            "title": "Location Id",
            "type": "integer"
          },
          "metrc_uid": {
            "title": "Metrc Uid",
            "type": "string"
          },
          "most_recent_report": {
            "title": "Most Recent Report",
            "type": "object"
          },
          "most_recent_report_id": {
            "title": "Most Recent Report Id",
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "order_request": {
            "title": "Order Request",
            "type": "boolean"
          },
          "parent_sample": {
            "title": "Parent Sample",
            "type": "object"
          },
          "parent_sample_id": {
            "title": "Parent Sample Id",
            "type": "integer"
          },
          "point_of_collection": {
            "title": "Point Of Collection",
            "type": "string"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "received": {
            "title": "Received",
            "type": "boolean"
          },
          "reports": {
            "items": {
              "type": "object"
            },
            "title": "Reports",
            "type": "array"
          },
          "sample_type": {
            "title": "Sample Type",
            "type": "string"
          },
          "source": {
            "title": "Source",
            "type": "object"
          },
          "source_id": {
            "title": "Source Id",
            "type": "integer"
          },
          "sub_samples": {
            "items": {
              "type": "object"
            },
            "title": "Sub Samples",
            "type": "array"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "tests": {
            "items": {
              "type": "object"
            },
            "title": "Tests",
            "type": "array"
          },
          "time_of_collection": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Time Of Collection"
          }
        },
        "title": "SampleSchema",
        "type": "object"
      },
      "CreateResponseSampleSchema.a9993e3.SampleSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseSampleSchema.a9993e3.SampleSchema"
        },
        "title": "SampleSchemaList",
        "type": "array"
      },
      "CreateResponseTestSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseTestSchema.a9993e3.TestSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseTestSchema",
        "type": "object"
      },
      "CreateResponseTestSchema.a9993e3.TestSchema": {
        "properties": {
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "complete_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Complete Date"
          },
          "customer_update": {
            "title": "Customer Update",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "date_results_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Results Released"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "estimated_complete_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Complete Date"
          },
          "estimated_start_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Start Date"
          },
          "free_response": {
            "title": "Free Response",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "last_updated_unix_timestamp": {
            "title": "Last Updated Unix Timestamp",
            "type": "number"
          },
          "most_recent_report": {
            "title": "Most Recent Report",
            "type": "object"
          },
          "most_recent_report_id": {
            "title": "Most Recent Report Id",
            "type": "integer"
          },
          "panel": {
            "title": "Panel",
            "type": "object"
          },
          "panel_group_uuid": {
            "title": "Panel Group Uuid",
            "type": "string"
          },
          "panel_id": {
            "title": "Panel Id",
            "type": "integer"
          },
          "priority": {
            "title": "Priority",
            "type": "integer"
          },
          "priority_current": {
            "title": "Priority Current",
            "type": "boolean"
          },
          "priority_done": {
            "title": "Priority Done",
            "type": "boolean"
          },
          "priority_group_uuid": {
            "title": "Priority Group Uuid",
            "type": "string"
          },
          "publish_worksheet_to_portal": {
            "default": false,
            "title": "Publish Worksheet To Portal",
            "type": "boolean"
          },
          "release_report": {
            "title": "Release Report",
            "type": "boolean"
          },
          "release_results": {
            "title": "Release Results",
            "type": "boolean"
          },
          "reported_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Reported Date"
          },
          "results": {
            "title": "Results",
            "type": "string"
          },
          "sample": {
            "title": "Sample",
            "type": "object"
          },
          "sample_id": {
            "title": "Sample Id",
            "type": "integer"
          },
          "specification_overall": {
            "title": "Specification Overall",
            "type": "string"
          },
          "start_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Start Date"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "tech": {
            "title": "Tech",
            "type": "object"
          },
          "tech_id": {
            "title": "Tech Id",
            "type": "integer"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          },
          "worksheet_data": {
            "title": "Worksheet Data",
            "type": "object"
          }
        },
        "title": "TestSchema",
        "type": "object"
      },
      "CreateResponseTestSchema.a9993e3.TestSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseTestSchema.a9993e3.TestSchema"
        },
        "title": "TestSchemaList",
        "type": "array"
      },
      "CreateResponseTurnaroundSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateResponseTurnaroundSchema.a9993e3.TurnaroundSchemaList"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateResponseTurnaroundSchema",
        "type": "object"
      },
      "CreateResponseTurnaroundSchema.a9993e3.TurnaroundSchema": {
        "properties": {
          "business_days_only": {
            "title": "Business Days Only",
            "type": "boolean"
          },
          "default_duration": {
            "title": "Default Duration",
            "type": "integer"
          },
          "default_flat_surcharge": {
            "title": "Default Flat Surcharge",
            "type": "number"
          },
          "default_percentage_surcharge": {
            "title": "Default Percentage Surcharge",
            "type": "number"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "divisions": {
            "items": {
              "type": "object"
            },
            "title": "Divisions",
            "type": "array"
          },
          "flag_background_color": {
            "title": "Flag Background Color",
            "type": "string"
          },
          "flag_text_color": {
            "title": "Flag Text Color",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "title": "TurnaroundSchema",
        "type": "object"
      },
      "CreateResponseTurnaroundSchema.a9993e3.TurnaroundSchemaList": {
        "items": {
          "$ref": "#/components/schemas/CreateResponseTurnaroundSchema.a9993e3.TurnaroundSchema"
        },
        "title": "TurnaroundSchemaList",
        "type": "array"
      },
      "CreateSampleSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateSampleSchemaList.a9993e3.CreateSampleSchema"
        },
        "title": "CreateSampleSchemaList",
        "type": "array"
      },
      "CreateSampleSchemaList.a9993e3.CreateSampleSchema": {
        "example": {
          "description": "Red and large",
          "sample_type": "Stone"
        },
        "properties": {
          "accessioning_type": {
            "title": "Accessioning Type",
            "type": "object"
          },
          "accessioning_type_id": {
            "title": "Accessioning Type Id",
            "type": "integer"
          },
          "batches": {
            "items": {
              "type": "object"
            },
            "title": "Batches",
            "type": "array"
          },
          "cc_id": {
            "title": "Cc Id",
            "type": "string"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "complete": {
            "title": "Complete",
            "type": "boolean"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_received": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Received"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "inventory_stock": {
            "title": "Inventory Stock",
            "type": "object"
          },
          "inventory_stock_id": {
            "title": "Inventory Stock Id",
            "type": "integer"
          },
          "inventory_stock_quantity_used": {
            "title": "Inventory Stock Quantity Used",
            "type": "number"
          },
          "lab_id": {
            "title": "Lab Id",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "linked": {
            "title": "Linked",
            "type": "boolean"
          },
          "location": {
            "title": "Location",
            "type": "object"
          },
          "location_id": {
            "title": "Location Id",
            "type": "integer"
          },
          "metrc_uid": {
            "title": "Metrc Uid",
            "type": "string"
          },
          "most_recent_report": {
            "title": "Most Recent Report",
            "type": "object"
          },
          "most_recent_report_id": {
            "title": "Most Recent Report Id",
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "order_request": {
            "title": "Order Request",
            "type": "boolean"
          },
          "parent_sample": {
            "title": "Parent Sample",
            "type": "object"
          },
          "parent_sample_id": {
            "title": "Parent Sample Id",
            "type": "integer"
          },
          "point_of_collection": {
            "title": "Point Of Collection",
            "type": "string"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "received": {
            "title": "Received",
            "type": "boolean"
          },
          "reports": {
            "items": {
              "type": "object"
            },
            "title": "Reports",
            "type": "array"
          },
          "sample_type": {
            "title": "Sample Type",
            "type": "string"
          },
          "source": {
            "title": "Source",
            "type": "object"
          },
          "source_id": {
            "title": "Source Id",
            "type": "integer"
          },
          "sub_samples": {
            "items": {
              "type": "object"
            },
            "title": "Sub Samples",
            "type": "array"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "tests": {
            "items": {
              "type": "object"
            },
            "title": "Tests",
            "type": "array"
          },
          "time_of_collection": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Time Of Collection"
          }
        },
        "title": "CreateSampleSchema",
        "type": "object"
      },
      "CreateTestSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateTestSchemaList.a9993e3.CreateTestSchema"
        },
        "title": "CreateTestSchemaList",
        "type": "array"
      },
      "CreateTestSchemaList.a9993e3.CreateTestSchema": {
        "example": {
          "assay_id": 456,
          "sample_id": 123
        },
        "properties": {
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "complete_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Complete Date"
          },
          "customer_update": {
            "title": "Customer Update",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "date_results_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Results Released"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "estimated_complete_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Complete Date"
          },
          "estimated_start_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Start Date"
          },
          "free_response": {
            "title": "Free Response",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "last_updated_unix_timestamp": {
            "title": "Last Updated Unix Timestamp",
            "type": "number"
          },
          "most_recent_report": {
            "title": "Most Recent Report",
            "type": "object"
          },
          "most_recent_report_id": {
            "title": "Most Recent Report Id",
            "type": "integer"
          },
          "panel": {
            "title": "Panel",
            "type": "object"
          },
          "panel_group_uuid": {
            "title": "Panel Group Uuid",
            "type": "string"
          },
          "panel_id": {
            "title": "Panel Id",
            "type": "integer"
          },
          "priority": {
            "title": "Priority",
            "type": "integer"
          },
          "priority_current": {
            "title": "Priority Current",
            "type": "boolean"
          },
          "priority_done": {
            "title": "Priority Done",
            "type": "boolean"
          },
          "priority_group_uuid": {
            "title": "Priority Group Uuid",
            "type": "string"
          },
          "publish_worksheet_to_portal": {
            "default": false,
            "title": "Publish Worksheet To Portal",
            "type": "boolean"
          },
          "release_report": {
            "title": "Release Report",
            "type": "boolean"
          },
          "release_results": {
            "title": "Release Results",
            "type": "boolean"
          },
          "reported_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Reported Date"
          },
          "results": {
            "title": "Results",
            "type": "string"
          },
          "sample": {
            "title": "Sample",
            "type": "object"
          },
          "sample_id": {
            "title": "Sample Id",
            "type": "integer"
          },
          "specification_overall": {
            "title": "Specification Overall",
            "type": "string"
          },
          "start_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Start Date"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "tech": {
            "title": "Tech",
            "type": "object"
          },
          "tech_id": {
            "title": "Tech Id",
            "type": "integer"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          },
          "worksheet_data": {
            "title": "Worksheet Data",
            "type": "object"
          }
        },
        "required": [
          "sample_id",
          "assay_id"
        ],
        "title": "CreateTestSchema",
        "type": "object"
      },
      "CreateTurnaroundSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CreateTurnaroundSchemaList.a9993e3.CreateTurnaroundSchema"
        },
        "title": "CreateTurnaroundSchemaList",
        "type": "array"
      },
      "CreateTurnaroundSchemaList.a9993e3.CreateTurnaroundSchema": {
        "example": {
          "default_duration": 1,
          "flag_background_color": "#81C868",
          "flag_text_color": "#FFFFF",
          "name": "One-Day Rush"
        },
        "properties": {
          "business_days_only": {
            "title": "Business Days Only",
            "type": "boolean"
          },
          "default_duration": {
            "title": "Default Duration",
            "type": "integer"
          },
          "default_flat_surcharge": {
            "title": "Default Flat Surcharge",
            "type": "number"
          },
          "default_percentage_surcharge": {
            "title": "Default Percentage Surcharge",
            "type": "number"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "divisions": {
            "items": {
              "type": "object"
            },
            "title": "Divisions",
            "type": "array"
          },
          "flag_background_color": {
            "title": "Flag Background Color",
            "type": "string"
          },
          "flag_text_color": {
            "title": "Flag Text Color",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name",
          "flag_background_color",
          "flag_text_color",
          "default_duration"
        ],
        "title": "CreateTurnaroundSchema",
        "type": "object"
      },
      "CustomerFilterSchema.7a3ad72": {
        "properties": {
          "additional_fields_encoded": {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "CUSTOMER"
            },
            "title": "Additional Fields Encoded",
            "type": "string"
          },
          "api_client_ids": {
            "items": {
              "type": "string"
            },
            "title": "Api Client Ids",
            "type": "array"
          },
          "assay_ids": {
            "items": {
              "type": "string"
            },
            "title": "Assay Ids",
            "type": "array"
          },
          "contact_ids": {
            "items": {
              "type": "string"
            },
            "title": "Contact Ids",
            "type": "array"
          },
          "customer_ids": {
            "items": {
              "type": "string"
            },
            "title": "Customer Ids",
            "type": "array"
          },
          "customer_tags_action": {
            "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.TagActionValues"
          },
          "include_deleted": {
            "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.IncludeDeletedValues"
          },
          "include_sub_customers": {
            "title": "Include Sub Customers",
            "type": "boolean"
          },
          "integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Integration Ids",
            "type": "array"
          },
          "invoice_last_updated": {
            "description": "Return the invoices updated after this unix timestamp",
            "title": "Invoice Last Updated",
            "type": "string"
          },
          "last_updated": {
            "description": "Last updated unix timestamp",
            "title": "Last Updated",
            "type": "string"
          },
          "name_keyword": {
            "title": "Name Keyword",
            "type": "string"
          },
          "not_integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Not Integration Ids",
            "type": "array"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          },
          "sort_by": {
            "title": "Sort By",
            "type": "string"
          },
          "sort_order": {
            "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.SortOrderValues"
          },
          "source_ids": {
            "items": {
              "type": "string"
            },
            "title": "Source Ids",
            "type": "array"
          },
          "statuses": {
            "items": {
              "type": "string"
            },
            "title": "Statuses",
            "type": "array"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          }
        },
        "title": "CustomerFilterSchema",
        "type": "object"
      },
      "CustomerFilterSchema.7a3ad72.IncludeDeletedValues": {
        "description": "An enumeration.",
        "enum": [
          "TRUE",
          "DELETED_ONLY"
        ],
        "title": "IncludeDeletedValues"
      },
      "CustomerFilterSchema.7a3ad72.SortOrderValues": {
        "description": "An enumeration.",
        "enum": [
          "ASC",
          "DESC"
        ],
        "title": "SortOrderValues"
      },
      "CustomerFilterSchema.7a3ad72.TagActionValues": {
        "description": "An enumeration.",
        "enum": [
          "Or",
          "And",
          "Not"
        ],
        "title": "TagActionValues"
      },
      "EntityFilterBaseModel.7a3ad72": {
        "properties": {
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          }
        },
        "title": "EntityFilterBaseModel",
        "type": "object"
      },
      "EntityIntegrationVendorFilterSchema.7a3ad72": {
        "properties": {
          "entity_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Entity Ids",
            "type": "array"
          },
          "integration_vendor_ids": {
            "items": {
              "type": "string"
            },
            "title": "Integration Vendor Ids",
            "type": "array"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          }
        },
        "title": "EntityIntegrationVendorFilterSchema",
        "type": "object"
      },
      "GenReportFilterSchema.7a3ad72": {
        "properties": {
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "order_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Order Ids",
            "type": "array"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          },
          "public": {
            "title": "Public",
            "type": "boolean"
          },
          "report_config_levels": {
            "items": {
              "type": "string"
            },
            "title": "Report Config Levels",
            "type": "array"
          },
          "report_render_statuses": {
            "items": {
              "type": "string"
            },
            "title": "Report Render Statuses",
            "type": "array"
          },
          "sample_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Sample Ids",
            "type": "array"
          },
          "statuses": {
            "items": {
              "type": "string"
            },
            "title": "Statuses",
            "type": "array"
          },
          "test_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Test Ids",
            "type": "array"
          }
        },
        "title": "GenReportFilterSchema",
        "type": "object"
      },
      "GenReportPublishSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/GenReportPublishSchemaList.a9993e3.GenReportPublishSchema"
        },
        "title": "GenReportPublishSchemaList",
        "type": "array"
      },
      "GenReportPublishSchemaList.a9993e3.GenReportPublishSchema": {
        "properties": {
          "additional_emails": {
            "items": {
              "type": "string"
            },
            "title": "Additional Emails",
            "type": "array"
          },
          "attach_report": {
            "title": "Attach Report",
            "type": "boolean"
          },
          "group_by": {
            "title": "Group By",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "send_emails": {
            "title": "Send Emails",
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ],
        "title": "GenReportPublishSchema",
        "type": "object"
      },
      "GeneralErrorResponseSchema.69d0de0": {
        "properties": {
          "error_description": {
            "title": "Error Description",
            "type": "string"
          },
          "error_token": {
            "title": "Error Token",
            "type": "string"
          },
          "error_type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "error_description",
          "error_type",
          "error_token"
        ],
        "title": "GeneralErrorResponseSchema",
        "type": "object"
      },
      "GenerateLabelSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/GenerateLabelSchemaList.a9993e3.GenerateLabelSchema"
        },
        "title": "GenerateLabelSchemaList",
        "type": "array"
      },
      "GenerateLabelSchemaList.a9993e3.GenerateLabelSchema": {
        "properties": {
          "count": {
            "example": 1,
            "title": "Count",
            "type": "integer"
          },
          "id": {
            "example": 123,
            "title": "Id",
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "title": "GenerateLabelSchema",
        "type": "object"
      },
      "GetWorksheetParams.7a3ad72": {
        "properties": {
          "raw_worksheet_data": {
            "title": "Raw Worksheet Data",
            "type": "boolean"
          },
          "worksheet_config": {
            "title": "Worksheet Config",
            "type": "boolean"
          }
        },
        "title": "GetWorksheetParams",
        "type": "object"
      },
      "InvoiceEmailResponseSchema.69d0de0": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InvoiceEmailResponseSchema.69d0de0.InvoiceEmailResponseModel"
          }
        },
        "required": [
          "data"
        ],
        "title": "InvoiceEmailResponseSchema",
        "type": "object"
      },
      "InvoiceEmailResponseSchema.69d0de0.InvoiceEmailResponseModel": {
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          },
          "queueId": {
            "title": "Queueid",
            "type": "integer"
          }
        },
        "required": [
          "message",
          "queueId"
        ],
        "title": "InvoiceEmailResponseModel",
        "type": "object"
      },
      "InvoiceFilterSchema.7a3ad72": {
        "properties": {
          "additional_fields_encoded": {
            "description": "Base64 Encoded Invoice Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "INVOICE"
            },
            "title": "Additional Fields Encoded",
            "type": "string"
          },
          "customer_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Customer Ids",
            "type": "array"
          },
          "due_date_end": {
            "title": "Due Date End",
            "type": "string"
          },
          "due_date_filter_range": {
            "title": "Due Date Filter Range",
            "type": "string"
          },
          "due_date_start": {
            "title": "Due Date Start",
            "type": "string"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "include_deleted": {
            "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.IncludeDeletedValues"
          },
          "integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Integration Ids",
            "type": "array"
          },
          "invoice_date_end": {
            "title": "Invoice Date End",
            "type": "string"
          },
          "invoice_date_filter_range": {
            "title": "Invoice Date Filter Range",
            "type": "string"
          },
          "invoice_date_start": {
            "title": "Invoice Date Start",
            "type": "string"
          },
          "invoice_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Invoice Ids",
            "type": "array"
          },
          "last_updated": {
            "description": "Last updated unix timestamp",
            "title": "Last Updated",
            "type": "string"
          },
          "not_integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Not Integration Ids",
            "type": "array"
          },
          "order_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Order Ids",
            "type": "array"
          },
          "order_statuses": {
            "items": {
              "type": "string"
            },
            "title": "Order Statuses",
            "type": "array"
          },
          "overdue": {
            "title": "Overdue",
            "type": "boolean"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          },
          "paid_statuses": {
            "items": {
              "type": "string"
            },
            "title": "Paid Statuses",
            "type": "array"
          },
          "payment_term": {
            "title": "Payment Term",
            "type": "string"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "sort_by": {
            "title": "Sort By",
            "type": "string"
          },
          "sort_order": {
            "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.SortOrderValues"
          },
          "statuses": {
            "items": {
              "type": "string"
            },
            "title": "Statuses",
            "type": "array"
          },
          "total_amount": {
            "title": "Total Amount",
            "type": "string"
          },
          "total_amount_2": {
            "title": "Total Amount 2",
            "type": "string"
          },
          "total_amount_logic": {
            "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.InvoiceTotalAmountLogicValues"
          }
        },
        "title": "InvoiceFilterSchema",
        "type": "object"
      },
      "InvoiceFilterSchema.7a3ad72.IncludeDeletedValues": {
        "description": "An enumeration.",
        "enum": [
          "TRUE",
          "DELETED_ONLY"
        ],
        "title": "IncludeDeletedValues"
      },
      "InvoiceFilterSchema.7a3ad72.InvoiceTotalAmountLogicValues": {
        "description": "An enumeration.",
        "enum": [
          "gt",
          "gte",
          "lt",
          "lte",
          "eq",
          "btwn"
        ],
        "title": "InvoiceTotalAmountLogicValues"
      },
      "InvoiceFilterSchema.7a3ad72.SortOrderValues": {
        "description": "An enumeration.",
        "enum": [
          "ASC",
          "DESC"
        ],
        "title": "SortOrderValues"
      },
      "InvoicePaymentUpdateSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/InvoicePaymentUpdateSchemaList.a9993e3.InvoicePaymentUpdateSchema"
        },
        "title": "InvoicePaymentUpdateSchemaList",
        "type": "array"
      },
      "InvoicePaymentUpdateSchemaList.a9993e3.InvoicePaymentUpdateSchema": {
        "example": {
          "applied_amount": 200,
          "invoice_id": 123
        },
        "properties": {
          "invoice_id": {
            "title": "Invoice Id",
            "type": "integer"
          }
        },
        "required": [
          "invoice_id"
        ],
        "title": "InvoicePaymentUpdateSchema",
        "type": "object"
      },
      "ListAPIClientSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListAPIClientSchema.a9993e3.APIClientSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListAPIClientSchema",
        "type": "object"
      },
      "ListAPIClientSchema.a9993e3.APIClientSchema": {
        "properties": {
          "api_versions": {
            "title": "Api Versions",
            "type": "string"
          },
          "authorized_redirect_uri": {
            "maxLength": 500,
            "title": "Authorized Redirect Uri",
            "type": "string"
          },
          "client_type": {
            "maxLength": 250,
            "title": "Client Type",
            "type": "string"
          },
          "confidential": {
            "title": "Confidential",
            "type": "boolean"
          },
          "cors_origin": {
            "maxLength": 500,
            "title": "Cors Origin",
            "type": "string"
          },
          "customers": {
            "items": {
              "type": "object"
            },
            "title": "Customers",
            "type": "array"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_rotated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Rotated"
          },
          "generated_by": {
            "title": "Generated By",
            "type": "object"
          },
          "generated_by_id": {
            "title": "Generated By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "title": "Name",
            "type": "string"
          },
          "read_only": {
            "title": "Read Only",
            "type": "boolean"
          },
          "scopes_json": {
            "title": "Scopes Json",
            "type": "object"
          }
        },
        "title": "APIClientSchema",
        "type": "object"
      },
      "ListAPIClientSchema.a9993e3.APIClientSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListAPIClientSchema.a9993e3.APIClientSchema"
        },
        "title": "APIClientSchemaList",
        "type": "array"
      },
      "ListAccessioningTypeSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListAccessioningTypeSchema.a9993e3.AccessioningTypeSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListAccessioningTypeSchema",
        "type": "object"
      },
      "ListAccessioningTypeSchema.a9993e3.AccessioningTypeSchema": {
        "properties": {
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "value": {
            "title": "Value",
            "type": "string"
          }
        },
        "title": "AccessioningTypeSchema",
        "type": "object"
      },
      "ListAccessioningTypeSchema.a9993e3.AccessioningTypeSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListAccessioningTypeSchema.a9993e3.AccessioningTypeSchema"
        },
        "title": "AccessioningTypeSchemaList",
        "type": "array"
      },
      "ListAssaySchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListAssaySchema.a9993e3.AssaySchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListAssaySchema",
        "type": "object"
      },
      "ListAssaySchema.a9993e3.AssaySchema": {
        "properties": {
          "accessioning_types": {
            "items": {
              "type": "object"
            },
            "title": "Accessioning Types",
            "type": "array"
          },
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "batch_inventory_template_id": {
            "title": "Batch Inventory Template Id",
            "type": "integer"
          },
          "batch_protocol_id": {
            "title": "Batch Protocol Id",
            "type": "integer"
          },
          "batch_worksheet_ent": {
            "title": "Batch Worksheet Ent",
            "type": "object"
          },
          "batch_worksheet_id": {
            "title": "Batch Worksheet Id",
            "type": "integer"
          },
          "category": {
            "title": "Category",
            "type": "object"
          },
          "category_id": {
            "title": "Category Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "default_technician": {
            "title": "Default Technician",
            "type": "object"
          },
          "default_technician_id": {
            "title": "Default Technician Id",
            "type": "integer"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "document_id": {
            "title": "Document Id",
            "type": "integer"
          },
          "duration": {
            "title": "Duration",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "inventory_template_id": {
            "title": "Inventory Template Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "method": {
            "title": "Method",
            "type": "string"
          },
          "method_detection_limit": {
            "title": "Method Detection Limit",
            "type": "number"
          },
          "order_report_config_id": {
            "title": "Order Report Config Id",
            "type": "integer"
          },
          "panels": {
            "items": {
              "type": "object"
            },
            "title": "Panels",
            "type": "array"
          },
          "per_sample_fee_name": {
            "title": "Per Sample Fee Name",
            "type": "string"
          },
          "per_sample_fee_price": {
            "title": "Per Sample Fee Price",
            "type": "number"
          },
          "percent_recovery_lower_limit": {
            "title": "Percent Recovery Lower Limit",
            "type": "number"
          },
          "percent_recovery_upper_limit": {
            "title": "Percent Recovery Upper Limit",
            "type": "number"
          },
          "protocol_id": {
            "title": "Protocol Id",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "relative_percent_difference_limit": {
            "title": "Relative Percent Difference Limit",
            "type": "number"
          },
          "reporting_limit": {
            "title": "Reporting Limit",
            "type": "number"
          },
          "sample_level_worksheet": {
            "title": "Sample Level Worksheet",
            "type": "boolean"
          },
          "sample_report_config_id": {
            "title": "Sample Report Config Id",
            "type": "integer"
          },
          "show_in_portal": {
            "title": "Show In Portal",
            "type": "boolean"
          },
          "sort_order": {
            "title": "Sort Order",
            "type": "integer"
          },
          "spike_level": {
            "title": "Spike Level",
            "type": "number"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "team": {
            "title": "Team",
            "type": "object"
          },
          "team_id": {
            "title": "Team Id",
            "type": "integer"
          },
          "test_report_config_id": {
            "title": "Test Report Config Id",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "turnarounds": {
            "items": {
              "type": "object"
            },
            "title": "Turnarounds",
            "type": "array"
          },
          "units": {
            "title": "Units",
            "type": "string"
          },
          "worksheet_ent": {
            "title": "Worksheet Ent",
            "type": "object"
          },
          "worksheet_id": {
            "title": "Worksheet Id",
            "type": "integer"
          }
        },
        "title": "AssaySchema",
        "type": "object"
      },
      "ListAssaySchema.a9993e3.AssaySchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListAssaySchema.a9993e3.AssaySchema"
        },
        "title": "AssaySchemaList",
        "type": "array"
      },
      "ListAttachmentSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListAttachmentSchema.a9993e3.AttachmentSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListAttachmentSchema",
        "type": "object"
      },
      "ListAttachmentSchema.a9993e3.AttachmentSchema": {
        "properties": {
          "asset_id": {
            "title": "Asset Id",
            "type": "integer"
          },
          "attach_to_report": {
            "title": "Attach To Report",
            "type": "boolean"
          },
          "attach_to_report_email": {
            "title": "Attach To Report Email",
            "type": "boolean"
          },
          "attachment_data_type": {
            "title": "Attachment Data Type",
            "type": "string"
          },
          "attachment_upload_type": {
            "title": "Attachment Upload Type",
            "type": "string"
          },
          "date_public": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Public"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "id_hash": {
            "title": "Id Hash",
            "type": "string"
          },
          "ignore_sns": {
            "title": "Ignore Sns",
            "type": "boolean"
          },
          "is_public": {
            "title": "Is Public",
            "type": "boolean"
          },
          "made_public_by_api_client_id": {
            "title": "Made Public By Api Client Id",
            "type": "string"
          },
          "made_public_by_id": {
            "title": "Made Public By Id",
            "type": "integer"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "object_id": {
            "title": "Object Id",
            "type": "integer"
          },
          "object_ids": {
            "title": "Object Ids",
            "type": "string"
          },
          "published_to_portal": {
            "title": "Published To Portal",
            "type": "boolean"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "title": "AttachmentSchema",
        "type": "object"
      },
      "ListAttachmentSchema.a9993e3.AttachmentSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListAttachmentSchema.a9993e3.AttachmentSchema"
        },
        "title": "AttachmentSchemaList",
        "type": "array"
      },
      "ListBatchSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListBatchSchema.a9993e3.BatchSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListBatchSchema",
        "type": "object"
      },
      "ListBatchSchema.a9993e3.BatchSchema": {
        "properties": {
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "children": {
            "items": {
              "type": "object"
            },
            "title": "Children",
            "type": "array"
          },
          "control_group": {
            "title": "Control Group",
            "type": "object"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "display_name": {
            "title": "Display Name",
            "type": "string"
          },
          "equipment_list": {
            "items": {
              "type": "object"
            },
            "title": "Equipment List",
            "type": "array"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "parents": {
            "items": {
              "type": "object"
            },
            "title": "Parents",
            "type": "array"
          },
          "platemap_format": {
            "title": "Platemap Format",
            "type": "string"
          },
          "samples": {
            "items": {
              "type": "object"
            },
            "title": "Samples",
            "type": "array"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "tests": {
            "items": {
              "type": "object"
            },
            "title": "Tests",
            "type": "array"
          },
          "worksheet": {
            "title": "Worksheet",
            "type": "object"
          },
          "worksheet_data": {
            "title": "Worksheet Data",
            "type": "object"
          },
          "worksheet_id": {
            "title": "Worksheet Id",
            "type": "integer"
          }
        },
        "title": "BatchSchema",
        "type": "object"
      },
      "ListBatchSchema.a9993e3.BatchSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListBatchSchema.a9993e3.BatchSchema"
        },
        "title": "BatchSchemaList",
        "type": "array"
      },
      "ListCategorySchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListCategorySchema.a9993e3.CategorySchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListCategorySchema",
        "type": "object"
      },
      "ListCategorySchema.a9993e3.CategorySchema": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "title": "CategorySchema",
        "type": "object"
      },
      "ListCategorySchema.a9993e3.CategorySchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListCategorySchema.a9993e3.CategorySchema"
        },
        "title": "CategorySchemaList",
        "type": "array"
      },
      "ListCommentSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListCommentSchema.a9993e3.CommentSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListCommentSchema",
        "type": "object"
      },
      "ListCommentSchema.a9993e3.CommentSchema": {
        "properties": {
          "contact_id": {
            "title": "Contact Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "public": {
            "title": "Public",
            "type": "boolean"
          },
          "user_id": {
            "title": "User Id",
            "type": "integer"
          }
        },
        "title": "CommentSchema",
        "type": "object"
      },
      "ListCommentSchema.a9993e3.CommentSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListCommentSchema.a9993e3.CommentSchema"
        },
        "title": "CommentSchemaList",
        "type": "array"
      },
      "ListContactSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListContactSchema.a9993e3.ContactSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListContactSchema",
        "type": "object"
      },
      "ListContactSchema.a9993e3.ContactSchema": {
        "properties": {
          "address": {
            "maxLength": 1000,
            "title": "Address",
            "type": "string"
          },
          "customers": {
            "items": {
              "type": "object"
            },
            "title": "Customers",
            "type": "array"
          },
          "email_address": {
            "maxLength": 500,
            "title": "Email Address",
            "type": "string"
          },
          "fax": {
            "maxLength": 50,
            "title": "Fax",
            "type": "string"
          },
          "first_name": {
            "maxLength": 100,
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "is_doctor": {
            "title": "Is Doctor",
            "type": "boolean"
          },
          "last_name": {
            "maxLength": 100,
            "title": "Last Name",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "mobile": {
            "maxLength": 50,
            "title": "Mobile",
            "type": "string"
          },
          "phone": {
            "maxLength": 50,
            "title": "Phone",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          }
        },
        "title": "ContactSchema",
        "type": "object"
      },
      "ListContactSchema.a9993e3.ContactSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListContactSchema.a9993e3.ContactSchema"
        },
        "title": "ContactSchemaList",
        "type": "array"
      },
      "ListCustomerSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListCustomerSchema.a9993e3.CustomerSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListCustomerSchema",
        "type": "object"
      },
      "ListCustomerSchema.a9993e3.CustomerSchema": {
        "properties": {
          "address": {
            "maxLength": 1000,
            "title": "Address",
            "type": "string"
          },
          "city_name": {
            "maxLength": 100,
            "title": "City Name",
            "type": "string"
          },
          "comments": {
            "maxLength": 2000,
            "title": "Comments",
            "type": "string"
          },
          "company_discount": {
            "title": "Company Discount",
            "type": "number"
          },
          "confident_cannabis_customer_id": {
            "title": "Confident Cannabis Customer Id",
            "type": "string"
          },
          "contacts": {
            "items": {
              "type": "object"
            },
            "title": "Contacts",
            "type": "array"
          },
          "country_name": {
            "maxLength": 45,
            "title": "Country Name",
            "type": "string"
          },
          "customer_name": {
            "maxLength": 250,
            "title": "Customer Name",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "fax": {
            "title": "Fax",
            "type": "string"
          },
          "group_name": {
            "title": "Group Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "id_abbreviation": {
            "maxLength": 50,
            "title": "Id Abbreviation",
            "type": "string"
          },
          "invoicing_notes": {
            "maxLength": 5000,
            "title": "Invoicing Notes",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "mfa_enforced": {
            "title": "Mfa Enforced",
            "type": "boolean"
          },
          "parent_customer_id": {
            "title": "Parent Customer Id",
            "type": "integer"
          },
          "payment_term": {
            "maxLength": 45,
            "title": "Payment Term",
            "type": "string"
          },
          "payment_term_days": {
            "title": "Payment Term Days",
            "type": "integer"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          },
          "po_number": {
            "maxLength": 1000,
            "title": "Po Number",
            "type": "string"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "qbd_skip_address_sync": {
            "title": "Qbd Skip Address Sync",
            "type": "boolean"
          },
          "sources": {
            "items": {
              "type": "object"
            },
            "title": "Sources",
            "type": "array"
          },
          "special_instructions": {
            "maxLength": 5000,
            "title": "Special Instructions",
            "type": "string"
          },
          "state_name": {
            "maxLength": 45,
            "title": "State Name",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "zip_postal_code": {
            "maxLength": 45,
            "title": "Zip Postal Code",
            "type": "string"
          }
        },
        "title": "CustomerSchema",
        "type": "object"
      },
      "ListCustomerSchema.a9993e3.CustomerSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListCustomerSchema.a9993e3.CustomerSchema"
        },
        "title": "CustomerSchemaList",
        "type": "array"
      },
      "ListDivisionSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListDivisionSchema.a9993e3.DivisionSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListDivisionSchema",
        "type": "object"
      },
      "ListDivisionSchema.a9993e3.DivisionSchema": {
        "properties": {
          "description": {
            "maxLength": 1000,
            "title": "Description",
            "type": "string"
          },
          "global_division": {
            "title": "Global Division",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "maxLength": 100,
            "title": "Name",
            "type": "string"
          }
        },
        "title": "DivisionSchema",
        "type": "object"
      },
      "ListDivisionSchema.a9993e3.DivisionSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListDivisionSchema.a9993e3.DivisionSchema"
        },
        "title": "DivisionSchemaList",
        "type": "array"
      },
      "ListEntityIntegrationVendorRelationshipSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListEntityIntegrationVendorRelationshipSchema.a9993e3.EntityIntegrationVendorRelationshipSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListEntityIntegrationVendorRelationshipSchema",
        "type": "object"
      },
      "ListEntityIntegrationVendorRelationshipSchema.a9993e3.EntityIntegrationVendorRelationshipSchema": {
        "properties": {
          "entity_id": {
            "title": "Entity Id",
            "type": "integer"
          },
          "entity_type": {
            "title": "Entity Type",
            "type": "string"
          },
          "integration_id": {
            "title": "Integration Id",
            "type": "integer"
          },
          "integraton_vendor_id": {
            "title": "Integraton Vendor Id",
            "type": "string"
          }
        },
        "required": [
          "entity_id"
        ],
        "title": "EntityIntegrationVendorRelationshipSchema",
        "type": "object"
      },
      "ListEntityIntegrationVendorRelationshipSchema.a9993e3.EntityIntegrationVendorRelationshipSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListEntityIntegrationVendorRelationshipSchema.a9993e3.EntityIntegrationVendorRelationshipSchema"
        },
        "title": "EntityIntegrationVendorRelationshipSchemaList",
        "type": "array"
      },
      "ListEpicSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListEpicSchema.a9993e3.EpicSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListEpicSchema",
        "type": "object"
      },
      "ListEpicSchema.a9993e3.EpicSchema": {
        "properties": {
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "title": "EpicSchema",
        "type": "object"
      },
      "ListEpicSchema.a9993e3.EpicSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListEpicSchema.a9993e3.EpicSchema"
        },
        "title": "EpicSchemaList",
        "type": "array"
      },
      "ListGenReportSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListGenReportSchema.a9993e3.GenReportSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListGenReportSchema",
        "type": "object"
      },
      "ListGenReportSchema.a9993e3.GenReportSchema": {
        "properties": {
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_generated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Generated"
          },
          "date_public": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Public"
          },
          "date_published": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Published"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_api_client": {
            "title": "Emailed By Api Client",
            "type": "object"
          },
          "emailed_by_api_client_id": {
            "title": "Emailed By Api Client Id",
            "type": "string"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "generated_by": {
            "title": "Generated By",
            "type": "object"
          },
          "generated_by_api_client": {
            "title": "Generated By Api Client",
            "type": "object"
          },
          "generated_by_api_client_id": {
            "title": "Generated By Api Client Id",
            "type": "string"
          },
          "generated_by_id": {
            "title": "Generated By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "id_hash": {
            "title": "Id Hash",
            "type": "string"
          },
          "is_public": {
            "title": "Is Public",
            "type": "boolean"
          },
          "made_public_by": {
            "title": "Made Public By",
            "type": "object"
          },
          "made_public_by_api_client": {
            "title": "Made Public By Api Client",
            "type": "object"
          },
          "made_public_by_api_client_id": {
            "title": "Made Public By Api Client Id",
            "type": "string"
          },
          "made_public_by_id": {
            "title": "Made Public By Id",
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "published_by_api_client": {
            "title": "Published By Api Client",
            "type": "object"
          },
          "published_by_api_client_id": {
            "title": "Published By Api Client Id",
            "type": "string"
          },
          "render_batch_uuid": {
            "title": "Render Batch Uuid",
            "type": "string"
          },
          "render_error_message": {
            "title": "Render Error Message",
            "type": "string"
          },
          "render_params": {
            "title": "Render Params",
            "type": "string"
          },
          "render_status": {
            "title": "Render Status",
            "type": "string"
          },
          "report_config_id": {
            "title": "Report Config Id",
            "type": "integer"
          },
          "sample": {
            "title": "Sample",
            "type": "object"
          },
          "sample_id": {
            "title": "Sample Id",
            "type": "integer"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "test": {
            "title": "Test",
            "type": "object"
          },
          "test_id": {
            "title": "Test Id",
            "type": "integer"
          },
          "url": {
            "title": "Url",
            "type": "string"
          }
        },
        "title": "GenReportSchema",
        "type": "object"
      },
      "ListGenReportSchema.a9993e3.GenReportSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListGenReportSchema.a9993e3.GenReportSchema"
        },
        "title": "GenReportSchemaList",
        "type": "array"
      },
      "ListInvoiceItemSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListInvoiceItemSchema.a9993e3.InvoiceItemSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListInvoiceItemSchema",
        "type": "object"
      },
      "ListInvoiceItemSchema.a9993e3.InvoiceItemSchema": {
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "number"
          },
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoice": {
            "title": "Invoice",
            "type": "object"
          },
          "invoice_id": {
            "title": "Invoice Id",
            "type": "integer"
          },
          "invoice_item_type": {
            "title": "Invoice Item Type",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "panel": {
            "title": "Panel",
            "type": "object"
          },
          "panel_id": {
            "title": "Panel Id",
            "type": "integer"
          },
          "quantity": {
            "title": "Quantity",
            "type": "integer"
          },
          "quantity_discount": {
            "title": "Quantity Discount",
            "type": "object"
          },
          "quantity_discount_id": {
            "title": "Quantity Discount Id",
            "type": "integer"
          },
          "sort_order": {
            "title": "Sort Order",
            "type": "integer"
          },
          "surcharge": {
            "title": "Surcharge",
            "type": "number"
          },
          "surcharge_invoice_item_uuid": {
            "title": "Surcharge Invoice Item Uuid",
            "type": "string"
          },
          "tax_rate": {
            "title": "Tax Rate",
            "type": "object"
          },
          "tax_rate_id": {
            "title": "Tax Rate Id",
            "type": "integer"
          },
          "tax_rate_name": {
            "title": "Tax Rate Name",
            "type": "string"
          },
          "tax_rate_percentage": {
            "title": "Tax Rate Percentage",
            "type": "number"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          },
          "uuid": {
            "title": "Uuid",
            "type": "string"
          }
        },
        "title": "InvoiceItemSchema",
        "type": "object"
      },
      "ListInvoiceItemSchema.a9993e3.InvoiceItemSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListInvoiceItemSchema.a9993e3.InvoiceItemSchema"
        },
        "title": "InvoiceItemSchemaList",
        "type": "array"
      },
      "ListInvoiceSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListInvoiceSchema.a9993e3.InvoiceSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListInvoiceSchema",
        "type": "object"
      },
      "ListInvoiceSchema.a9993e3.InvoiceSchema": {
        "properties": {
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_paid": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Paid"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "discount_individual_items": {
            "title": "Discount Individual Items",
            "type": "boolean"
          },
          "do_not_show_sync_warning": {
            "title": "Do Not Show Sync Warning",
            "type": "boolean"
          },
          "due_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Due Date"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "force_full_panel_prices": {
            "title": "Force Full Panel Prices",
            "type": "boolean"
          },
          "group_by_panel": {
            "title": "Group By Panel",
            "type": "boolean"
          },
          "group_by_panel_turnaround_not_applied": {
            "title": "Group By Panel Turnaround Not Applied",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoice_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Invoice Date"
          },
          "invoice_items": {
            "items": {
              "type": "object"
            },
            "title": "Invoice Items",
            "type": "array"
          },
          "invoice_payments": {
            "items": {
              "type": "object"
            },
            "title": "Invoice Payments",
            "type": "array"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "order_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Order Ids",
            "type": "array"
          },
          "orders": {
            "items": {
              "type": "object"
            },
            "title": "Orders",
            "type": "array"
          },
          "out_of_sync": {
            "title": "Out Of Sync",
            "type": "boolean"
          },
          "outstanding_amount": {
            "title": "Outstanding Amount",
            "type": "number"
          },
          "paid": {
            "title": "Paid",
            "type": "boolean"
          },
          "payment_term": {
            "title": "Payment Term",
            "type": "string"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "quotation_custom_prices_not_applied": {
            "title": "Quotation Custom Prices Not Applied",
            "type": "boolean"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "sub_total": {
            "title": "Sub Total",
            "type": "number"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "type": "number"
          },
          "total_after_tax": {
            "title": "Total After Tax",
            "type": "number"
          }
        },
        "title": "InvoiceSchema",
        "type": "object"
      },
      "ListInvoiceSchema.a9993e3.InvoiceSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListInvoiceSchema.a9993e3.InvoiceSchema"
        },
        "title": "InvoiceSchemaList",
        "type": "array"
      },
      "ListLocationSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListLocationSchema.a9993e3.LocationSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListLocationSchema",
        "type": "object"
      },
      "ListLocationSchema.a9993e3.LocationSchema": {
        "properties": {
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "location_type": {
            "title": "Location Type",
            "type": "object"
          },
          "location_type_id": {
            "title": "Location Type Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "parent_location": {
            "title": "Parent Location",
            "type": "object"
          },
          "parent_location_id": {
            "title": "Parent Location Id",
            "type": "integer"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          }
        },
        "title": "LocationSchema",
        "type": "object"
      },
      "ListLocationSchema.a9993e3.LocationSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListLocationSchema.a9993e3.LocationSchema"
        },
        "title": "LocationSchemaList",
        "type": "array"
      },
      "ListLocationTypeSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListLocationTypeSchema.a9993e3.LocationTypeSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListLocationTypeSchema",
        "type": "object"
      },
      "ListLocationTypeSchema.a9993e3.LocationTypeSchema": {
        "properties": {
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "movable_slots": {
            "title": "Movable Slots",
            "type": "boolean"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "number_of_slots": {
            "title": "Number Of Slots",
            "type": "integer"
          },
          "parent_location_type": {
            "title": "Parent Location Type",
            "type": "object"
          },
          "parent_location_type_id": {
            "title": "Parent Location Type Id",
            "type": "integer"
          }
        },
        "title": "LocationTypeSchema",
        "type": "object"
      },
      "ListLocationTypeSchema.a9993e3.LocationTypeSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListLocationTypeSchema.a9993e3.LocationTypeSchema"
        },
        "title": "LocationTypeSchemaList",
        "type": "array"
      },
      "ListOrderSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListOrderSchema.a9993e3.OrderSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListOrderSchema",
        "type": "object"
      },
      "ListOrderSchema.a9993e3.OrderSchema": {
        "properties": {
          "approved_by": {
            "title": "Approved By",
            "type": "object"
          },
          "approved_by_id": {
            "title": "Approved By Id",
            "type": "integer"
          },
          "cc_id": {
            "title": "Cc Id",
            "type": "string"
          },
          "cc_latest_sync": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Cc Latest Sync"
          },
          "cc_order": {
            "title": "Cc Order",
            "type": "boolean"
          },
          "cc_order_status": {
            "title": "Cc Order Status",
            "type": "integer"
          },
          "cc_sync_error": {
            "title": "Cc Sync Error",
            "type": "string"
          },
          "cc_sync_status": {
            "title": "Cc Sync Status",
            "type": "string"
          },
          "created_from_quotation": {
            "title": "Created From Quotation",
            "type": "object"
          },
          "created_from_quotation_id": {
            "title": "Created From Quotation Id",
            "type": "integer"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "customer_account": {
            "title": "Customer Account",
            "type": "object"
          },
          "customer_account_id": {
            "title": "Customer Account Id",
            "type": "integer"
          },
          "date_approved": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Approved"
          },
          "date_completed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Completed"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_received": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Received"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "date_requested": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Requested"
          },
          "date_required": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Required"
          },
          "division": {
            "title": "Division",
            "type": "object"
          },
          "division_id": {
            "title": "Division Id",
            "type": "integer"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "entered_by": {
            "title": "Entered By",
            "type": "object"
          },
          "entered_by_api_client": {
            "title": "Entered By Api Client",
            "type": "object"
          },
          "entered_by_api_client_id": {
            "title": "Entered By Api Client Id",
            "type": "string"
          },
          "entered_by_id": {
            "title": "Entered By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoicing_notes": {
            "title": "Invoicing Notes",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "order_request": {
            "title": "Order Request",
            "type": "boolean"
          },
          "order_request_notes": {
            "title": "Order Request Notes",
            "type": "string"
          },
          "order_request_status": {
            "title": "Order Request Status",
            "type": "string"
          },
          "portal_read": {
            "title": "Portal Read",
            "type": "boolean"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "published_to_portal": {
            "title": "Published To Portal",
            "type": "boolean"
          },
          "received_by": {
            "title": "Received By",
            "type": "object"
          },
          "received_by_id": {
            "title": "Received By Id",
            "type": "integer"
          },
          "release_report": {
            "title": "Release Report",
            "type": "boolean"
          },
          "requested_by": {
            "title": "Requested By",
            "type": "object"
          },
          "requested_by_id": {
            "title": "Requested By Id",
            "type": "integer"
          },
          "requested_for": {
            "title": "Requested For",
            "type": "object"
          },
          "requested_for_id": {
            "title": "Requested For Id",
            "type": "integer"
          },
          "revision_notes": {
            "title": "Revision Notes",
            "type": "string"
          },
          "special_instructions": {
            "title": "Special Instructions",
            "type": "string"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "type": "string"
          },
          "total_samples_created": {
            "default": 0,
            "title": "Total Samples Created",
            "type": "integer"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          }
        },
        "title": "OrderSchema",
        "type": "object"
      },
      "ListOrderSchema.a9993e3.OrderSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListOrderSchema.a9993e3.OrderSchema"
        },
        "title": "OrderSchemaList",
        "type": "array"
      },
      "ListPanelSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListPanelSchema.a9993e3.PanelSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListPanelSchema",
        "type": "object"
      },
      "ListPanelSchema.a9993e3.PanelSchema": {
        "properties": {
          "assays": {
            "items": {
              "type": "object"
            },
            "title": "Assays",
            "type": "array"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "show_in_portal": {
            "title": "Show In Portal",
            "type": "boolean"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "title": "PanelSchema",
        "type": "object"
      },
      "ListPanelSchema.a9993e3.PanelSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListPanelSchema.a9993e3.PanelSchema"
        },
        "title": "PanelSchemaList",
        "type": "array"
      },
      "ListPaymentSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListPaymentSchema.a9993e3.PaymentSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListPaymentSchema",
        "type": "object"
      },
      "ListPaymentSchema.a9993e3.PaymentSchema": {
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "number"
          },
          "check_number": {
            "title": "Check Number",
            "type": "string"
          },
          "created_by_api_client": {
            "title": "Created By Api Client",
            "type": "object"
          },
          "created_by_api_client_id": {
            "title": "Created By Api Client Id",
            "type": "string"
          },
          "created_by_user": {
            "title": "Created By User",
            "type": "object"
          },
          "created_by_user_id": {
            "title": "Created By User Id",
            "type": "integer"
          },
          "customer": {
            "title": "Customer",
            "type": "object"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "payment_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Payment Date"
          },
          "payment_type": {
            "title": "Payment Type",
            "type": "string"
          },
          "payment_type_id": {
            "title": "Payment Type Id",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "unapplied_amount": {
            "title": "Unapplied Amount",
            "type": "number"
          }
        },
        "title": "PaymentSchema",
        "type": "object"
      },
      "ListPaymentSchema.a9993e3.PaymentSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListPaymentSchema.a9993e3.PaymentSchema"
        },
        "title": "PaymentSchemaList",
        "type": "array"
      },
      "ListProjectSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListProjectSchema.a9993e3.ProjectSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListProjectSchema",
        "type": "object"
      },
      "ListProjectSchema.a9993e3.ProjectSchema": {
        "properties": {
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_completed": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Completed"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_started": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Started"
          },
          "epic": {
            "title": "Epic",
            "type": "object"
          },
          "epic_id": {
            "title": "Epic Id",
            "type": "integer"
          },
          "estimated_complete_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Complete Date"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "percent_completion": {
            "title": "Percent Completion",
            "type": "integer"
          },
          "result": {
            "title": "Result",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "tech": {
            "title": "Tech",
            "type": "object"
          },
          "tech_id": {
            "title": "Tech Id",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "title": "ProjectSchema",
        "type": "object"
      },
      "ListProjectSchema.a9993e3.ProjectSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListProjectSchema.a9993e3.ProjectSchema"
        },
        "title": "ProjectSchemaList",
        "type": "array"
      },
      "ListQuotationSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListQuotationSchema.a9993e3.QuotationSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListQuotationSchema",
        "type": "object"
      },
      "ListQuotationSchema.a9993e3.QuotationSchema": {
        "properties": {
          "company_name": {
            "title": "Company Name",
            "type": "string"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "customer": {
            "title": "Customer",
            "type": "object"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "discount_individual_items": {
            "title": "Discount Individual Items",
            "type": "boolean"
          },
          "email_address": {
            "title": "Email Address",
            "type": "string"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_api_client": {
            "title": "Emailed By Api Client",
            "type": "object"
          },
          "emailed_by_api_client_id": {
            "title": "Emailed By Api Client Id",
            "type": "string"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "expiration_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Expiration Date"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "payment_term": {
            "title": "Payment Term",
            "type": "string"
          },
          "payment_term_days": {
            "title": "Payment Term Days",
            "type": "integer"
          },
          "quotation_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Quotation Date"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "sub_total": {
            "title": "Sub Total",
            "type": "number"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "total": {
            "title": "Total",
            "type": "number"
          },
          "uuid": {
            "title": "Uuid",
            "type": "string"
          }
        },
        "title": "QuotationSchema",
        "type": "object"
      },
      "ListQuotationSchema.a9993e3.QuotationSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListQuotationSchema.a9993e3.QuotationSchema"
        },
        "title": "QuotationSchemaList",
        "type": "array"
      },
      "ListSampleSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListSampleSchema.a9993e3.SampleSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListSampleSchema",
        "type": "object"
      },
      "ListSampleSchema.a9993e3.SampleSchema": {
        "properties": {
          "accessioning_type": {
            "title": "Accessioning Type",
            "type": "object"
          },
          "accessioning_type_id": {
            "title": "Accessioning Type Id",
            "type": "integer"
          },
          "batches": {
            "items": {
              "type": "object"
            },
            "title": "Batches",
            "type": "array"
          },
          "cc_id": {
            "title": "Cc Id",
            "type": "string"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "complete": {
            "title": "Complete",
            "type": "boolean"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_received": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Received"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "inventory_stock": {
            "title": "Inventory Stock",
            "type": "object"
          },
          "inventory_stock_id": {
            "title": "Inventory Stock Id",
            "type": "integer"
          },
          "inventory_stock_quantity_used": {
            "title": "Inventory Stock Quantity Used",
            "type": "number"
          },
          "lab_id": {
            "title": "Lab Id",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "linked": {
            "title": "Linked",
            "type": "boolean"
          },
          "location": {
            "title": "Location",
            "type": "object"
          },
          "location_id": {
            "title": "Location Id",
            "type": "integer"
          },
          "metrc_uid": {
            "title": "Metrc Uid",
            "type": "string"
          },
          "most_recent_report": {
            "title": "Most Recent Report",
            "type": "object"
          },
          "most_recent_report_id": {
            "title": "Most Recent Report Id",
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "order_request": {
            "title": "Order Request",
            "type": "boolean"
          },
          "parent_sample": {
            "title": "Parent Sample",
            "type": "object"
          },
          "parent_sample_id": {
            "title": "Parent Sample Id",
            "type": "integer"
          },
          "point_of_collection": {
            "title": "Point Of Collection",
            "type": "string"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "received": {
            "title": "Received",
            "type": "boolean"
          },
          "reports": {
            "items": {
              "type": "object"
            },
            "title": "Reports",
            "type": "array"
          },
          "sample_type": {
            "title": "Sample Type",
            "type": "string"
          },
          "source": {
            "title": "Source",
            "type": "object"
          },
          "source_id": {
            "title": "Source Id",
            "type": "integer"
          },
          "sub_samples": {
            "items": {
              "type": "object"
            },
            "title": "Sub Samples",
            "type": "array"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "tests": {
            "items": {
              "type": "object"
            },
            "title": "Tests",
            "type": "array"
          },
          "time_of_collection": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Time Of Collection"
          }
        },
        "title": "SampleSchema",
        "type": "object"
      },
      "ListSampleSchema.a9993e3.SampleSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListSampleSchema.a9993e3.SampleSchema"
        },
        "title": "SampleSchemaList",
        "type": "array"
      },
      "ListSourceSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListSourceSchema.a9993e3.SourceSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListSourceSchema",
        "type": "object"
      },
      "ListSourceSchema.a9993e3.SourceSchema": {
        "properties": {
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Of Birth"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "type": "string"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "identifier": {
            "title": "Identifier",
            "type": "string"
          },
          "lab_id": {
            "title": "Lab Id",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "latitude": {
            "title": "Latitude",
            "type": "number"
          },
          "longitude": {
            "title": "Longitude",
            "type": "number"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          }
        },
        "title": "SourceSchema",
        "type": "object"
      },
      "ListSourceSchema.a9993e3.SourceSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListSourceSchema.a9993e3.SourceSchema"
        },
        "title": "SourceSchemaList",
        "type": "array"
      },
      "ListTeamSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListTeamSchema.a9993e3.TeamSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListTeamSchema",
        "type": "object"
      },
      "ListTeamSchema.a9993e3.TeamSchema": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "title": "TeamSchema",
        "type": "object"
      },
      "ListTeamSchema.a9993e3.TeamSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListTeamSchema.a9993e3.TeamSchema"
        },
        "title": "TeamSchemaList",
        "type": "array"
      },
      "ListTestSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListTestSchema.a9993e3.TestSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListTestSchema",
        "type": "object"
      },
      "ListTestSchema.a9993e3.TestSchema": {
        "properties": {
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "complete_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Complete Date"
          },
          "customer_update": {
            "title": "Customer Update",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "date_results_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Results Released"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "estimated_complete_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Complete Date"
          },
          "estimated_start_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Start Date"
          },
          "free_response": {
            "title": "Free Response",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "last_updated_unix_timestamp": {
            "title": "Last Updated Unix Timestamp",
            "type": "number"
          },
          "most_recent_report": {
            "title": "Most Recent Report",
            "type": "object"
          },
          "most_recent_report_id": {
            "title": "Most Recent Report Id",
            "type": "integer"
          },
          "panel": {
            "title": "Panel",
            "type": "object"
          },
          "panel_group_uuid": {
            "title": "Panel Group Uuid",
            "type": "string"
          },
          "panel_id": {
            "title": "Panel Id",
            "type": "integer"
          },
          "priority": {
            "title": "Priority",
            "type": "integer"
          },
          "priority_current": {
            "title": "Priority Current",
            "type": "boolean"
          },
          "priority_done": {
            "title": "Priority Done",
            "type": "boolean"
          },
          "priority_group_uuid": {
            "title": "Priority Group Uuid",
            "type": "string"
          },
          "publish_worksheet_to_portal": {
            "default": false,
            "title": "Publish Worksheet To Portal",
            "type": "boolean"
          },
          "release_report": {
            "title": "Release Report",
            "type": "boolean"
          },
          "release_results": {
            "title": "Release Results",
            "type": "boolean"
          },
          "reported_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Reported Date"
          },
          "results": {
            "title": "Results",
            "type": "string"
          },
          "sample": {
            "title": "Sample",
            "type": "object"
          },
          "sample_id": {
            "title": "Sample Id",
            "type": "integer"
          },
          "specification_overall": {
            "title": "Specification Overall",
            "type": "string"
          },
          "start_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Start Date"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "tech": {
            "title": "Tech",
            "type": "object"
          },
          "tech_id": {
            "title": "Tech Id",
            "type": "integer"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          },
          "worksheet_data": {
            "title": "Worksheet Data",
            "type": "object"
          }
        },
        "title": "TestSchema",
        "type": "object"
      },
      "ListTestSchema.a9993e3.TestSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListTestSchema.a9993e3.TestSchema"
        },
        "title": "TestSchemaList",
        "type": "array"
      },
      "ListTurnaroundSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListTurnaroundSchema.a9993e3.TurnaroundSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListTurnaroundSchema",
        "type": "object"
      },
      "ListTurnaroundSchema.a9993e3.TurnaroundSchema": {
        "properties": {
          "business_days_only": {
            "title": "Business Days Only",
            "type": "boolean"
          },
          "default_duration": {
            "title": "Default Duration",
            "type": "integer"
          },
          "default_flat_surcharge": {
            "title": "Default Flat Surcharge",
            "type": "number"
          },
          "default_percentage_surcharge": {
            "title": "Default Percentage Surcharge",
            "type": "number"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "divisions": {
            "items": {
              "type": "object"
            },
            "title": "Divisions",
            "type": "array"
          },
          "flag_background_color": {
            "title": "Flag Background Color",
            "type": "string"
          },
          "flag_text_color": {
            "title": "Flag Text Color",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "title": "TurnaroundSchema",
        "type": "object"
      },
      "ListTurnaroundSchema.a9993e3.TurnaroundSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListTurnaroundSchema.a9993e3.TurnaroundSchema"
        },
        "title": "TurnaroundSchemaList",
        "type": "array"
      },
      "ListUserSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListUserSchema.a9993e3.UserSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListUserSchema",
        "type": "object"
      },
      "ListUserSchema.a9993e3.UserSchema": {
        "properties": {
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          }
        },
        "title": "UserSchema",
        "type": "object"
      },
      "ListUserSchema.a9993e3.UserSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListUserSchema.a9993e3.UserSchema"
        },
        "title": "UserSchemaList",
        "type": "array"
      },
      "ListWorksheetSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListWorksheetSchema.a9993e3.WorksheetSchemaList"
          },
          "page_number": {
            "example": 1,
            "title": "Page Number",
            "type": "integer"
          },
          "total_count": {
            "example": 150,
            "title": "Total Count",
            "type": "integer"
          },
          "total_pages": {
            "example": 7,
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "page_number",
          "total_count",
          "total_pages",
          "data"
        ],
        "title": "ListWorksheetSchema",
        "type": "object"
      },
      "ListWorksheetSchema.a9993e3.WorksheetSchema": {
        "properties": {
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "active_worksheet_version_id": {
            "title": "Active Worksheet Version Id",
            "type": "integer"
          },
          "code_editor_view": {
            "title": "Code Editor View",
            "type": "boolean"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "require_reason": {
            "title": "Require Reason",
            "type": "boolean"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "title": "WorksheetSchema",
        "type": "object"
      },
      "ListWorksheetSchema.a9993e3.WorksheetSchemaList": {
        "items": {
          "$ref": "#/components/schemas/ListWorksheetSchema.a9993e3.WorksheetSchema"
        },
        "title": "WorksheetSchemaList",
        "type": "array"
      },
      "OrderFilterSchema.7a3ad72": {
        "properties": {
          "additional_fields_encoded": {
            "description": "Base64 Encoded Order Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "ORDER"
            },
            "title": "Additional Fields Encoded",
            "type": "string"
          },
          "cc_ids": {
            "items": {
              "type": "string"
            },
            "title": "Cc Ids",
            "type": "array"
          },
          "cc_latest_sync_end": {
            "title": "Cc Latest Sync End",
            "type": "string"
          },
          "cc_latest_sync_filter_range": {
            "title": "Cc Latest Sync Filter Range",
            "type": "string"
          },
          "cc_latest_sync_relative": {
            "title": "Cc Latest Sync Relative",
            "type": "string"
          },
          "cc_latest_sync_relative_days": {
            "title": "Cc Latest Sync Relative Days",
            "type": "string"
          },
          "cc_latest_sync_start": {
            "title": "Cc Latest Sync Start",
            "type": "string"
          },
          "customer_additional_fields_encoded": {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "CUSTOMER"
            },
            "title": "Customer Additional Fields Encoded",
            "type": "string"
          },
          "customer_core_fields_encoded": {
            "description": "Base64 Encoded Customer Core Field Filters",
            "json_schema_extra": {
              "entity_type": "CUSTOMER"
            },
            "title": "Customer Core Fields Encoded",
            "type": "string"
          },
          "customer_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Customer Ids",
            "type": "array"
          },
          "customer_tags": {
            "items": {
              "type": "string"
            },
            "title": "Customer Tags",
            "type": "array"
          },
          "customer_tags_action": {
            "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.TagActionValues"
          },
          "date_approved_end": {
            "title": "Date Approved End",
            "type": "string"
          },
          "date_approved_filter_range": {
            "title": "Date Approved Filter Range",
            "type": "string"
          },
          "date_approved_relative": {
            "title": "Date Approved Relative",
            "type": "string"
          },
          "date_approved_relative_days": {
            "title": "Date Approved Relative Days",
            "type": "string"
          },
          "date_approved_start": {
            "title": "Date Approved Start",
            "type": "string"
          },
          "date_completed_end": {
            "title": "Date Completed End",
            "type": "string"
          },
          "date_completed_filter_range": {
            "title": "Date Completed Filter Range",
            "type": "string"
          },
          "date_completed_relative": {
            "title": "Date Completed Relative",
            "type": "string"
          },
          "date_completed_relative_days": {
            "title": "Date Completed Relative Days",
            "type": "string"
          },
          "date_completed_start": {
            "title": "Date Completed Start",
            "type": "string"
          },
          "date_created_end": {
            "title": "Date Created End",
            "type": "string"
          },
          "date_created_filter_range": {
            "title": "Date Created Filter Range",
            "type": "string"
          },
          "date_created_relative": {
            "title": "Date Created Relative",
            "type": "string"
          },
          "date_created_relative_days": {
            "title": "Date Created Relative Days",
            "type": "string"
          },
          "date_created_start": {
            "title": "Date Created Start",
            "type": "string"
          },
          "date_received_end": {
            "title": "Date Received End",
            "type": "string"
          },
          "date_received_filter_range": {
            "title": "Date Received Filter Range",
            "type": "string"
          },
          "date_received_relative": {
            "title": "Date Received Relative",
            "type": "string"
          },
          "date_received_relative_days": {
            "title": "Date Received Relative Days",
            "type": "string"
          },
          "date_received_start": {
            "title": "Date Received Start",
            "type": "string"
          },
          "date_requested_end": {
            "title": "Date Requested End",
            "type": "string"
          },
          "date_requested_filter_range": {
            "title": "Date Requested Filter Range",
            "type": "string"
          },
          "date_requested_relative": {
            "title": "Date Requested Relative",
            "type": "string"
          },
          "date_requested_relative_days": {
            "title": "Date Requested Relative Days",
            "type": "string"
          },
          "date_requested_start": {
            "title": "Date Requested Start",
            "type": "string"
          },
          "date_required_end": {
            "title": "Date Required End",
            "type": "string"
          },
          "date_required_filter_range": {
            "title": "Date Required Filter Range",
            "type": "string"
          },
          "date_required_relative": {
            "title": "Date Required Relative",
            "type": "string"
          },
          "date_required_relative_days": {
            "title": "Date Required Relative Days",
            "type": "string"
          },
          "date_required_start": {
            "title": "Date Required Start",
            "type": "string"
          },
          "ids": {
            "items": {
              "type": "integer"
            },
            "title": "Ids",
            "type": "array"
          },
          "include_deleted": {
            "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.IncludeDeletedValues"
          },
          "invoice_additional_fields_encoded": {
            "description": "Base64 Encoded Invoice Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "INVOICE"
            },
            "title": "Invoice Additional Fields Encoded",
            "type": "string"
          },
          "invoice_core_fields_encoded": {
            "description": "Base64 Encoded Invoice Core Field Filters",
            "json_schema_extra": {
              "entity_type": "INVOICE"
            },
            "title": "Invoice Core Fields Encoded",
            "type": "string"
          },
          "invoicing_notes": {
            "title": "Invoicing Notes",
            "type": "string"
          },
          "last_updated": {
            "description": "Last updated unix timestamp",
            "title": "Last Updated",
            "type": "string"
          },
          "order_request_statuses": {
            "items": {
              "type": "string"
            },
            "title": "Order Request Statuses",
            "type": "array"
          },
          "order_tags": {
            "items": {
              "type": "string"
            },
            "title": "Order Tags",
            "type": "array"
          },
          "order_tags_action": {
            "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.TagActionValues"
          },
          "overdue": {
            "title": "Overdue",
            "type": "boolean"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          },
          "project_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Project Ids",
            "type": "array"
          },
          "published_to_portal": {
            "title": "Published To Portal",
            "type": "boolean"
          },
          "sort_by": {
            "title": "Sort By",
            "type": "string"
          },
          "sort_order": {
            "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.SortOrderValues"
          },
          "source_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Source Ids",
            "type": "array"
          },
          "statuses": {
            "items": {
              "type": "string"
            },
            "title": "Statuses",
            "type": "array"
          },
          "test_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Test Ids",
            "type": "array"
          },
          "test_tags": {
            "items": {
              "type": "string"
            },
            "title": "Test Tags",
            "type": "array"
          },
          "test_tags_action": {
            "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.TagActionValues"
          }
        },
        "title": "OrderFilterSchema",
        "type": "object"
      },
      "OrderFilterSchema.7a3ad72.IncludeDeletedValues": {
        "description": "An enumeration.",
        "enum": [
          "TRUE",
          "DELETED_ONLY"
        ],
        "title": "IncludeDeletedValues"
      },
      "OrderFilterSchema.7a3ad72.SortOrderValues": {
        "description": "An enumeration.",
        "enum": [
          "ASC",
          "DESC"
        ],
        "title": "SortOrderValues"
      },
      "OrderFilterSchema.7a3ad72.TagActionValues": {
        "description": "An enumeration.",
        "enum": [
          "Or",
          "And",
          "Not"
        ],
        "title": "TagActionValues"
      },
      "PanelFilterSchema.7a3ad72": {
        "properties": {
          "additional_fields_encoded": {
            "description": "Base64 Encoded Panel Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "PANEL"
            },
            "title": "Additional Fields Encoded",
            "type": "string"
          },
          "ids": {
            "items": {
              "type": "integer"
            },
            "title": "Ids",
            "type": "array"
          },
          "include_deleted": {
            "$ref": "#/components/schemas/PanelFilterSchema.7a3ad72.IncludeDeletedValues"
          },
          "integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Integration Ids",
            "type": "array"
          },
          "invoice_last_updated": {
            "description": "Return the panels whose related invoices were updated after this unix timestamp",
            "title": "Invoice Last Updated",
            "type": "string"
          },
          "last_updated": {
            "description": "Last updated unix timestamp",
            "title": "Last Updated",
            "type": "string"
          },
          "not_integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Not Integration Ids",
            "type": "array"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "sort_by": {
            "title": "Sort By",
            "type": "string"
          },
          "sort_order": {
            "$ref": "#/components/schemas/PanelFilterSchema.7a3ad72.SortOrderValues"
          },
          "title_keyword": {
            "title": "Title Keyword",
            "type": "string"
          }
        },
        "title": "PanelFilterSchema",
        "type": "object"
      },
      "PanelFilterSchema.7a3ad72.IncludeDeletedValues": {
        "description": "An enumeration.",
        "enum": [
          "TRUE",
          "DELETED_ONLY"
        ],
        "title": "IncludeDeletedValues"
      },
      "PanelFilterSchema.7a3ad72.SortOrderValues": {
        "description": "An enumeration.",
        "enum": [
          "ASC",
          "DESC"
        ],
        "title": "SortOrderValues"
      },
      "PaymentFilterSchema.7a3ad72": {
        "properties": {
          "integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Integration Ids",
            "type": "array"
          },
          "not_integration_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Not Integration Ids",
            "type": "array"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          }
        },
        "title": "PaymentFilterSchema",
        "type": "object"
      },
      "QuotationFilterSchema.7a3ad72": {
        "properties": {
          "date_created_end": {
            "title": "Date Created End",
            "type": "string"
          },
          "date_created_filter_range": {
            "title": "Date Created Filter Range",
            "type": "string"
          },
          "date_created_relative": {
            "title": "Date Created Relative",
            "type": "string"
          },
          "date_created_relative_days": {
            "title": "Date Created Relative Days",
            "type": "string"
          },
          "date_created_start": {
            "title": "Date Created Start",
            "type": "string"
          },
          "date_emailed_end": {
            "title": "Date Emailed End",
            "type": "string"
          },
          "date_emailed_filter_range": {
            "title": "Date Emailed Filter Range",
            "type": "string"
          },
          "date_emailed_relative": {
            "title": "Date Emailed Relative",
            "type": "string"
          },
          "date_emailed_relative_days": {
            "title": "Date Emailed Relative Days",
            "type": "string"
          },
          "date_emailed_start": {
            "title": "Date Emailed Start",
            "type": "string"
          },
          "expiration_date_end": {
            "title": "Expiration Date End",
            "type": "string"
          },
          "expiration_date_filter_range": {
            "title": "Expiration Date Filter Range",
            "type": "string"
          },
          "expiration_date_relative": {
            "title": "Expiration Date Relative",
            "type": "string"
          },
          "expiration_date_relative_days": {
            "title": "Expiration Date Relative Days",
            "type": "string"
          },
          "expiration_date_start": {
            "title": "Expiration Date Start",
            "type": "string"
          },
          "last_updated": {
            "description": "Last updated unix timestamp",
            "title": "Last Updated",
            "type": "string"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          },
          "quotation_date_end": {
            "title": "Quotation Date End",
            "type": "string"
          },
          "quotation_date_filter_range": {
            "title": "Quotation Date Filter Range",
            "type": "string"
          },
          "quotation_date_relative": {
            "title": "Quotation Date Relative",
            "type": "string"
          },
          "quotation_date_relative_days": {
            "title": "Quotation Date Relative Days",
            "type": "string"
          },
          "quotation_date_start": {
            "title": "Quotation Date Start",
            "type": "string"
          }
        },
        "title": "QuotationFilterSchema",
        "type": "object"
      },
      "RefreshTokenSchema.0d0ead6": {
        "properties": {
          "refresh_token_id": {
            "title": "Refresh Token Id",
            "type": "string"
          }
        },
        "required": [
          "refresh_token_id"
        ],
        "title": "RefreshTokenSchema",
        "type": "object"
      },
      "SampleFilterSchema.7a3ad72": {
        "properties": {
          "accessioning_type_ids": {
            "description": "List of Accessioning Type IDs",
            "items": {
              "type": "integer"
            },
            "title": "Accessioning Type Ids",
            "type": "array"
          },
          "additional_fields_encoded": {
            "description": "Base64 Encoded Sample Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "SAMPLE"
            },
            "title": "Additional Fields Encoded",
            "type": "string"
          },
          "batch_ids": {
            "description": "List of Batch IDs",
            "items": {
              "type": "integer"
            },
            "title": "Batch Ids",
            "type": "array"
          },
          "cc_ids": {
            "description": "List of Sample Confident Cannabis IDs",
            "items": {
              "type": "string"
            },
            "title": "Cc Ids",
            "type": "array"
          },
          "completed": {
            "description": "Only return Samples that have all their Tests completed",
            "title": "Completed",
            "type": "boolean"
          },
          "customer_additional_fields_encoded": {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "CUSTOMER"
            },
            "title": "Customer Additional Fields Encoded",
            "type": "string"
          },
          "customer_ids": {
            "description": "List of Customer IDs",
            "items": {
              "type": "integer"
            },
            "title": "Customer Ids",
            "type": "array"
          },
          "date_received_end": {
            "description": "Sample's date received upper range",
            "title": "Date Received End",
            "type": "string"
          },
          "date_received_filter_range": {
            "description": "Sample's date received pre-defined range",
            "title": "Date Received Filter Range",
            "type": "string"
          },
          "date_received_start": {
            "description": "Sample's date received lower range",
            "title": "Date Received Start",
            "type": "string"
          },
          "has_sub_sample": {
            "description": "Only return Parent Samples",
            "title": "Has Sub Sample",
            "type": "boolean"
          },
          "ids": {
            "description": "List of Sample IDs",
            "items": {
              "type": "string"
            },
            "title": "Ids",
            "type": "array"
          },
          "include_deleted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.IncludeDeletedValues"
              }
            ],
            "description": "Return deleted Samples"
          },
          "inventory_item_ids": {
            "description": "List of Inventory Item IDs",
            "items": {
              "type": "integer"
            },
            "title": "Inventory Item Ids",
            "type": "array"
          },
          "inventory_stock_ids": {
            "description": "List of Inventory Stock IDs",
            "items": {
              "type": "integer"
            },
            "title": "Inventory Stock Ids",
            "type": "array"
          },
          "is_sub_sample": {
            "description": "Only return Sub Samples",
            "title": "Is Sub Sample",
            "type": "boolean"
          },
          "lab_id": {
            "description": "Lab ID",
            "title": "Lab Id",
            "type": "string"
          },
          "lab_ids": {
            "description": "List of Lab IDs",
            "items": {
              "type": "string"
            },
            "title": "Lab Ids",
            "type": "array"
          },
          "last_updated": {
            "description": "Last updated unix timestamp",
            "title": "Last Updated",
            "type": "string"
          },
          "last_updated_end": {
            "description": "Sample's last updated upper range",
            "title": "Last Updated End",
            "type": "string"
          },
          "last_updated_filter_range": {
            "description": "Sample's last updated pre-defined range",
            "title": "Last Updated Filter Range",
            "type": "string"
          },
          "last_updated_start": {
            "description": "Sample's last updated lower range",
            "title": "Last Updated Start",
            "type": "string"
          },
          "linked": {
            "description": "Only return Linked Samples",
            "title": "Linked",
            "type": "boolean"
          },
          "location_ids": {
            "description": "List of Location IDs",
            "items": {
              "type": "integer"
            },
            "title": "Location Ids",
            "type": "array"
          },
          "metrc_uid": {
            "description": "METRC UID",
            "title": "Metrc Uid",
            "type": "string"
          },
          "metrc_uids": {
            "description": "List of METRC UIDs",
            "items": {
              "type": "string"
            },
            "title": "Metrc Uids",
            "type": "array"
          },
          "no_associated_batch": {
            "description": "Only return Samples that do not have an associated Batch",
            "title": "No Associated Batch",
            "type": "boolean"
          },
          "no_associated_order": {
            "description": "Only return Samples without an Order",
            "title": "No Associated Order",
            "type": "boolean"
          },
          "no_associated_project": {
            "description": "Only return Samples without a Project",
            "title": "No Associated Project",
            "type": "boolean"
          },
          "no_sub_samples": {
            "description": "Only return Samples that do not have Sub Samples",
            "title": "No Sub Samples",
            "type": "boolean"
          },
          "order_cc_ids": {
            "description": "List of Order Confident Cannabis IDs",
            "items": {
              "type": "string"
            },
            "title": "Order Cc Ids",
            "type": "array"
          },
          "order_date_received_end": {
            "description": "Order's date received upper range",
            "title": "Order Date Received End",
            "type": "string"
          },
          "order_date_received_filter_range": {
            "description": "Order's date received pre-defined range",
            "title": "Order Date Received Filter Range",
            "type": "string"
          },
          "order_date_received_start": {
            "description": "Order's date received lower range",
            "title": "Order Date Received Start",
            "type": "string"
          },
          "order_ids": {
            "description": "List of Order IDs",
            "items": {
              "type": "integer"
            },
            "title": "Order Ids",
            "type": "array"
          },
          "order_request_statuses": {
            "description": "List of Order Request statuses",
            "items": {
              "type": "string"
            },
            "title": "Order Request Statuses",
            "type": "array"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          },
          "parent_sample_ids": {
            "description": "List of Parent Sample IDs",
            "items": {
              "type": "integer"
            },
            "title": "Parent Sample Ids",
            "type": "array"
          },
          "project_ids": {
            "description": "List of Project IDs",
            "items": {
              "type": "integer"
            },
            "title": "Project Ids",
            "type": "array"
          },
          "received": {
            "description": "Only return Samples that have been received",
            "title": "Received",
            "type": "boolean"
          },
          "release_report": {
            "description": "Only return Samples that have their report published",
            "title": "Release Report",
            "type": "boolean"
          },
          "report_generated": {
            "description": "Only return Samples that have a Report generated",
            "title": "Report Generated",
            "type": "boolean"
          },
          "sample_description": {
            "description": "Sample Description",
            "title": "Sample Description",
            "type": "string"
          },
          "sample_id_range_end": {
            "description": "Sample ID upper range",
            "title": "Sample Id Range End",
            "type": "string"
          },
          "sample_id_range_start": {
            "description": "Sample ID lower range",
            "title": "Sample Id Range Start",
            "type": "string"
          },
          "sample_tags": {
            "description": "List of Sample Tags",
            "items": {
              "type": "string"
            },
            "title": "Sample Tags",
            "type": "array"
          },
          "sample_tags_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.TagActionValues"
              }
            ],
            "description": "Sample tag filter action type"
          },
          "sample_type": {
            "description": "Sample Type",
            "title": "Sample Type",
            "type": "string"
          },
          "samples_started_filter_range": {
            "description": "Samples started filter range",
            "title": "Samples Started Filter Range",
            "type": "string"
          },
          "sort_by": {
            "description": "Field to sort by",
            "title": "Sort By",
            "type": "string"
          },
          "sort_order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.SortOrderValues"
              }
            ],
            "description": "Sort by ascending or descending"
          },
          "source_ids": {
            "description": "List of Source IDs",
            "items": {
              "type": "integer"
            },
            "title": "Source Ids",
            "type": "array"
          },
          "time_of_collection_end": {
            "description": "Sample's time of collection upper range",
            "title": "Time Of Collection End",
            "type": "string"
          },
          "time_of_collection_filter_range": {
            "description": "Sample's time of collection pre-defined range",
            "title": "Time Of Collection Filter Range",
            "type": "string"
          },
          "time_of_collection_start": {
            "description": "Sample's time of collection lower range",
            "title": "Time Of Collection Start",
            "type": "string"
          },
          "unique_samples_only": {
            "description": "Only return unique Samples",
            "title": "Unique Samples Only",
            "type": "boolean"
          }
        },
        "title": "SampleFilterSchema",
        "type": "object"
      },
      "SampleFilterSchema.7a3ad72.IncludeDeletedValues": {
        "description": "An enumeration.",
        "enum": [
          "TRUE",
          "DELETED_ONLY"
        ],
        "title": "IncludeDeletedValues"
      },
      "SampleFilterSchema.7a3ad72.SortOrderValues": {
        "description": "An enumeration.",
        "enum": [
          "ASC",
          "DESC"
        ],
        "title": "SortOrderValues"
      },
      "SampleFilterSchema.7a3ad72.TagActionValues": {
        "description": "An enumeration.",
        "enum": [
          "Or",
          "And",
          "Not"
        ],
        "title": "TagActionValues"
      },
      "SendInvoiceEmailSchema.0d0ead6": {
        "properties": {
          "emails": {
            "items": {
              "type": "string"
            },
            "title": "Emails",
            "type": "array"
          }
        },
        "title": "SendInvoiceEmailSchema",
        "type": "object"
      },
      "SendPaymentEmailSchema.0d0ead6": {
        "properties": {
          "email_message": {
            "title": "Email Message",
            "type": "string"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "title": "Emails",
            "type": "array"
          }
        },
        "required": [
          "emails"
        ],
        "title": "SendPaymentEmailSchema",
        "type": "object"
      },
      "SingleAPIClientSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleAPIClientSchema.a9993e3.APIClientSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleAPIClientSchema",
        "type": "object"
      },
      "SingleAPIClientSchema.a9993e3.APIClientSchema": {
        "properties": {
          "api_versions": {
            "title": "Api Versions",
            "type": "string"
          },
          "authorized_redirect_uri": {
            "maxLength": 500,
            "title": "Authorized Redirect Uri",
            "type": "string"
          },
          "client_type": {
            "maxLength": 250,
            "title": "Client Type",
            "type": "string"
          },
          "confidential": {
            "title": "Confidential",
            "type": "boolean"
          },
          "cors_origin": {
            "maxLength": 500,
            "title": "Cors Origin",
            "type": "string"
          },
          "customers": {
            "items": {
              "type": "object"
            },
            "title": "Customers",
            "type": "array"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_rotated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Rotated"
          },
          "generated_by": {
            "title": "Generated By",
            "type": "object"
          },
          "generated_by_id": {
            "title": "Generated By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "title": "Name",
            "type": "string"
          },
          "read_only": {
            "title": "Read Only",
            "type": "boolean"
          },
          "scopes_json": {
            "title": "Scopes Json",
            "type": "object"
          }
        },
        "title": "APIClientSchema",
        "type": "object"
      },
      "SingleAccessioningTypeSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleAccessioningTypeSchema.a9993e3.AccessioningTypeSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleAccessioningTypeSchema",
        "type": "object"
      },
      "SingleAccessioningTypeSchema.a9993e3.AccessioningTypeSchema": {
        "properties": {
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "value": {
            "title": "Value",
            "type": "string"
          }
        },
        "title": "AccessioningTypeSchema",
        "type": "object"
      },
      "SingleAssaySchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleAssaySchema.a9993e3.AssaySchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleAssaySchema",
        "type": "object"
      },
      "SingleAssaySchema.a9993e3.AssaySchema": {
        "properties": {
          "accessioning_types": {
            "items": {
              "type": "object"
            },
            "title": "Accessioning Types",
            "type": "array"
          },
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "batch_inventory_template_id": {
            "title": "Batch Inventory Template Id",
            "type": "integer"
          },
          "batch_protocol_id": {
            "title": "Batch Protocol Id",
            "type": "integer"
          },
          "batch_worksheet_ent": {
            "title": "Batch Worksheet Ent",
            "type": "object"
          },
          "batch_worksheet_id": {
            "title": "Batch Worksheet Id",
            "type": "integer"
          },
          "category": {
            "title": "Category",
            "type": "object"
          },
          "category_id": {
            "title": "Category Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "default_technician": {
            "title": "Default Technician",
            "type": "object"
          },
          "default_technician_id": {
            "title": "Default Technician Id",
            "type": "integer"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "document_id": {
            "title": "Document Id",
            "type": "integer"
          },
          "duration": {
            "title": "Duration",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "inventory_template_id": {
            "title": "Inventory Template Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "method": {
            "title": "Method",
            "type": "string"
          },
          "method_detection_limit": {
            "title": "Method Detection Limit",
            "type": "number"
          },
          "order_report_config_id": {
            "title": "Order Report Config Id",
            "type": "integer"
          },
          "panels": {
            "items": {
              "type": "object"
            },
            "title": "Panels",
            "type": "array"
          },
          "per_sample_fee_name": {
            "title": "Per Sample Fee Name",
            "type": "string"
          },
          "per_sample_fee_price": {
            "title": "Per Sample Fee Price",
            "type": "number"
          },
          "percent_recovery_lower_limit": {
            "title": "Percent Recovery Lower Limit",
            "type": "number"
          },
          "percent_recovery_upper_limit": {
            "title": "Percent Recovery Upper Limit",
            "type": "number"
          },
          "protocol_id": {
            "title": "Protocol Id",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "relative_percent_difference_limit": {
            "title": "Relative Percent Difference Limit",
            "type": "number"
          },
          "reporting_limit": {
            "title": "Reporting Limit",
            "type": "number"
          },
          "sample_level_worksheet": {
            "title": "Sample Level Worksheet",
            "type": "boolean"
          },
          "sample_report_config_id": {
            "title": "Sample Report Config Id",
            "type": "integer"
          },
          "show_in_portal": {
            "title": "Show In Portal",
            "type": "boolean"
          },
          "sort_order": {
            "title": "Sort Order",
            "type": "integer"
          },
          "spike_level": {
            "title": "Spike Level",
            "type": "number"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "team": {
            "title": "Team",
            "type": "object"
          },
          "team_id": {
            "title": "Team Id",
            "type": "integer"
          },
          "test_report_config_id": {
            "title": "Test Report Config Id",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "turnarounds": {
            "items": {
              "type": "object"
            },
            "title": "Turnarounds",
            "type": "array"
          },
          "units": {
            "title": "Units",
            "type": "string"
          },
          "worksheet_ent": {
            "title": "Worksheet Ent",
            "type": "object"
          },
          "worksheet_id": {
            "title": "Worksheet Id",
            "type": "integer"
          }
        },
        "title": "AssaySchema",
        "type": "object"
      },
      "SingleAttachmentSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleAttachmentSchema.a9993e3.AttachmentSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleAttachmentSchema",
        "type": "object"
      },
      "SingleAttachmentSchema.a9993e3.AttachmentSchema": {
        "properties": {
          "asset_id": {
            "title": "Asset Id",
            "type": "integer"
          },
          "attach_to_report": {
            "title": "Attach To Report",
            "type": "boolean"
          },
          "attach_to_report_email": {
            "title": "Attach To Report Email",
            "type": "boolean"
          },
          "attachment_data_type": {
            "title": "Attachment Data Type",
            "type": "string"
          },
          "attachment_upload_type": {
            "title": "Attachment Upload Type",
            "type": "string"
          },
          "date_public": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Public"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "id_hash": {
            "title": "Id Hash",
            "type": "string"
          },
          "ignore_sns": {
            "title": "Ignore Sns",
            "type": "boolean"
          },
          "is_public": {
            "title": "Is Public",
            "type": "boolean"
          },
          "made_public_by_api_client_id": {
            "title": "Made Public By Api Client Id",
            "type": "string"
          },
          "made_public_by_id": {
            "title": "Made Public By Id",
            "type": "integer"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "object_id": {
            "title": "Object Id",
            "type": "integer"
          },
          "object_ids": {
            "title": "Object Ids",
            "type": "string"
          },
          "published_to_portal": {
            "title": "Published To Portal",
            "type": "boolean"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "title": "AttachmentSchema",
        "type": "object"
      },
      "SingleBatchSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleBatchSchema.a9993e3.BatchSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleBatchSchema",
        "type": "object"
      },
      "SingleBatchSchema.a9993e3.BatchSchema": {
        "properties": {
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "children": {
            "items": {
              "type": "object"
            },
            "title": "Children",
            "type": "array"
          },
          "control_group": {
            "title": "Control Group",
            "type": "object"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "display_name": {
            "title": "Display Name",
            "type": "string"
          },
          "equipment_list": {
            "items": {
              "type": "object"
            },
            "title": "Equipment List",
            "type": "array"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "parents": {
            "items": {
              "type": "object"
            },
            "title": "Parents",
            "type": "array"
          },
          "platemap_format": {
            "title": "Platemap Format",
            "type": "string"
          },
          "samples": {
            "items": {
              "type": "object"
            },
            "title": "Samples",
            "type": "array"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "tests": {
            "items": {
              "type": "object"
            },
            "title": "Tests",
            "type": "array"
          },
          "worksheet": {
            "title": "Worksheet",
            "type": "object"
          },
          "worksheet_data": {
            "title": "Worksheet Data",
            "type": "object"
          },
          "worksheet_id": {
            "title": "Worksheet Id",
            "type": "integer"
          }
        },
        "title": "BatchSchema",
        "type": "object"
      },
      "SingleCategorySchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleCategorySchema.a9993e3.CategorySchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleCategorySchema",
        "type": "object"
      },
      "SingleCategorySchema.a9993e3.CategorySchema": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "title": "CategorySchema",
        "type": "object"
      },
      "SingleContactSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleContactSchema.a9993e3.ContactSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleContactSchema",
        "type": "object"
      },
      "SingleContactSchema.a9993e3.ContactSchema": {
        "properties": {
          "address": {
            "maxLength": 1000,
            "title": "Address",
            "type": "string"
          },
          "customers": {
            "items": {
              "type": "object"
            },
            "title": "Customers",
            "type": "array"
          },
          "email_address": {
            "maxLength": 500,
            "title": "Email Address",
            "type": "string"
          },
          "fax": {
            "maxLength": 50,
            "title": "Fax",
            "type": "string"
          },
          "first_name": {
            "maxLength": 100,
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "is_doctor": {
            "title": "Is Doctor",
            "type": "boolean"
          },
          "last_name": {
            "maxLength": 100,
            "title": "Last Name",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "mobile": {
            "maxLength": 50,
            "title": "Mobile",
            "type": "string"
          },
          "phone": {
            "maxLength": 50,
            "title": "Phone",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          }
        },
        "title": "ContactSchema",
        "type": "object"
      },
      "SingleCustomerSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleCustomerSchema.a9993e3.CustomerSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleCustomerSchema",
        "type": "object"
      },
      "SingleCustomerSchema.a9993e3.CustomerSchema": {
        "properties": {
          "address": {
            "maxLength": 1000,
            "title": "Address",
            "type": "string"
          },
          "city_name": {
            "maxLength": 100,
            "title": "City Name",
            "type": "string"
          },
          "comments": {
            "maxLength": 2000,
            "title": "Comments",
            "type": "string"
          },
          "company_discount": {
            "title": "Company Discount",
            "type": "number"
          },
          "confident_cannabis_customer_id": {
            "title": "Confident Cannabis Customer Id",
            "type": "string"
          },
          "contacts": {
            "items": {
              "type": "object"
            },
            "title": "Contacts",
            "type": "array"
          },
          "country_name": {
            "maxLength": 45,
            "title": "Country Name",
            "type": "string"
          },
          "customer_name": {
            "maxLength": 250,
            "title": "Customer Name",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "fax": {
            "title": "Fax",
            "type": "string"
          },
          "group_name": {
            "title": "Group Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "id_abbreviation": {
            "maxLength": 50,
            "title": "Id Abbreviation",
            "type": "string"
          },
          "invoicing_notes": {
            "maxLength": 5000,
            "title": "Invoicing Notes",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "mfa_enforced": {
            "title": "Mfa Enforced",
            "type": "boolean"
          },
          "parent_customer_id": {
            "title": "Parent Customer Id",
            "type": "integer"
          },
          "payment_term": {
            "maxLength": 45,
            "title": "Payment Term",
            "type": "string"
          },
          "payment_term_days": {
            "title": "Payment Term Days",
            "type": "integer"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          },
          "po_number": {
            "maxLength": 1000,
            "title": "Po Number",
            "type": "string"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "qbd_skip_address_sync": {
            "title": "Qbd Skip Address Sync",
            "type": "boolean"
          },
          "sources": {
            "items": {
              "type": "object"
            },
            "title": "Sources",
            "type": "array"
          },
          "special_instructions": {
            "maxLength": 5000,
            "title": "Special Instructions",
            "type": "string"
          },
          "state_name": {
            "maxLength": 45,
            "title": "State Name",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "zip_postal_code": {
            "maxLength": 45,
            "title": "Zip Postal Code",
            "type": "string"
          }
        },
        "title": "CustomerSchema",
        "type": "object"
      },
      "SingleDivisionSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleDivisionSchema.a9993e3.DivisionSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleDivisionSchema",
        "type": "object"
      },
      "SingleDivisionSchema.a9993e3.DivisionSchema": {
        "properties": {
          "description": {
            "maxLength": 1000,
            "title": "Description",
            "type": "string"
          },
          "global_division": {
            "title": "Global Division",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "maxLength": 100,
            "title": "Name",
            "type": "string"
          }
        },
        "title": "DivisionSchema",
        "type": "object"
      },
      "SingleEntityIntegrationVendorRelationshipSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleEntityIntegrationVendorRelationshipSchema.a9993e3.EntityIntegrationVendorRelationshipSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleEntityIntegrationVendorRelationshipSchema",
        "type": "object"
      },
      "SingleEntityIntegrationVendorRelationshipSchema.a9993e3.EntityIntegrationVendorRelationshipSchema": {
        "properties": {
          "entity_id": {
            "title": "Entity Id",
            "type": "integer"
          },
          "entity_type": {
            "title": "Entity Type",
            "type": "string"
          },
          "integration_id": {
            "title": "Integration Id",
            "type": "integer"
          },
          "integraton_vendor_id": {
            "title": "Integraton Vendor Id",
            "type": "string"
          }
        },
        "required": [
          "entity_id"
        ],
        "title": "EntityIntegrationVendorRelationshipSchema",
        "type": "object"
      },
      "SingleEpicSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleEpicSchema.a9993e3.EpicSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleEpicSchema",
        "type": "object"
      },
      "SingleEpicSchema.a9993e3.EpicSchema": {
        "properties": {
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "title": "EpicSchema",
        "type": "object"
      },
      "SingleGenReportSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleGenReportSchema.a9993e3.GenReportSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleGenReportSchema",
        "type": "object"
      },
      "SingleGenReportSchema.a9993e3.GenReportSchema": {
        "properties": {
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_generated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Generated"
          },
          "date_public": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Public"
          },
          "date_published": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Published"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_api_client": {
            "title": "Emailed By Api Client",
            "type": "object"
          },
          "emailed_by_api_client_id": {
            "title": "Emailed By Api Client Id",
            "type": "string"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "generated_by": {
            "title": "Generated By",
            "type": "object"
          },
          "generated_by_api_client": {
            "title": "Generated By Api Client",
            "type": "object"
          },
          "generated_by_api_client_id": {
            "title": "Generated By Api Client Id",
            "type": "string"
          },
          "generated_by_id": {
            "title": "Generated By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "id_hash": {
            "title": "Id Hash",
            "type": "string"
          },
          "is_public": {
            "title": "Is Public",
            "type": "boolean"
          },
          "made_public_by": {
            "title": "Made Public By",
            "type": "object"
          },
          "made_public_by_api_client": {
            "title": "Made Public By Api Client",
            "type": "object"
          },
          "made_public_by_api_client_id": {
            "title": "Made Public By Api Client Id",
            "type": "string"
          },
          "made_public_by_id": {
            "title": "Made Public By Id",
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "published_by_api_client": {
            "title": "Published By Api Client",
            "type": "object"
          },
          "published_by_api_client_id": {
            "title": "Published By Api Client Id",
            "type": "string"
          },
          "render_batch_uuid": {
            "title": "Render Batch Uuid",
            "type": "string"
          },
          "render_error_message": {
            "title": "Render Error Message",
            "type": "string"
          },
          "render_params": {
            "title": "Render Params",
            "type": "string"
          },
          "render_status": {
            "title": "Render Status",
            "type": "string"
          },
          "report_config_id": {
            "title": "Report Config Id",
            "type": "integer"
          },
          "sample": {
            "title": "Sample",
            "type": "object"
          },
          "sample_id": {
            "title": "Sample Id",
            "type": "integer"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "test": {
            "title": "Test",
            "type": "object"
          },
          "test_id": {
            "title": "Test Id",
            "type": "integer"
          },
          "url": {
            "title": "Url",
            "type": "string"
          }
        },
        "title": "GenReportSchema",
        "type": "object"
      },
      "SingleInvoiceItemSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleInvoiceItemSchema.a9993e3.InvoiceItemSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleInvoiceItemSchema",
        "type": "object"
      },
      "SingleInvoiceItemSchema.a9993e3.InvoiceItemSchema": {
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "number"
          },
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoice": {
            "title": "Invoice",
            "type": "object"
          },
          "invoice_id": {
            "title": "Invoice Id",
            "type": "integer"
          },
          "invoice_item_type": {
            "title": "Invoice Item Type",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "panel": {
            "title": "Panel",
            "type": "object"
          },
          "panel_id": {
            "title": "Panel Id",
            "type": "integer"
          },
          "quantity": {
            "title": "Quantity",
            "type": "integer"
          },
          "quantity_discount": {
            "title": "Quantity Discount",
            "type": "object"
          },
          "quantity_discount_id": {
            "title": "Quantity Discount Id",
            "type": "integer"
          },
          "sort_order": {
            "title": "Sort Order",
            "type": "integer"
          },
          "surcharge": {
            "title": "Surcharge",
            "type": "number"
          },
          "surcharge_invoice_item_uuid": {
            "title": "Surcharge Invoice Item Uuid",
            "type": "string"
          },
          "tax_rate": {
            "title": "Tax Rate",
            "type": "object"
          },
          "tax_rate_id": {
            "title": "Tax Rate Id",
            "type": "integer"
          },
          "tax_rate_name": {
            "title": "Tax Rate Name",
            "type": "string"
          },
          "tax_rate_percentage": {
            "title": "Tax Rate Percentage",
            "type": "number"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          },
          "uuid": {
            "title": "Uuid",
            "type": "string"
          }
        },
        "title": "InvoiceItemSchema",
        "type": "object"
      },
      "SingleInvoiceSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleInvoiceSchema.a9993e3.InvoiceSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleInvoiceSchema",
        "type": "object"
      },
      "SingleInvoiceSchema.a9993e3.InvoiceSchema": {
        "properties": {
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_paid": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Paid"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "discount_individual_items": {
            "title": "Discount Individual Items",
            "type": "boolean"
          },
          "do_not_show_sync_warning": {
            "title": "Do Not Show Sync Warning",
            "type": "boolean"
          },
          "due_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Due Date"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "force_full_panel_prices": {
            "title": "Force Full Panel Prices",
            "type": "boolean"
          },
          "group_by_panel": {
            "title": "Group By Panel",
            "type": "boolean"
          },
          "group_by_panel_turnaround_not_applied": {
            "title": "Group By Panel Turnaround Not Applied",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoice_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Invoice Date"
          },
          "invoice_items": {
            "items": {
              "type": "object"
            },
            "title": "Invoice Items",
            "type": "array"
          },
          "invoice_payments": {
            "items": {
              "type": "object"
            },
            "title": "Invoice Payments",
            "type": "array"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "order_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Order Ids",
            "type": "array"
          },
          "orders": {
            "items": {
              "type": "object"
            },
            "title": "Orders",
            "type": "array"
          },
          "out_of_sync": {
            "title": "Out Of Sync",
            "type": "boolean"
          },
          "outstanding_amount": {
            "title": "Outstanding Amount",
            "type": "number"
          },
          "paid": {
            "title": "Paid",
            "type": "boolean"
          },
          "payment_term": {
            "title": "Payment Term",
            "type": "string"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "quotation_custom_prices_not_applied": {
            "title": "Quotation Custom Prices Not Applied",
            "type": "boolean"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "sub_total": {
            "title": "Sub Total",
            "type": "number"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "type": "number"
          },
          "total_after_tax": {
            "title": "Total After Tax",
            "type": "number"
          }
        },
        "title": "InvoiceSchema",
        "type": "object"
      },
      "SingleLocationSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleLocationSchema.a9993e3.LocationSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleLocationSchema",
        "type": "object"
      },
      "SingleLocationSchema.a9993e3.LocationSchema": {
        "properties": {
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "location_type": {
            "title": "Location Type",
            "type": "object"
          },
          "location_type_id": {
            "title": "Location Type Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "parent_location": {
            "title": "Parent Location",
            "type": "object"
          },
          "parent_location_id": {
            "title": "Parent Location Id",
            "type": "integer"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          }
        },
        "title": "LocationSchema",
        "type": "object"
      },
      "SingleLocationTypeSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleLocationTypeSchema.a9993e3.LocationTypeSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleLocationTypeSchema",
        "type": "object"
      },
      "SingleLocationTypeSchema.a9993e3.LocationTypeSchema": {
        "properties": {
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "movable_slots": {
            "title": "Movable Slots",
            "type": "boolean"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "number_of_slots": {
            "title": "Number Of Slots",
            "type": "integer"
          },
          "parent_location_type": {
            "title": "Parent Location Type",
            "type": "object"
          },
          "parent_location_type_id": {
            "title": "Parent Location Type Id",
            "type": "integer"
          }
        },
        "title": "LocationTypeSchema",
        "type": "object"
      },
      "SingleOrderSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleOrderSchema.a9993e3.OrderSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleOrderSchema",
        "type": "object"
      },
      "SingleOrderSchema.a9993e3.OrderSchema": {
        "properties": {
          "approved_by": {
            "title": "Approved By",
            "type": "object"
          },
          "approved_by_id": {
            "title": "Approved By Id",
            "type": "integer"
          },
          "cc_id": {
            "title": "Cc Id",
            "type": "string"
          },
          "cc_latest_sync": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Cc Latest Sync"
          },
          "cc_order": {
            "title": "Cc Order",
            "type": "boolean"
          },
          "cc_order_status": {
            "title": "Cc Order Status",
            "type": "integer"
          },
          "cc_sync_error": {
            "title": "Cc Sync Error",
            "type": "string"
          },
          "cc_sync_status": {
            "title": "Cc Sync Status",
            "type": "string"
          },
          "created_from_quotation": {
            "title": "Created From Quotation",
            "type": "object"
          },
          "created_from_quotation_id": {
            "title": "Created From Quotation Id",
            "type": "integer"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "customer_account": {
            "title": "Customer Account",
            "type": "object"
          },
          "customer_account_id": {
            "title": "Customer Account Id",
            "type": "integer"
          },
          "date_approved": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Approved"
          },
          "date_completed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Completed"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_received": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Received"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "date_requested": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Requested"
          },
          "date_required": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Required"
          },
          "division": {
            "title": "Division",
            "type": "object"
          },
          "division_id": {
            "title": "Division Id",
            "type": "integer"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "entered_by": {
            "title": "Entered By",
            "type": "object"
          },
          "entered_by_api_client": {
            "title": "Entered By Api Client",
            "type": "object"
          },
          "entered_by_api_client_id": {
            "title": "Entered By Api Client Id",
            "type": "string"
          },
          "entered_by_id": {
            "title": "Entered By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoicing_notes": {
            "title": "Invoicing Notes",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "order_request": {
            "title": "Order Request",
            "type": "boolean"
          },
          "order_request_notes": {
            "title": "Order Request Notes",
            "type": "string"
          },
          "order_request_status": {
            "title": "Order Request Status",
            "type": "string"
          },
          "portal_read": {
            "title": "Portal Read",
            "type": "boolean"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "published_to_portal": {
            "title": "Published To Portal",
            "type": "boolean"
          },
          "received_by": {
            "title": "Received By",
            "type": "object"
          },
          "received_by_id": {
            "title": "Received By Id",
            "type": "integer"
          },
          "release_report": {
            "title": "Release Report",
            "type": "boolean"
          },
          "requested_by": {
            "title": "Requested By",
            "type": "object"
          },
          "requested_by_id": {
            "title": "Requested By Id",
            "type": "integer"
          },
          "requested_for": {
            "title": "Requested For",
            "type": "object"
          },
          "requested_for_id": {
            "title": "Requested For Id",
            "type": "integer"
          },
          "revision_notes": {
            "title": "Revision Notes",
            "type": "string"
          },
          "special_instructions": {
            "title": "Special Instructions",
            "type": "string"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "type": "string"
          },
          "total_samples_created": {
            "default": 0,
            "title": "Total Samples Created",
            "type": "integer"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          }
        },
        "title": "OrderSchema",
        "type": "object"
      },
      "SinglePanelSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SinglePanelSchema.a9993e3.PanelSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SinglePanelSchema",
        "type": "object"
      },
      "SinglePanelSchema.a9993e3.PanelSchema": {
        "properties": {
          "assays": {
            "items": {
              "type": "object"
            },
            "title": "Assays",
            "type": "array"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "show_in_portal": {
            "title": "Show In Portal",
            "type": "boolean"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "title": "PanelSchema",
        "type": "object"
      },
      "SinglePaymentSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SinglePaymentSchema.a9993e3.PaymentSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SinglePaymentSchema",
        "type": "object"
      },
      "SinglePaymentSchema.a9993e3.PaymentSchema": {
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "number"
          },
          "check_number": {
            "title": "Check Number",
            "type": "string"
          },
          "created_by_api_client": {
            "title": "Created By Api Client",
            "type": "object"
          },
          "created_by_api_client_id": {
            "title": "Created By Api Client Id",
            "type": "string"
          },
          "created_by_user": {
            "title": "Created By User",
            "type": "object"
          },
          "created_by_user_id": {
            "title": "Created By User Id",
            "type": "integer"
          },
          "customer": {
            "title": "Customer",
            "type": "object"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "payment_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Payment Date"
          },
          "payment_type": {
            "title": "Payment Type",
            "type": "string"
          },
          "payment_type_id": {
            "title": "Payment Type Id",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "unapplied_amount": {
            "title": "Unapplied Amount",
            "type": "number"
          }
        },
        "title": "PaymentSchema",
        "type": "object"
      },
      "SinglePrintDocSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SinglePrintDocSchema.a9993e3.PrintDocSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SinglePrintDocSchema",
        "type": "object"
      },
      "SinglePrintDocSchema.a9993e3.PrintDocSchema": {
        "properties": {
          "asset_id": {
            "title": "Asset Id",
            "type": "integer"
          },
          "attach_to_email": {
            "title": "Attach To Email",
            "type": "boolean"
          },
          "attach_to_report": {
            "title": "Attach To Report",
            "type": "boolean"
          },
          "attach_to_report_email": {
            "title": "Attach To Report Email",
            "type": "boolean"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "integer"
          },
          "date_generated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Generated"
          },
          "generated_by_api_client_id": {
            "title": "Generated By Api Client Id",
            "type": "string"
          },
          "generated_by_contact_id": {
            "title": "Generated By Contact Id",
            "type": "integer"
          },
          "generated_by_id": {
            "title": "Generated By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "object_id": {
            "title": "Object Id",
            "type": "integer"
          },
          "render_error": {
            "title": "Render Error",
            "type": "string"
          },
          "render_params": {
            "title": "Render Params",
            "type": "string"
          },
          "render_status": {
            "title": "Render Status",
            "type": "string"
          },
          "report_config_id": {
            "title": "Report Config Id",
            "type": "integer"
          },
          "signature_cancelled_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Signature Cancelled At"
          },
          "signature_cancelled_by_id": {
            "title": "Signature Cancelled By Id",
            "type": "integer"
          },
          "signature_completed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Signature Completed At"
          },
          "signature_error": {
            "title": "Signature Error",
            "type": "string"
          },
          "signature_request_id": {
            "title": "Signature Request Id",
            "type": "string"
          },
          "signature_requested_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Signature Requested At"
          },
          "signature_requested_by_id": {
            "title": "Signature Requested By Id",
            "type": "integer"
          },
          "signature_status": {
            "title": "Signature Status",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "integer"
          }
        },
        "title": "PrintDocSchema",
        "type": "object"
      },
      "SingleProjectSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleProjectSchema.a9993e3.ProjectSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleProjectSchema",
        "type": "object"
      },
      "SingleProjectSchema.a9993e3.ProjectSchema": {
        "properties": {
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_completed": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Completed"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_started": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Started"
          },
          "epic": {
            "title": "Epic",
            "type": "object"
          },
          "epic_id": {
            "title": "Epic Id",
            "type": "integer"
          },
          "estimated_complete_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Complete Date"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "percent_completion": {
            "title": "Percent Completion",
            "type": "integer"
          },
          "result": {
            "title": "Result",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "tech": {
            "title": "Tech",
            "type": "object"
          },
          "tech_id": {
            "title": "Tech Id",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "title": "ProjectSchema",
        "type": "object"
      },
      "SingleQuotationSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleQuotationSchema.a9993e3.QuotationSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleQuotationSchema",
        "type": "object"
      },
      "SingleQuotationSchema.a9993e3.QuotationSchema": {
        "properties": {
          "company_name": {
            "title": "Company Name",
            "type": "string"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "customer": {
            "title": "Customer",
            "type": "object"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "discount_individual_items": {
            "title": "Discount Individual Items",
            "type": "boolean"
          },
          "email_address": {
            "title": "Email Address",
            "type": "string"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_api_client": {
            "title": "Emailed By Api Client",
            "type": "object"
          },
          "emailed_by_api_client_id": {
            "title": "Emailed By Api Client Id",
            "type": "string"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "expiration_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Expiration Date"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "payment_term": {
            "title": "Payment Term",
            "type": "string"
          },
          "payment_term_days": {
            "title": "Payment Term Days",
            "type": "integer"
          },
          "quotation_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Quotation Date"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "sub_total": {
            "title": "Sub Total",
            "type": "number"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "total": {
            "title": "Total",
            "type": "number"
          },
          "uuid": {
            "title": "Uuid",
            "type": "string"
          }
        },
        "title": "QuotationSchema",
        "type": "object"
      },
      "SingleSampleSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleSampleSchema.a9993e3.SampleSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleSampleSchema",
        "type": "object"
      },
      "SingleSampleSchema.a9993e3.SampleSchema": {
        "properties": {
          "accessioning_type": {
            "title": "Accessioning Type",
            "type": "object"
          },
          "accessioning_type_id": {
            "title": "Accessioning Type Id",
            "type": "integer"
          },
          "batches": {
            "items": {
              "type": "object"
            },
            "title": "Batches",
            "type": "array"
          },
          "cc_id": {
            "title": "Cc Id",
            "type": "string"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "complete": {
            "title": "Complete",
            "type": "boolean"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_received": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Received"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "inventory_stock": {
            "title": "Inventory Stock",
            "type": "object"
          },
          "inventory_stock_id": {
            "title": "Inventory Stock Id",
            "type": "integer"
          },
          "inventory_stock_quantity_used": {
            "title": "Inventory Stock Quantity Used",
            "type": "number"
          },
          "lab_id": {
            "title": "Lab Id",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "linked": {
            "title": "Linked",
            "type": "boolean"
          },
          "location": {
            "title": "Location",
            "type": "object"
          },
          "location_id": {
            "title": "Location Id",
            "type": "integer"
          },
          "metrc_uid": {
            "title": "Metrc Uid",
            "type": "string"
          },
          "most_recent_report": {
            "title": "Most Recent Report",
            "type": "object"
          },
          "most_recent_report_id": {
            "title": "Most Recent Report Id",
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "order_request": {
            "title": "Order Request",
            "type": "boolean"
          },
          "parent_sample": {
            "title": "Parent Sample",
            "type": "object"
          },
          "parent_sample_id": {
            "title": "Parent Sample Id",
            "type": "integer"
          },
          "point_of_collection": {
            "title": "Point Of Collection",
            "type": "string"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "received": {
            "title": "Received",
            "type": "boolean"
          },
          "reports": {
            "items": {
              "type": "object"
            },
            "title": "Reports",
            "type": "array"
          },
          "sample_type": {
            "title": "Sample Type",
            "type": "string"
          },
          "source": {
            "title": "Source",
            "type": "object"
          },
          "source_id": {
            "title": "Source Id",
            "type": "integer"
          },
          "sub_samples": {
            "items": {
              "type": "object"
            },
            "title": "Sub Samples",
            "type": "array"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "tests": {
            "items": {
              "type": "object"
            },
            "title": "Tests",
            "type": "array"
          },
          "time_of_collection": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Time Of Collection"
          }
        },
        "title": "SampleSchema",
        "type": "object"
      },
      "SingleSourceSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleSourceSchema.a9993e3.SourceSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleSourceSchema",
        "type": "object"
      },
      "SingleSourceSchema.a9993e3.SourceSchema": {
        "properties": {
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Of Birth"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "type": "string"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "identifier": {
            "title": "Identifier",
            "type": "string"
          },
          "lab_id": {
            "title": "Lab Id",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "latitude": {
            "title": "Latitude",
            "type": "number"
          },
          "longitude": {
            "title": "Longitude",
            "type": "number"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          }
        },
        "title": "SourceSchema",
        "type": "object"
      },
      "SingleTeamSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleTeamSchema.a9993e3.TeamSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleTeamSchema",
        "type": "object"
      },
      "SingleTeamSchema.a9993e3.TeamSchema": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "title": "TeamSchema",
        "type": "object"
      },
      "SingleTestSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleTestSchema.a9993e3.TestSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleTestSchema",
        "type": "object"
      },
      "SingleTestSchema.a9993e3.TestSchema": {
        "properties": {
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "complete_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Complete Date"
          },
          "customer_update": {
            "title": "Customer Update",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "date_results_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Results Released"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "estimated_complete_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Complete Date"
          },
          "estimated_start_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Start Date"
          },
          "free_response": {
            "title": "Free Response",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "last_updated_unix_timestamp": {
            "title": "Last Updated Unix Timestamp",
            "type": "number"
          },
          "most_recent_report": {
            "title": "Most Recent Report",
            "type": "object"
          },
          "most_recent_report_id": {
            "title": "Most Recent Report Id",
            "type": "integer"
          },
          "panel": {
            "title": "Panel",
            "type": "object"
          },
          "panel_group_uuid": {
            "title": "Panel Group Uuid",
            "type": "string"
          },
          "panel_id": {
            "title": "Panel Id",
            "type": "integer"
          },
          "priority": {
            "title": "Priority",
            "type": "integer"
          },
          "priority_current": {
            "title": "Priority Current",
            "type": "boolean"
          },
          "priority_done": {
            "title": "Priority Done",
            "type": "boolean"
          },
          "priority_group_uuid": {
            "title": "Priority Group Uuid",
            "type": "string"
          },
          "publish_worksheet_to_portal": {
            "default": false,
            "title": "Publish Worksheet To Portal",
            "type": "boolean"
          },
          "release_report": {
            "title": "Release Report",
            "type": "boolean"
          },
          "release_results": {
            "title": "Release Results",
            "type": "boolean"
          },
          "reported_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Reported Date"
          },
          "results": {
            "title": "Results",
            "type": "string"
          },
          "sample": {
            "title": "Sample",
            "type": "object"
          },
          "sample_id": {
            "title": "Sample Id",
            "type": "integer"
          },
          "specification_overall": {
            "title": "Specification Overall",
            "type": "string"
          },
          "start_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Start Date"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "tech": {
            "title": "Tech",
            "type": "object"
          },
          "tech_id": {
            "title": "Tech Id",
            "type": "integer"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          },
          "worksheet_data": {
            "title": "Worksheet Data",
            "type": "object"
          }
        },
        "title": "TestSchema",
        "type": "object"
      },
      "SingleTestWorksheetResponseSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleTestWorksheetResponseSchema.a9993e3.TestWorksheetResponseSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleTestWorksheetResponseSchema",
        "type": "object"
      },
      "SingleTestWorksheetResponseSchema.a9993e3.TestWorksheetResponseSchema": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "worksheet_config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              }
            ],
            "title": "Worksheet Config"
          },
          "worksheet_data": {
            "title": "Worksheet Data",
            "type": "object"
          },
          "worksheet_processed": {
            "title": "Worksheet Processed",
            "type": "boolean"
          },
          "worksheet_processed_error": {
            "title": "Worksheet Processed Error",
            "type": "boolean"
          },
          "worksheet_processed_error_msg": {
            "title": "Worksheet Processed Error Msg",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "TestWorksheetResponseSchema",
        "type": "object"
      },
      "SingleTurnaroundSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleTurnaroundSchema.a9993e3.TurnaroundSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleTurnaroundSchema",
        "type": "object"
      },
      "SingleTurnaroundSchema.a9993e3.TurnaroundSchema": {
        "properties": {
          "business_days_only": {
            "title": "Business Days Only",
            "type": "boolean"
          },
          "default_duration": {
            "title": "Default Duration",
            "type": "integer"
          },
          "default_flat_surcharge": {
            "title": "Default Flat Surcharge",
            "type": "number"
          },
          "default_percentage_surcharge": {
            "title": "Default Percentage Surcharge",
            "type": "number"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "divisions": {
            "items": {
              "type": "object"
            },
            "title": "Divisions",
            "type": "array"
          },
          "flag_background_color": {
            "title": "Flag Background Color",
            "type": "string"
          },
          "flag_text_color": {
            "title": "Flag Text Color",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "title": "TurnaroundSchema",
        "type": "object"
      },
      "SingleUserSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleUserSchema.a9993e3.UserSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleUserSchema",
        "type": "object"
      },
      "SingleUserSchema.a9993e3.UserSchema": {
        "properties": {
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          }
        },
        "title": "UserSchema",
        "type": "object"
      },
      "SingleWorksheetResponseSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleWorksheetResponseSchema.a9993e3.WorksheetResponseSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleWorksheetResponseSchema",
        "type": "object"
      },
      "SingleWorksheetResponseSchema.a9993e3.WorksheetResponseSchema": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "worksheet_config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              }
            ],
            "title": "Worksheet Config"
          },
          "worksheet_data": {
            "title": "Worksheet Data",
            "type": "object"
          }
        },
        "required": [
          "id"
        ],
        "title": "WorksheetResponseSchema",
        "type": "object"
      },
      "SingleWorksheetSchema.a9993e3": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SingleWorksheetSchema.a9993e3.WorksheetSchema"
          }
        },
        "required": [
          "data"
        ],
        "title": "SingleWorksheetSchema",
        "type": "object"
      },
      "SingleWorksheetSchema.a9993e3.WorksheetSchema": {
        "properties": {
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "active_worksheet_version_id": {
            "title": "Active Worksheet Version Id",
            "type": "integer"
          },
          "code_editor_view": {
            "title": "Code Editor View",
            "type": "boolean"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "require_reason": {
            "title": "Require Reason",
            "type": "boolean"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "title": "WorksheetSchema",
        "type": "object"
      },
      "TestDynamicWorksheetNamedCellSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/TestDynamicWorksheetNamedCellSchemaList.a9993e3.TestDynamicWorksheetNamedCellSchema"
        },
        "title": "TestDynamicWorksheetNamedCellSchemaList",
        "type": "array"
      },
      "TestDynamicWorksheetNamedCellSchemaList.a9993e3.TestDynamicWorksheetNamedCellSchema": {
        "example": {
          "id": 123,
          "qb_dynamic_spreadsheet_patch": {
            "cell_range": [
              [
                "a",
                "b"
              ],
              [
                "c",
                "d"
              ]
            ],
            "single_cell": "abc"
          }
        },
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "qb_dynamic_spreadsheet_patch": {
            "title": "Qb Dynamic Spreadsheet Patch",
            "type": "object"
          }
        },
        "required": [
          "id"
        ],
        "title": "TestDynamicWorksheetNamedCellSchema",
        "type": "object"
      },
      "TestFilterSchema.7a3ad72": {
        "properties": {
          "assay_additional_fields_encoded": {
            "description": "Base64 Encoded Assay Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "ASSAY"
            },
            "title": "Assay Additional Fields Encoded",
            "type": "string"
          },
          "assay_condition_ids": {
            "description": "List of Assay Condition IDs",
            "items": {
              "type": "integer"
            },
            "title": "Assay Condition Ids",
            "type": "array"
          },
          "assay_conditions_action": {
            "description": "Assay Condition filter action type",
            "title": "Assay Conditions Action",
            "type": "string"
          },
          "assay_core_fields_encoded": {
            "description": "Base64 Encoded Assay Core Field Filters",
            "json_schema_extra": {
              "entity_type": "ASSAY"
            },
            "title": "Assay Core Fields Encoded",
            "type": "string"
          },
          "assay_ids": {
            "description": "Assay ID list",
            "items": {
              "type": "integer"
            },
            "title": "Assay Ids",
            "type": "array"
          },
          "assigned_to_current_user": {
            "description": "Boolean to only include Tests that are assigned to the current user",
            "title": "Assigned To Current User",
            "type": "boolean"
          },
          "batch_additional_fields_encoded": {
            "description": "Base64 Encoded Batch Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "BATCH"
            },
            "title": "Batch Additional Fields Encoded",
            "type": "string"
          },
          "batch_core_fields_encoded": {
            "description": "Base64 Encoded Batch Core Field Filters",
            "json_schema_extra": {
              "entity_type": "BATCH"
            },
            "title": "Batch Core Fields Encoded",
            "type": "string"
          },
          "batch_ids": {
            "description": "List of Batch IDs",
            "items": {
              "type": "integer"
            },
            "title": "Batch Ids",
            "type": "array"
          },
          "complete_date_end": {
            "description": "Test's complete date upper range",
            "title": "Complete Date End",
            "type": "string"
          },
          "complete_date_filter_range": {
            "description": "Test's complete date pre-defined range",
            "title": "Complete Date Filter Range",
            "type": "string"
          },
          "complete_date_relative": {
            "description": "Test's complete date relative filter type",
            "title": "Complete Date Relative",
            "type": "string"
          },
          "complete_date_relative_days": {
            "description": "Test's complete date relative range",
            "title": "Complete Date Relative Days",
            "type": "string"
          },
          "complete_date_start": {
            "description": "Test's complete date lower range",
            "title": "Complete Date Start",
            "type": "string"
          },
          "customer_additional_fields_encoded": {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "CUSTOMER"
            },
            "title": "Customer Additional Fields Encoded",
            "type": "string"
          },
          "customer_core_fields_encoded": {
            "description": "Base64 Encoded Customer Core Field Filters",
            "json_schema_extra": {
              "entity_type": "CUSTOMER"
            },
            "title": "Customer Core Fields Encoded",
            "type": "string"
          },
          "customer_ids": {
            "description": "Customer ID list",
            "items": {
              "type": "integer"
            },
            "title": "Customer Ids",
            "type": "array"
          },
          "customer_tags": {
            "description": "List of tags for a Customer",
            "items": {
              "type": "string"
            },
            "title": "Customer Tags",
            "type": "array"
          },
          "customer_tags_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
              }
            ],
            "description": "Customer tags filter action type"
          },
          "date_approved_end": {
            "description": "Order's date approved upper range",
            "title": "Date Approved End",
            "type": "string"
          },
          "date_approved_filter_range": {
            "description": "Order's date approved pre-defined range",
            "title": "Date Approved Filter Range",
            "type": "string"
          },
          "date_approved_relative": {
            "description": "Order's date approved relative filter type",
            "title": "Date Approved Relative",
            "type": "string"
          },
          "date_approved_relative_days": {
            "description": "Order's date approved relative range",
            "title": "Date Approved Relative Days",
            "type": "string"
          },
          "date_approved_start": {
            "description": "Order's date approved lower range",
            "title": "Date Approved Start",
            "type": "string"
          },
          "date_created_end": {
            "description": "Test's date created upper range",
            "title": "Date Created End",
            "type": "string"
          },
          "date_created_filter_range": {
            "description": "Test's date created pre-defined range",
            "title": "Date Created Filter Range",
            "type": "string"
          },
          "date_created_relative": {
            "description": "Test's date created relative filter type",
            "title": "Date Created Relative",
            "type": "string"
          },
          "date_created_relative_days": {
            "description": "Test's date created relative range",
            "title": "Date Created Relative Days",
            "type": "string"
          },
          "date_created_start": {
            "description": "Test's date created lower range",
            "title": "Date Created Start",
            "type": "string"
          },
          "date_received_end": {
            "description": "Order's date received upper range",
            "title": "Date Received End",
            "type": "string"
          },
          "date_received_filter_range": {
            "description": "Order's date received pre-defined range",
            "title": "Date Received Filter Range",
            "type": "string"
          },
          "date_received_relative": {
            "description": "Order's date received relative filter type",
            "title": "Date Received Relative",
            "type": "string"
          },
          "date_received_relative_days": {
            "description": "Order's date received relative range",
            "title": "Date Received Relative Days",
            "type": "string"
          },
          "date_received_start": {
            "description": "Order's date received lower range",
            "title": "Date Received Start",
            "type": "string"
          },
          "date_required_end": {
            "description": "Order's due date upper range",
            "title": "Date Required End",
            "type": "string"
          },
          "date_required_filter_range": {
            "description": "Order's due date pre-defined range",
            "title": "Date Required Filter Range",
            "type": "string"
          },
          "date_required_relative": {
            "description": "Order's due date relative filter type",
            "title": "Date Required Relative",
            "type": "string"
          },
          "date_required_relative_days": {
            "description": "Order's due date relative range",
            "title": "Date Required Relative Days",
            "type": "string"
          },
          "date_required_start": {
            "description": "Order's due date lower range",
            "title": "Date Required Start",
            "type": "string"
          },
          "deviation_ids": {
            "description": "List of Deviation IDs",
            "items": {
              "type": "integer"
            },
            "title": "Deviation Ids",
            "type": "array"
          },
          "emailed": {
            "description": "Boolean to only included Tests that have been emailed",
            "title": "Emailed",
            "type": "boolean"
          },
          "estimated_complete_date_end": {
            "description": "Test's estimated complete date upper range",
            "title": "Estimated Complete Date End",
            "type": "string"
          },
          "estimated_complete_date_filter_range": {
            "description": "Test's estimated complete date pre-defined range",
            "title": "Estimated Complete Date Filter Range",
            "type": "string"
          },
          "estimated_complete_date_relative": {
            "description": "Test's estimated complete date relative filter type",
            "title": "Estimated Complete Date Relative",
            "type": "string"
          },
          "estimated_complete_date_relative_days": {
            "description": "Test's estimated complete date relative range",
            "title": "Estimated Complete Date Relative Days",
            "type": "string"
          },
          "estimated_complete_date_start": {
            "description": "Test's estimated complete date lower range",
            "title": "Estimated Complete Date Start",
            "type": "string"
          },
          "estimated_start_date_end": {
            "description": "Test's estimated start date upper range",
            "title": "Estimated Start Date End",
            "type": "string"
          },
          "estimated_start_date_filter_range": {
            "description": "Test's estimated start date pre-defined range",
            "title": "Estimated Start Date Filter Range",
            "type": "string"
          },
          "estimated_start_date_relative": {
            "description": "Test's estimated start date relative filter type",
            "title": "Estimated Start Date Relative",
            "type": "string"
          },
          "estimated_start_date_relative_days": {
            "description": "Test's estimated start date relative range",
            "title": "Estimated Start Date Relative Days",
            "type": "string"
          },
          "estimated_start_date_start": {
            "description": "Test's estimated start date lower range",
            "title": "Estimated Start Date Start",
            "type": "string"
          },
          "ids": {
            "description": "List of Test IDs",
            "items": {
              "type": "string"
            },
            "title": "Ids",
            "type": "array"
          },
          "include_deleted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.IncludeDeletedValues"
              }
            ],
            "description": "Boolean to include deleted Tests"
          },
          "include_orders": {
            "description": "Boolean to include normal Orders when filtering by Order Request Status",
            "title": "Include Orders",
            "type": "boolean"
          },
          "include_tests_without_priority": {
            "description": "Boolean to include Tests without priority when filtering by Priority",
            "title": "Include Tests Without Priority",
            "type": "boolean"
          },
          "include_tests_without_team": {
            "description": "Boolean to only include Tests without a Team assigned",
            "title": "Include Tests Without Team",
            "type": "boolean"
          },
          "last_updated": {
            "description": "Last updated unix timestamp",
            "title": "Last Updated",
            "type": "string"
          },
          "last_updated_end": {
            "description": "Test's last updated timestamp upper range",
            "title": "Last Updated End",
            "type": "string"
          },
          "last_updated_filter_range": {
            "description": "Test's last updated timestamp pre-defined range",
            "title": "Last Updated Filter Range",
            "type": "string"
          },
          "last_updated_relative": {
            "description": "Test's last updated timestamp relative filter type",
            "title": "Last Updated Relative",
            "type": "string"
          },
          "last_updated_relative_days": {
            "description": "Test's last updated timestamp relative range",
            "title": "Last Updated Relative Days",
            "type": "string"
          },
          "last_updated_start": {
            "description": "Test's last updated timestamp lower range",
            "title": "Last Updated Start",
            "type": "string"
          },
          "location_ids": {
            "description": "List of Location IDs",
            "items": {
              "type": "integer"
            },
            "title": "Location Ids",
            "type": "array"
          },
          "no_associated_batch_sample": {
            "description": "Return Tests where its Sample does not have a Batch associated",
            "title": "No Associated Batch Sample",
            "type": "boolean"
          },
          "no_associated_batch_test": {
            "description": "Return Tests that do not have a Batch associated",
            "title": "No Associated Batch Test",
            "type": "boolean"
          },
          "order_additional_fields_encoded": {
            "description": "Base64 Encoded Order Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "ORDER"
            },
            "title": "Order Additional Fields Encoded",
            "type": "string"
          },
          "order_cc_ids": {
            "description": "List of Confident Cannabis IDs for Orders",
            "items": {
              "type": "string"
            },
            "title": "Order Cc Ids",
            "type": "array"
          },
          "order_date_completed_end": {
            "description": "Order's date completed upper range",
            "title": "Order Date Completed End",
            "type": "string"
          },
          "order_date_completed_filter_range": {
            "description": "Order's date completed pre-defined range",
            "title": "Order Date Completed Filter Range",
            "type": "string"
          },
          "order_date_completed_relative": {
            "description": "Order's date completed relative filter type",
            "title": "Order Date Completed Relative",
            "type": "string"
          },
          "order_date_completed_relative_days": {
            "description": "Order's date completed relative range",
            "title": "Order Date Completed Relative Days",
            "type": "string"
          },
          "order_date_completed_start": {
            "description": "Order's date completed lower range",
            "title": "Order Date Completed Start",
            "type": "string"
          },
          "order_date_requested_end": {
            "description": "Order's date requested upper range",
            "title": "Order Date Requested End",
            "type": "string"
          },
          "order_date_requested_filter_range": {
            "description": "Order's date requested pre-defined range",
            "title": "Order Date Requested Filter Range",
            "type": "string"
          },
          "order_date_requested_relative": {
            "description": "Order's date requested relative filter type",
            "title": "Order Date Requested Relative",
            "type": "string"
          },
          "order_date_requested_relative_days": {
            "description": "Order's date requested relative range",
            "title": "Order Date Requested Relative Days",
            "type": "string"
          },
          "order_date_requested_start": {
            "description": "Order's date requested lower range",
            "title": "Order Date Requested Start",
            "type": "string"
          },
          "order_ids": {
            "description": "List of Order IDs",
            "items": {
              "type": "integer"
            },
            "title": "Order Ids",
            "type": "array"
          },
          "order_overdue": {
            "description": "Boolean to only include Orders that are overdue",
            "title": "Order Overdue",
            "type": "boolean"
          },
          "order_project_ids": {
            "description": "Project ID list for Orders",
            "items": {
              "type": "integer"
            },
            "title": "Order Project Ids",
            "type": "array"
          },
          "order_release_report": {
            "description": "Boolean to only include Orders that have their report published",
            "title": "Order Release Report",
            "type": "boolean"
          },
          "order_report_emailed": {
            "description": "Boolean to only include Orders that have their Report emailed",
            "title": "Order Report Emailed",
            "type": "boolean"
          },
          "order_report_generated": {
            "description": "Boolean to only include Orders that have a Report generated",
            "title": "Order Report Generated",
            "type": "boolean"
          },
          "order_request_statuses": {
            "description": "List of Order Request statuses",
            "items": {
              "type": "string"
            },
            "title": "Order Request Statuses",
            "type": "array"
          },
          "order_statuses": {
            "description": "List of Order statuses",
            "items": {
              "type": "string"
            },
            "title": "Order Statuses",
            "type": "array"
          },
          "order_tags": {
            "description": "List of tags for an Order",
            "items": {
              "type": "integer"
            },
            "title": "Order Tags",
            "type": "array"
          },
          "order_tags_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
              }
            ],
            "description": "Order tags filter action type"
          },
          "overdue": {
            "description": "Boolean to filter by Tests overdue",
            "title": "Overdue",
            "type": "boolean"
          },
          "page_num": {
            "default": 1,
            "title": "Page Num",
            "type": "integer"
          },
          "page_size": {
            "default": 20,
            "title": "Page Size",
            "type": "integer"
          },
          "panel_assay_and_query": {
            "description": "Boolean whether or not to do an AND or an OR query when both Assay IDs and Panel IDs are filtered",
            "title": "Panel Assay And Query",
            "type": "string"
          },
          "panel_ids": {
            "description": "List of Panel IDs",
            "items": {
              "type": "integer"
            },
            "title": "Panel Ids",
            "type": "array"
          },
          "parent_sample_only": {
            "description": "Boolean to only include Parent Samples",
            "title": "Parent Sample Only",
            "type": "boolean"
          },
          "priority_current": {
            "description": "Boolean to only include Tests that are the current priority",
            "title": "Priority Current",
            "type": "boolean"
          },
          "results": {
            "description": "Test results",
            "title": "Results",
            "type": "string"
          },
          "results_action_option": {
            "description": "Test results filter action type",
            "title": "Results Action Option",
            "type": "string"
          },
          "results_range_lower": {
            "description": "Test results filter lower range number",
            "title": "Results Range Lower",
            "type": "string"
          },
          "results_range_upper": {
            "description": "Test results filter upper range number",
            "title": "Results Range Upper",
            "type": "string"
          },
          "results_tags": {
            "description": "Result tags",
            "title": "Results Tags",
            "type": "string"
          },
          "sample_accessioning_type_ids": {
            "description": "List of Accessioning Types for Samples",
            "items": {
              "type": "integer"
            },
            "title": "Sample Accessioning Type Ids",
            "type": "array"
          },
          "sample_additional_fields_encoded": {
            "description": "Base64 Encoded Sample Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "SAMPLE"
            },
            "title": "Sample Additional Fields Encoded",
            "type": "string"
          },
          "sample_batch_ids": {
            "description": "List of Batch IDs for a Sample",
            "items": {
              "type": "integer"
            },
            "title": "Sample Batch Ids",
            "type": "array"
          },
          "sample_cc_ids": {
            "description": "List of Confident Cannabis IDs for Samples",
            "items": {
              "type": "string"
            },
            "title": "Sample Cc Ids",
            "type": "array"
          },
          "sample_complete": {
            "description": "Boolean to only include completed Samples",
            "title": "Sample Complete",
            "type": "boolean"
          },
          "sample_date_received_end": {
            "description": "Sample's date received upper range",
            "title": "Sample Date Received End",
            "type": "string"
          },
          "sample_date_received_filter_range": {
            "description": "Sample's date received pre-defined range",
            "title": "Sample Date Received Filter Range",
            "type": "string"
          },
          "sample_date_received_relative": {
            "description": "Sample's date received relative filter type",
            "title": "Sample Date Received Relative",
            "type": "string"
          },
          "sample_date_received_relative_days": {
            "description": "Sample's date received relative range",
            "title": "Sample Date Received Relative Days",
            "type": "string"
          },
          "sample_date_received_start": {
            "description": "Sample's date received lower range",
            "title": "Sample Date Received Start",
            "type": "string"
          },
          "sample_description": {
            "description": "Description of a Sample",
            "title": "Sample Description",
            "type": "string"
          },
          "sample_id_range_end": {
            "description": "Sample ID filter upper range",
            "title": "Sample Id Range End",
            "type": "string"
          },
          "sample_id_range_start": {
            "description": "Sample ID filter lower range",
            "title": "Sample Id Range Start",
            "type": "string"
          },
          "sample_ids": {
            "description": "List of Sample IDs",
            "items": {
              "type": "integer"
            },
            "title": "Sample Ids",
            "type": "array"
          },
          "sample_last_updated_end": {
            "description": "Sample's last updated timestamp upper range",
            "title": "Sample Last Updated End",
            "type": "string"
          },
          "sample_last_updated_filter_range": {
            "description": "Sample's last updated timestamp pre-defined range's last updated timestamp pre-defined range",
            "title": "Sample Last Updated Filter Range",
            "type": "string"
          },
          "sample_last_updated_relative": {
            "description": "Sample's last updated timestamp relative filter type",
            "title": "Sample Last Updated Relative",
            "type": "string"
          },
          "sample_last_updated_relative_days": {
            "description": "Sample's last updated timestamp relative range",
            "title": "Sample Last Updated Relative Days",
            "type": "string"
          },
          "sample_last_updated_start": {
            "description": "Sample's last updated timestamp lower range",
            "title": "Sample Last Updated Start",
            "type": "string"
          },
          "sample_project_ids": {
            "description": "Project ID list for Samples",
            "items": {
              "type": "integer"
            },
            "title": "Sample Project Ids",
            "type": "array"
          },
          "sample_release_report": {
            "description": "Boolean to only include Samples that have their Report published",
            "title": "Sample Release Report",
            "type": "boolean"
          },
          "sample_report_emailed": {
            "description": "Boolean to only include Samples that have their Report emailed",
            "title": "Sample Report Emailed",
            "type": "boolean"
          },
          "sample_report_generated": {
            "description": "Boolean to only include Samples that have a Report generated",
            "title": "Sample Report Generated",
            "type": "boolean"
          },
          "sample_tags": {
            "description": "List of tags for a Sample",
            "items": {
              "type": "string"
            },
            "title": "Sample Tags",
            "type": "array"
          },
          "sample_tags_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
              }
            ],
            "description": "Sample tags filter action type"
          },
          "sample_time_of_collection_end": {
            "description": "Sample's time of collection upper range",
            "title": "Sample Time Of Collection End",
            "type": "string"
          },
          "sample_time_of_collection_filter_range": {
            "description": "Sample's time of collection pre-defined range",
            "title": "Sample Time Of Collection Filter Range",
            "type": "string"
          },
          "sample_time_of_collection_relative": {
            "description": "Sample's time of collection relative filter type",
            "title": "Sample Time Of Collection Relative",
            "type": "string"
          },
          "sample_time_of_collection_relative_days": {
            "description": "Sample's time of collection relative range",
            "title": "Sample Time Of Collection Relative Days",
            "type": "string"
          },
          "sample_time_of_collection_start": {
            "description": "Sample's time of collection lower range",
            "title": "Sample Time Of Collection Start",
            "type": "string"
          },
          "samples_batched": {
            "description": "Boolean to only include Samples that have a Batch associated",
            "title": "Samples Batched",
            "type": "boolean"
          },
          "samples_received": {
            "description": "Boolean to only include Samples that have been received",
            "title": "Samples Received",
            "type": "boolean"
          },
          "sort_by": {
            "description": "Sort by a field",
            "title": "Sort By",
            "type": "string"
          },
          "sort_order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.SortOrderValues"
              }
            ],
            "description": "Sort by ascending or descending"
          },
          "source_ids": {
            "description": "List of Source IDs",
            "items": {
              "type": "integer"
            },
            "title": "Source Ids",
            "type": "array"
          },
          "start_date_end": {
            "description": "Test's start date upper range",
            "title": "Start Date End",
            "type": "string"
          },
          "start_date_filter_range": {
            "description": "Test's start date pre-defined range",
            "title": "Start Date Filter Range",
            "type": "string"
          },
          "start_date_relative": {
            "description": "Test's start date relative filter type",
            "title": "Start Date Relative",
            "type": "string"
          },
          "start_date_relative_days": {
            "description": "Test's start date relative range",
            "title": "Start Date Relative Days",
            "type": "string"
          },
          "start_date_start": {
            "description": "Test's start date lower range",
            "title": "Start Date Start",
            "type": "string"
          },
          "statuses": {
            "description": "List of Test statuses",
            "items": {
              "type": "string"
            },
            "title": "Statuses",
            "type": "array"
          },
          "sub_sample_only": {
            "description": "Boolean to only include Sub-Smaples",
            "title": "Sub Sample Only",
            "type": "boolean"
          },
          "tags_filter_action": {
            "description": "Tags filter action type",
            "title": "Tags Filter Action",
            "type": "string"
          },
          "team_ids": {
            "description": "List of Team IDs",
            "items": {
              "type": "integer"
            },
            "title": "Team Ids",
            "type": "array"
          },
          "tech_ids": {
            "description": "User IDs",
            "items": {
              "type": "integer"
            },
            "title": "Tech Ids",
            "type": "array"
          },
          "test_additional_fields_encoded": {
            "description": "Base64 Encoded Test Additional Field Filters",
            "json_schema_extra": {
              "entity_type": "TEST"
            },
            "title": "Test Additional Fields Encoded",
            "type": "string"
          },
          "test_release_report": {
            "description": "Boolean to only include Tests that have their Report published",
            "title": "Test Release Report",
            "type": "boolean"
          },
          "test_release_results": {
            "description": "Boolean to only include Tests that have their results released",
            "title": "Test Release Results",
            "type": "boolean"
          },
          "test_report_emailed": {
            "description": "Boolean to only include Tests that have their Report emailed",
            "title": "Test Report Emailed",
            "type": "boolean"
          },
          "test_report_generated": {
            "description": "Boolean to only include Tests that have a Report generated",
            "title": "Test Report Generated",
            "type": "boolean"
          },
          "test_tags": {
            "description": "List of tags for a Test",
            "items": {
              "type": "string"
            },
            "title": "Test Tags",
            "type": "array"
          },
          "test_tags_action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
              }
            ],
            "description": "Test tags filter action type"
          },
          "turnaround_ids": {
            "description": "List of Turnaround IDs",
            "items": {
              "type": "integer"
            },
            "title": "Turnaround Ids",
            "type": "array"
          },
          "unlocked": {
            "description": "Boolean to only include Tests that are unlocked",
            "title": "Unlocked",
            "type": "boolean"
          }
        },
        "title": "TestFilterSchema",
        "type": "object"
      },
      "TestFilterSchema.7a3ad72.IncludeDeletedValues": {
        "description": "An enumeration.",
        "enum": [
          "TRUE",
          "DELETED_ONLY"
        ],
        "title": "IncludeDeletedValues"
      },
      "TestFilterSchema.7a3ad72.SortOrderValues": {
        "description": "An enumeration.",
        "enum": [
          "ASC",
          "DESC"
        ],
        "title": "SortOrderValues"
      },
      "TestFilterSchema.7a3ad72.TagActionValues": {
        "description": "An enumeration.",
        "enum": [
          "Or",
          "And",
          "Not"
        ],
        "title": "TagActionValues"
      },
      "UpdateAssaySchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdateAssaySchemaList.a9993e3.UpdateAssaySchema"
        },
        "title": "UpdateAssaySchemaList",
        "type": "array"
      },
      "UpdateAssaySchemaList.a9993e3.UpdateAssaySchema": {
        "example": {
          "id": 123,
          "title": "Quality"
        },
        "properties": {
          "accessioning_types": {
            "items": {
              "type": "object"
            },
            "title": "Accessioning Types",
            "type": "array"
          },
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "batch_inventory_template_id": {
            "title": "Batch Inventory Template Id",
            "type": "integer"
          },
          "batch_protocol_id": {
            "title": "Batch Protocol Id",
            "type": "integer"
          },
          "batch_worksheet_ent": {
            "title": "Batch Worksheet Ent",
            "type": "object"
          },
          "batch_worksheet_id": {
            "title": "Batch Worksheet Id",
            "type": "integer"
          },
          "category": {
            "title": "Category",
            "type": "object"
          },
          "category_id": {
            "title": "Category Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "default_technician": {
            "title": "Default Technician",
            "type": "object"
          },
          "default_technician_id": {
            "title": "Default Technician Id",
            "type": "integer"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "document_id": {
            "title": "Document Id",
            "type": "integer"
          },
          "duration": {
            "title": "Duration",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "inventory_template_id": {
            "title": "Inventory Template Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "method": {
            "title": "Method",
            "type": "string"
          },
          "method_detection_limit": {
            "title": "Method Detection Limit",
            "type": "number"
          },
          "order_report_config_id": {
            "title": "Order Report Config Id",
            "type": "integer"
          },
          "panels": {
            "items": {
              "type": "object"
            },
            "title": "Panels",
            "type": "array"
          },
          "per_sample_fee_name": {
            "title": "Per Sample Fee Name",
            "type": "string"
          },
          "per_sample_fee_price": {
            "title": "Per Sample Fee Price",
            "type": "number"
          },
          "percent_recovery_lower_limit": {
            "title": "Percent Recovery Lower Limit",
            "type": "number"
          },
          "percent_recovery_upper_limit": {
            "title": "Percent Recovery Upper Limit",
            "type": "number"
          },
          "protocol_id": {
            "title": "Protocol Id",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "relative_percent_difference_limit": {
            "title": "Relative Percent Difference Limit",
            "type": "number"
          },
          "reporting_limit": {
            "title": "Reporting Limit",
            "type": "number"
          },
          "sample_level_worksheet": {
            "title": "Sample Level Worksheet",
            "type": "boolean"
          },
          "sample_report_config_id": {
            "title": "Sample Report Config Id",
            "type": "integer"
          },
          "show_in_portal": {
            "title": "Show In Portal",
            "type": "boolean"
          },
          "sort_order": {
            "title": "Sort Order",
            "type": "integer"
          },
          "spike_level": {
            "title": "Spike Level",
            "type": "number"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "team": {
            "title": "Team",
            "type": "object"
          },
          "team_id": {
            "title": "Team Id",
            "type": "integer"
          },
          "test_report_config_id": {
            "title": "Test Report Config Id",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "turnarounds": {
            "items": {
              "type": "object"
            },
            "title": "Turnarounds",
            "type": "array"
          },
          "units": {
            "title": "Units",
            "type": "string"
          },
          "worksheet_ent": {
            "title": "Worksheet Ent",
            "type": "object"
          },
          "worksheet_id": {
            "title": "Worksheet Id",
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "title": "UpdateAssaySchema",
        "type": "object"
      },
      "UpdateAttachmentSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdateAttachmentSchemaList.a9993e3.UpdateAttachmentSchema"
        },
        "title": "UpdateAttachmentSchemaList",
        "type": "array"
      },
      "UpdateAttachmentSchemaList.a9993e3.UpdateAttachmentSchema": {
        "example": {
          "attach_to_report": true,
          "attach_to_report_email": false,
          "attachment_type": "ORDER",
          "id": 123,
          "is_public": true,
          "notes": "Attachment Notes",
          "published_to_portal": true
        },
        "properties": {
          "attach_to_report": {
            "title": "Attach To Report",
            "type": "boolean"
          },
          "attach_to_report_email": {
            "title": "Attach To Report Email",
            "type": "boolean"
          },
          "attachment_type": {
            "example": "ORDER",
            "title": "Attachment Type",
            "type": "string"
          },
          "id": {
            "example": 123,
            "title": "Id",
            "type": "integer"
          },
          "ignore_sns": {
            "title": "Ignore Sns",
            "type": "boolean"
          },
          "is_public": {
            "title": "Is Public",
            "type": "boolean"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "published_to_portal": {
            "title": "Published To Portal",
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "attachment_type"
        ],
        "title": "UpdateAttachmentSchema",
        "type": "object"
      },
      "UpdateContactSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdateContactSchemaList.a9993e3.UpdateContactSchema"
        },
        "title": "UpdateContactSchemaList",
        "type": "array"
      },
      "UpdateContactSchemaList.a9993e3.UpdateContactSchema": {
        "example": {
          "id": 123,
          "last_name": "Kruger"
        },
        "properties": {
          "address": {
            "maxLength": 1000,
            "title": "Address",
            "type": "string"
          },
          "customers": {
            "items": {
              "type": "object"
            },
            "title": "Customers",
            "type": "array"
          },
          "email_address": {
            "maxLength": 500,
            "title": "Email Address",
            "type": "string"
          },
          "fax": {
            "maxLength": 50,
            "title": "Fax",
            "type": "string"
          },
          "first_name": {
            "maxLength": 100,
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "is_doctor": {
            "title": "Is Doctor",
            "type": "boolean"
          },
          "last_name": {
            "maxLength": 100,
            "title": "Last Name",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "mobile": {
            "maxLength": 50,
            "title": "Mobile",
            "type": "string"
          },
          "phone": {
            "maxLength": 50,
            "title": "Phone",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          }
        },
        "required": [
          "id"
        ],
        "title": "UpdateContactSchema",
        "type": "object"
      },
      "UpdateCustomerSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdateCustomerSchemaList.a9993e3.UpdateCustomerSchema"
        },
        "title": "UpdateCustomerSchemaList",
        "type": "array"
      },
      "UpdateCustomerSchemaList.a9993e3.UpdateCustomerSchema": {
        "example": {
          "customer_name": "Garrison Regiment",
          "id": 123
        },
        "properties": {
          "address": {
            "maxLength": 1000,
            "title": "Address",
            "type": "string"
          },
          "city_name": {
            "maxLength": 100,
            "title": "City Name",
            "type": "string"
          },
          "comments": {
            "maxLength": 2000,
            "title": "Comments",
            "type": "string"
          },
          "company_discount": {
            "title": "Company Discount",
            "type": "number"
          },
          "confident_cannabis_customer_id": {
            "title": "Confident Cannabis Customer Id",
            "type": "string"
          },
          "contacts": {
            "items": {
              "type": "object"
            },
            "title": "Contacts",
            "type": "array"
          },
          "country_name": {
            "maxLength": 45,
            "title": "Country Name",
            "type": "string"
          },
          "customer_name": {
            "maxLength": 250,
            "title": "Customer Name",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "fax": {
            "title": "Fax",
            "type": "string"
          },
          "group_name": {
            "title": "Group Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "id_abbreviation": {
            "maxLength": 50,
            "title": "Id Abbreviation",
            "type": "string"
          },
          "invoicing_notes": {
            "maxLength": 5000,
            "title": "Invoicing Notes",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "mfa_enforced": {
            "title": "Mfa Enforced",
            "type": "boolean"
          },
          "parent_customer_id": {
            "title": "Parent Customer Id",
            "type": "integer"
          },
          "payment_term": {
            "maxLength": 45,
            "title": "Payment Term",
            "type": "string"
          },
          "payment_term_days": {
            "title": "Payment Term Days",
            "type": "integer"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          },
          "po_number": {
            "maxLength": 1000,
            "title": "Po Number",
            "type": "string"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "qbd_skip_address_sync": {
            "title": "Qbd Skip Address Sync",
            "type": "boolean"
          },
          "sources": {
            "items": {
              "type": "object"
            },
            "title": "Sources",
            "type": "array"
          },
          "special_instructions": {
            "maxLength": 5000,
            "title": "Special Instructions",
            "type": "string"
          },
          "state_name": {
            "maxLength": 45,
            "title": "State Name",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "zip_postal_code": {
            "maxLength": 45,
            "title": "Zip Postal Code",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "UpdateCustomerSchema",
        "type": "object"
      },
      "UpdateInvoiceItemSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdateInvoiceItemSchemaList.a9993e3.UpdateInvoiceItemSchema"
        },
        "title": "UpdateInvoiceItemSchemaList",
        "type": "array"
      },
      "UpdateInvoiceItemSchemaList.a9993e3.UpdateInvoiceItemSchema": {
        "example": {
          "id": 123,
          "quantity": 5
        },
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "number"
          },
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoice": {
            "title": "Invoice",
            "type": "object"
          },
          "invoice_id": {
            "title": "Invoice Id",
            "type": "integer"
          },
          "invoice_item_type": {
            "title": "Invoice Item Type",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "panel": {
            "title": "Panel",
            "type": "object"
          },
          "panel_id": {
            "title": "Panel Id",
            "type": "integer"
          },
          "quantity": {
            "title": "Quantity",
            "type": "integer"
          },
          "quantity_discount": {
            "title": "Quantity Discount",
            "type": "object"
          },
          "quantity_discount_id": {
            "title": "Quantity Discount Id",
            "type": "integer"
          },
          "sort_order": {
            "title": "Sort Order",
            "type": "integer"
          },
          "surcharge": {
            "title": "Surcharge",
            "type": "number"
          },
          "surcharge_invoice_item_uuid": {
            "title": "Surcharge Invoice Item Uuid",
            "type": "string"
          },
          "tax_rate": {
            "title": "Tax Rate",
            "type": "object"
          },
          "tax_rate_id": {
            "title": "Tax Rate Id",
            "type": "integer"
          },
          "tax_rate_name": {
            "title": "Tax Rate Name",
            "type": "string"
          },
          "tax_rate_percentage": {
            "title": "Tax Rate Percentage",
            "type": "number"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          },
          "uuid": {
            "title": "Uuid",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "UpdateInvoiceItemSchema",
        "type": "object"
      },
      "UpdateInvoiceSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdateInvoiceSchemaList.a9993e3.UpdateInvoiceSchema"
        },
        "title": "UpdateInvoiceSchemaList",
        "type": "array"
      },
      "UpdateInvoiceSchemaList.a9993e3.UpdateInvoiceSchema": {
        "example": {
          "id": 123,
          "template_id": 5
        },
        "properties": {
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_paid": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Paid"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "discount": {
            "title": "Discount",
            "type": "number"
          },
          "discount_individual_items": {
            "title": "Discount Individual Items",
            "type": "boolean"
          },
          "do_not_show_sync_warning": {
            "title": "Do Not Show Sync Warning",
            "type": "boolean"
          },
          "due_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Due Date"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "force_full_panel_prices": {
            "title": "Force Full Panel Prices",
            "type": "boolean"
          },
          "group_by_panel": {
            "title": "Group By Panel",
            "type": "boolean"
          },
          "group_by_panel_turnaround_not_applied": {
            "title": "Group By Panel Turnaround Not Applied",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoice_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Invoice Date"
          },
          "invoice_items": {
            "items": {
              "type": "object"
            },
            "title": "Invoice Items",
            "type": "array"
          },
          "invoice_payments": {
            "items": {
              "type": "object"
            },
            "title": "Invoice Payments",
            "type": "array"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "notes": {
            "title": "Notes",
            "type": "string"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "order_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Order Ids",
            "type": "array"
          },
          "orders": {
            "items": {
              "type": "object"
            },
            "title": "Orders",
            "type": "array"
          },
          "out_of_sync": {
            "title": "Out Of Sync",
            "type": "boolean"
          },
          "outstanding_amount": {
            "title": "Outstanding Amount",
            "type": "number"
          },
          "paid": {
            "title": "Paid",
            "type": "boolean"
          },
          "payment_term": {
            "title": "Payment Term",
            "type": "string"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "quotation_custom_prices_not_applied": {
            "title": "Quotation Custom Prices Not Applied",
            "type": "boolean"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "sub_total": {
            "title": "Sub Total",
            "type": "number"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "type": "number"
          },
          "total_after_tax": {
            "title": "Total After Tax",
            "type": "number"
          }
        },
        "required": [
          "id"
        ],
        "title": "UpdateInvoiceSchema",
        "type": "object"
      },
      "UpdateOrderSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdateOrderSchemaList.a9993e3.UpdateOrderSchema"
        },
        "title": "UpdateOrderSchemaList",
        "type": "array"
      },
      "UpdateOrderSchemaList.a9993e3.UpdateOrderSchema": {
        "example": {
          "id": 123,
          "state": "COMPLETED"
        },
        "properties": {
          "approved_by": {
            "title": "Approved By",
            "type": "object"
          },
          "approved_by_id": {
            "title": "Approved By Id",
            "type": "integer"
          },
          "cc_id": {
            "title": "Cc Id",
            "type": "string"
          },
          "cc_latest_sync": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Cc Latest Sync"
          },
          "cc_order": {
            "title": "Cc Order",
            "type": "boolean"
          },
          "cc_order_status": {
            "title": "Cc Order Status",
            "type": "integer"
          },
          "cc_sync_error": {
            "title": "Cc Sync Error",
            "type": "string"
          },
          "cc_sync_status": {
            "title": "Cc Sync Status",
            "type": "string"
          },
          "created_from_quotation": {
            "title": "Created From Quotation",
            "type": "object"
          },
          "created_from_quotation_id": {
            "title": "Created From Quotation Id",
            "type": "integer"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "customer_account": {
            "title": "Customer Account",
            "type": "object"
          },
          "customer_account_id": {
            "title": "Customer Account Id",
            "type": "integer"
          },
          "date_approved": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Approved"
          },
          "date_completed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Completed"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_emailed": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Emailed"
          },
          "date_received": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Received"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "date_requested": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Requested"
          },
          "date_required": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Required"
          },
          "division": {
            "title": "Division",
            "type": "object"
          },
          "division_id": {
            "title": "Division Id",
            "type": "integer"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "emailed_by": {
            "title": "Emailed By",
            "type": "object"
          },
          "emailed_by_id": {
            "title": "Emailed By Id",
            "type": "integer"
          },
          "entered_by": {
            "title": "Entered By",
            "type": "object"
          },
          "entered_by_api_client": {
            "title": "Entered By Api Client",
            "type": "object"
          },
          "entered_by_api_client_id": {
            "title": "Entered By Api Client Id",
            "type": "string"
          },
          "entered_by_id": {
            "title": "Entered By Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "invoicing_notes": {
            "title": "Invoicing Notes",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "order_request": {
            "title": "Order Request",
            "type": "boolean"
          },
          "order_request_notes": {
            "title": "Order Request Notes",
            "type": "string"
          },
          "order_request_status": {
            "title": "Order Request Status",
            "type": "string"
          },
          "portal_read": {
            "title": "Portal Read",
            "type": "boolean"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "published_to_portal": {
            "title": "Published To Portal",
            "type": "boolean"
          },
          "received_by": {
            "title": "Received By",
            "type": "object"
          },
          "received_by_id": {
            "title": "Received By Id",
            "type": "integer"
          },
          "release_report": {
            "title": "Release Report",
            "type": "boolean"
          },
          "requested_by": {
            "title": "Requested By",
            "type": "object"
          },
          "requested_by_id": {
            "title": "Requested By Id",
            "type": "integer"
          },
          "requested_for": {
            "title": "Requested For",
            "type": "object"
          },
          "requested_for_id": {
            "title": "Requested For Id",
            "type": "integer"
          },
          "revision_notes": {
            "title": "Revision Notes",
            "type": "string"
          },
          "special_instructions": {
            "title": "Special Instructions",
            "type": "string"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "submitted_by": {
            "title": "Submitted By",
            "type": "string"
          },
          "total_samples_created": {
            "default": 0,
            "title": "Total Samples Created",
            "type": "integer"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "title": "UpdateOrderSchema",
        "type": "object"
      },
      "UpdatePanelSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdatePanelSchemaList.a9993e3.UpdatePanelSchema"
        },
        "title": "UpdatePanelSchemaList",
        "type": "array"
      },
      "UpdatePanelSchemaList.a9993e3.UpdatePanelSchema": {
        "example": {
          "id": 123,
          "title": "Downstream Flow"
        },
        "properties": {
          "assays": {
            "items": {
              "type": "object"
            },
            "title": "Assays",
            "type": "array"
          },
          "base_price": {
            "title": "Base Price",
            "type": "number"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "show_in_portal": {
            "title": "Show In Portal",
            "type": "boolean"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "UpdatePanelSchema",
        "type": "object"
      },
      "UpdatePaymentSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdatePaymentSchemaList.a9993e3.UpdatePaymentSchema"
        },
        "title": "UpdatePaymentSchemaList",
        "type": "array"
      },
      "UpdatePaymentSchemaList.a9993e3.UpdatePaymentSchema": {
        "example": {
          "amount": 500,
          "id": 123
        },
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "number"
          },
          "check_number": {
            "title": "Check Number",
            "type": "string"
          },
          "created_by_api_client": {
            "title": "Created By Api Client",
            "type": "object"
          },
          "created_by_api_client_id": {
            "title": "Created By Api Client Id",
            "type": "string"
          },
          "created_by_user": {
            "title": "Created By User",
            "type": "object"
          },
          "created_by_user_id": {
            "title": "Created By User Id",
            "type": "integer"
          },
          "customer": {
            "title": "Customer",
            "type": "object"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "integer"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "external_id": {
            "title": "External Id",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "payment_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Payment Date"
          },
          "payment_type": {
            "title": "Payment Type",
            "type": "string"
          },
          "payment_type_id": {
            "title": "Payment Type Id",
            "type": "integer"
          },
          "qbd_edit_sequence": {
            "title": "Qbd Edit Sequence",
            "type": "string"
          },
          "qbd_id": {
            "title": "Qbd Id",
            "type": "string"
          },
          "qbd_last_synced": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Qbd Last Synced"
          },
          "qbd_response_log": {
            "title": "Qbd Response Log",
            "type": "string"
          },
          "template_id": {
            "title": "Template Id",
            "type": "integer"
          },
          "unapplied_amount": {
            "title": "Unapplied Amount",
            "type": "number"
          }
        },
        "required": [
          "id"
        ],
        "title": "UpdatePaymentSchema",
        "type": "object"
      },
      "UpdateSampleSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdateSampleSchemaList.a9993e3.UpdateSampleSchema"
        },
        "title": "UpdateSampleSchemaList",
        "type": "array"
      },
      "UpdateSampleSchemaList.a9993e3.UpdateSampleSchema": {
        "example": {
          "description": "Blue and small",
          "id": 123
        },
        "properties": {
          "accessioning_type": {
            "title": "Accessioning Type",
            "type": "object"
          },
          "accessioning_type_id": {
            "title": "Accessioning Type Id",
            "type": "integer"
          },
          "batches": {
            "items": {
              "type": "object"
            },
            "title": "Batches",
            "type": "array"
          },
          "cc_id": {
            "title": "Cc Id",
            "type": "string"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "complete": {
            "title": "Complete",
            "type": "boolean"
          },
          "custom_formatted_id": {
            "title": "Custom Formatted Id",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_received": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Received"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "email_to": {
            "title": "Email To",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "inventory_stock": {
            "title": "Inventory Stock",
            "type": "object"
          },
          "inventory_stock_id": {
            "title": "Inventory Stock Id",
            "type": "integer"
          },
          "inventory_stock_quantity_used": {
            "title": "Inventory Stock Quantity Used",
            "type": "number"
          },
          "lab_id": {
            "title": "Lab Id",
            "type": "string"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "linked": {
            "title": "Linked",
            "type": "boolean"
          },
          "location": {
            "title": "Location",
            "type": "object"
          },
          "location_id": {
            "title": "Location Id",
            "type": "integer"
          },
          "metrc_uid": {
            "title": "Metrc Uid",
            "type": "string"
          },
          "most_recent_report": {
            "title": "Most Recent Report",
            "type": "object"
          },
          "most_recent_report_id": {
            "title": "Most Recent Report Id",
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "type": "object"
          },
          "order_id": {
            "title": "Order Id",
            "type": "integer"
          },
          "order_request": {
            "title": "Order Request",
            "type": "boolean"
          },
          "parent_sample": {
            "title": "Parent Sample",
            "type": "object"
          },
          "parent_sample_id": {
            "title": "Parent Sample Id",
            "type": "integer"
          },
          "point_of_collection": {
            "title": "Point Of Collection",
            "type": "string"
          },
          "project": {
            "title": "Project",
            "type": "object"
          },
          "project_id": {
            "title": "Project Id",
            "type": "integer"
          },
          "received": {
            "title": "Received",
            "type": "boolean"
          },
          "reports": {
            "items": {
              "type": "object"
            },
            "title": "Reports",
            "type": "array"
          },
          "sample_type": {
            "title": "Sample Type",
            "type": "string"
          },
          "source": {
            "title": "Source",
            "type": "object"
          },
          "source_id": {
            "title": "Source Id",
            "type": "integer"
          },
          "sub_samples": {
            "items": {
              "type": "object"
            },
            "title": "Sub Samples",
            "type": "array"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "tests": {
            "items": {
              "type": "object"
            },
            "title": "Tests",
            "type": "array"
          },
          "time_of_collection": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Time Of Collection"
          }
        },
        "required": [
          "id"
        ],
        "title": "UpdateSampleSchema",
        "type": "object"
      },
      "UpdateTestSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdateTestSchemaList.a9993e3.UpdateTestSchema"
        },
        "title": "UpdateTestSchemaList",
        "type": "array"
      },
      "UpdateTestSchemaList.a9993e3.UpdateTestSchema": {
        "example": {
          "id": 123,
          "results": "Positive"
        },
        "properties": {
          "assay": {
            "title": "Assay",
            "type": "object"
          },
          "assay_id": {
            "title": "Assay Id",
            "type": "integer"
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "complete_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Complete Date"
          },
          "customer_update": {
            "title": "Customer Update",
            "type": "string"
          },
          "date_created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Created"
          },
          "date_report_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Report Released"
          },
          "date_results_released": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Date Results Released"
          },
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "estimated_complete_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Complete Date"
          },
          "estimated_start_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Estimated Start Date"
          },
          "free_response": {
            "title": "Free Response",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Last Updated"
          },
          "last_updated_unix_timestamp": {
            "title": "Last Updated Unix Timestamp",
            "type": "number"
          },
          "most_recent_report": {
            "title": "Most Recent Report",
            "type": "object"
          },
          "most_recent_report_id": {
            "title": "Most Recent Report Id",
            "type": "integer"
          },
          "panel": {
            "title": "Panel",
            "type": "object"
          },
          "panel_group_uuid": {
            "title": "Panel Group Uuid",
            "type": "string"
          },
          "panel_id": {
            "title": "Panel Id",
            "type": "integer"
          },
          "priority": {
            "title": "Priority",
            "type": "integer"
          },
          "priority_current": {
            "title": "Priority Current",
            "type": "boolean"
          },
          "priority_done": {
            "title": "Priority Done",
            "type": "boolean"
          },
          "priority_group_uuid": {
            "title": "Priority Group Uuid",
            "type": "string"
          },
          "publish_worksheet_to_portal": {
            "default": false,
            "title": "Publish Worksheet To Portal",
            "type": "boolean"
          },
          "release_report": {
            "title": "Release Report",
            "type": "boolean"
          },
          "release_results": {
            "title": "Release Results",
            "type": "boolean"
          },
          "reported_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Reported Date"
          },
          "results": {
            "title": "Results",
            "type": "string"
          },
          "sample": {
            "title": "Sample",
            "type": "object"
          },
          "sample_id": {
            "title": "Sample Id",
            "type": "integer"
          },
          "specification_overall": {
            "title": "Specification Overall",
            "type": "string"
          },
          "start_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "title": "Start Date"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "tech": {
            "title": "Tech",
            "type": "object"
          },
          "tech_id": {
            "title": "Tech Id",
            "type": "integer"
          },
          "turnaround": {
            "title": "Turnaround",
            "type": "object"
          },
          "turnaround_id": {
            "title": "Turnaround Id",
            "type": "integer"
          },
          "worksheet_data": {
            "title": "Worksheet Data",
            "type": "object"
          }
        },
        "required": [
          "id"
        ],
        "title": "UpdateTestSchema",
        "type": "object"
      },
      "UpdateTurnaroundSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/UpdateTurnaroundSchemaList.a9993e3.UpdateTurnaroundSchema"
        },
        "title": "UpdateTurnaroundSchemaList",
        "type": "array"
      },
      "UpdateTurnaroundSchemaList.a9993e3.UpdateTurnaroundSchema": {
        "example": {
          "default_duration": 2,
          "id": 123,
          "name": "Two-Day Rush"
        },
        "properties": {
          "business_days_only": {
            "title": "Business Days Only",
            "type": "boolean"
          },
          "default_duration": {
            "title": "Default Duration",
            "type": "integer"
          },
          "default_flat_surcharge": {
            "title": "Default Flat Surcharge",
            "type": "number"
          },
          "default_percentage_surcharge": {
            "title": "Default Percentage Surcharge",
            "type": "number"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "divisions": {
            "items": {
              "type": "object"
            },
            "title": "Divisions",
            "type": "array"
          },
          "flag_background_color": {
            "title": "Flag Background Color",
            "type": "string"
          },
          "flag_text_color": {
            "title": "Flag Text Color",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "UpdateTurnaroundSchema",
        "type": "object"
      }
    },
    "securitySchemes": {
      "BearerToken": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@qbench.com",
      "name": "QBench Support"
    },
    "title": "QBench API",
    "version": "2.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/qbench/api/v2/accessioning-types": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_accessioning-types",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAccessioningTypeSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "ACCESSIONING_TYPE"
        ]
      }
    },
    "/qbench/api/v2/accessioning-types/{accessioning_type_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_accessioning-types_{accessioning_type_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "accessioning_type_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleAccessioningTypeSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "ACCESSIONING_TYPE"
        ]
      }
    },
    "/qbench/api/v2/api-clients": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_api-clients",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAPIClientSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "API_CLIENT"
        ]
      }
    },
    "/qbench/api/v2/api-clients/{api_client_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_api-clients_{api_client_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "api_client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleAPIClientSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "API_CLIENT"
        ]
      }
    },
    "/qbench/api/v2/api-clients/{api_client_id}/customers": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_api-clients_{api_client_id}_customers",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "api_client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "name_keyword",
            "required": false,
            "schema": {
              "title": "Name Keyword",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "contact_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Contact Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "api_client_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Api Client Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_sub_customers",
            "required": false,
            "schema": {
              "title": "Include Sub Customers",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Return the invoices updated after this unix timestamp",
            "in": "query",
            "name": "invoice_last_updated",
            "required": false,
            "schema": {
              "description": "Return the invoices updated after this unix timestamp",
              "title": "Invoice Last Updated",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomerSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Customers for an API Client",
        "tags": [
          "API_CLIENT",
          "CUSTOMER"
        ]
      }
    },
    "/qbench/api/v2/assay-categories": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_assay-categories",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCategorySchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "ASSAY_CATEGORY"
        ]
      }
    },
    "/qbench/api/v2/assay-categories/{assay_category_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_assay-categories_{assay_category_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "assay_category_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleCategorySchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "ASSAY_CATEGORY"
        ]
      }
    },
    "/qbench/api/v2/assays": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_assays",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tech_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Tech Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "team_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Team Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Category Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "worksheet_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Worksheet Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AssayFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_edit_sequence",
            "required": false,
            "schema": {
              "title": "Qbd Edit Sequence",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_id",
            "required": false,
            "schema": {
              "title": "Qbd Id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "title_keyword",
            "required": false,
            "schema": {
              "title": "Title Keyword",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AssayFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "active",
            "required": false,
            "schema": {
              "title": "Active",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Assay Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Assay Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ASSAY"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AssayFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Return the assays whose related invoices were updated after this unix timestamp",
            "in": "query",
            "name": "invoice_last_updated",
            "required": false,
            "schema": {
              "description": "Return the assays whose related invoices were updated after this unix timestamp",
              "title": "Invoice Last Updated",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssaySchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "ASSAY"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_assays",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssaySchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseAssaySchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "ASSAY"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_assays",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssaySchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseAssaySchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "ASSAY"
        ]
      }
    },
    "/qbench/api/v2/assays/{assay_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_assays_{assay_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "assay_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "ASSAY"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_assays_{assay_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "assay_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleAssaySchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "ASSAY"
        ]
      }
    },
    "/qbench/api/v2/assays/{assay_id}/accessioning-types": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_assays_{assay_id}_accessioning-types",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "assay_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {},
        "summary": "Get paginated list of Accessioning Types for an Assay",
        "tags": [
          "ASSAY",
          "ACCESSIONING_TYPE"
        ]
      }
    },
    "/qbench/api/v2/assays/{assay_id}/attachments": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_assays_{assay_id}_attachments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "assay_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttachmentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_assay_attachments <GET>",
        "tags": [
          "ASSAY",
          "ATTACHMENT"
        ]
      }
    },
    "/qbench/api/v2/assays/{assay_id}/divisions": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_assays_{assay_id}_divisions",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "assay_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {},
        "summary": "Get paginated list of Divisions for an Assay",
        "tags": [
          "ASSAY",
          "DIVISION"
        ]
      }
    },
    "/qbench/api/v2/assays/{assay_id}/panels": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_assays_{assay_id}_panels",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "assay_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "title_keyword",
            "required": false,
            "schema": {
              "title": "Title Keyword",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_id",
            "required": false,
            "schema": {
              "title": "Qbd Id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_edit_sequence",
            "required": false,
            "schema": {
              "title": "Qbd Edit Sequence",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PanelFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PanelFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "Base64 Encoded Panel Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Panel Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "PANEL"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Return the panels whose related invoices were updated after this unix timestamp",
            "in": "query",
            "name": "invoice_last_updated",
            "required": false,
            "schema": {
              "description": "Return the panels whose related invoices were updated after this unix timestamp",
              "title": "Invoice Last Updated",
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "Get paginated list of Panels for an Assay",
        "tags": [
          "ASSAY",
          "PANEL"
        ]
      }
    },
    "/qbench/api/v2/assays/{assay_id}/turnarounds": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_assays_{assay_id}_turnarounds",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "assay_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTurnaroundSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Turnarounds for an Assay",
        "tags": [
          "ASSAY",
          "TURNAROUND"
        ]
      }
    },
    "/qbench/api/v2/attachments": {
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_attachments",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttachmentSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseAttachmentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "ATTACHMENT"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_attachments",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttachmentSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseAttachmentSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "ATTACHMENT"
        ]
      }
    },
    "/qbench/api/v2/attachments/{attachment_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_attachments_{attachment_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "attachment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "ATTACHMENT"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_attachments_{attachment_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "attachment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleAttachmentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "ATTACHMENT"
        ]
      }
    },
    "/qbench/api/v2/auth/token": {
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_auth_token",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationSchema.0d0ead6"
              }
            }
          }
        },
        "responses": {},
        "security": [],
        "summary": "get_access_token <POST>",
        "tags": [
          "AUTHENTICATION"
        ]
      }
    },
    "/qbench/api/v2/auth/token/info": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_auth_token_info",
        "parameters": [],
        "responses": {},
        "summary": "token_info <GET>",
        "tags": [
          "AUTHENTICATION"
        ]
      }
    },
    "/qbench/api/v2/auth/token/refresh": {
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_auth_token_refresh",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenSchema.0d0ead6"
              }
            }
          }
        },
        "responses": {},
        "security": [],
        "summary": "refresh_access_token <POST>",
        "tags": [
          "AUTHENTICATION"
        ]
      }
    },
    "/qbench/api/v2/batches": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_batches",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Test Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "project_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Project Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "protocol_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Protocol Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_protocol_step_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Current Protocol Step Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "parent_batch_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Parent Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_object_protocol_step_user_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Current Object Protocol Step User Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_assigned_user_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Object Protocol Step Assigned User Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Object Protocol Step Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "batch_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "display_name",
            "required": false,
            "schema": {
              "title": "Display Name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_batches_without_assay",
            "required": false,
            "schema": {
              "title": "Include Batches Without Assay",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_assigned_current_user",
            "required": false,
            "schema": {
              "title": "Object Protocol Step Assigned Current User",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_object_protocol_step_current_user",
            "required": false,
            "schema": {
              "title": "Current Object Protocol Step Current User",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_no_user_assigned",
            "required": false,
            "schema": {
              "title": "Object Protocol Step No User Assigned",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Batch Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBatchSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "BATCH"
        ]
      }
    },
    "/qbench/api/v2/batches/{batch_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_batches_{batch_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "batch_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "BATCH"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_batches_{batch_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "batch_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleBatchSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "BATCH"
        ]
      }
    },
    "/qbench/api/v2/batches/{batch_id}/attachments": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_batches_{batch_id}_attachments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "batch_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttachmentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_batch_attachments <GET>",
        "tags": [
          "BATCH",
          "ATTACHMENT"
        ]
      }
    },
    "/qbench/api/v2/batches/{batch_id}/children": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_batches_{batch_id}_children",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "batch_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Test Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "project_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Project Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "protocol_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Protocol Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_protocol_step_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Current Protocol Step Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "parent_batch_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Parent Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_object_protocol_step_user_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Current Object Protocol Step User Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_assigned_user_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Object Protocol Step Assigned User Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Object Protocol Step Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "batch_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "display_name",
            "required": false,
            "schema": {
              "title": "Display Name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_batches_without_assay",
            "required": false,
            "schema": {
              "title": "Include Batches Without Assay",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_assigned_current_user",
            "required": false,
            "schema": {
              "title": "Object Protocol Step Assigned Current User",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_object_protocol_step_current_user",
            "required": false,
            "schema": {
              "title": "Current Object Protocol Step Current User",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_no_user_assigned",
            "required": false,
            "schema": {
              "title": "Object Protocol Step No User Assigned",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Batch Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBatchSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Children for a Batch",
        "tags": [
          "BATCH"
        ]
      }
    },
    "/qbench/api/v2/batches/{batch_id}/parents": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_batches_{batch_id}_parents",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "batch_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Test Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "project_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Project Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "protocol_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Protocol Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_protocol_step_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Current Protocol Step Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "parent_batch_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Parent Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_object_protocol_step_user_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Current Object Protocol Step User Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_assigned_user_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Object Protocol Step Assigned User Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Object Protocol Step Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "batch_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "display_name",
            "required": false,
            "schema": {
              "title": "Display Name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_batches_without_assay",
            "required": false,
            "schema": {
              "title": "Include Batches Without Assay",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_assigned_current_user",
            "required": false,
            "schema": {
              "title": "Object Protocol Step Assigned Current User",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_object_protocol_step_current_user",
            "required": false,
            "schema": {
              "title": "Current Object Protocol Step Current User",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_no_user_assigned",
            "required": false,
            "schema": {
              "title": "Object Protocol Step No User Assigned",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Batch Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBatchSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Parents for a Batch",
        "tags": [
          "BATCH"
        ]
      }
    },
    "/qbench/api/v2/batches/{batch_id}/samples": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_batches_{batch_id}_samples",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "batch_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "List of Parent Sample IDs",
            "in": "query",
            "name": "parent_sample_ids",
            "required": false,
            "schema": {
              "description": "List of Parent Sample IDs",
              "items": {
                "type": "integer"
              },
              "title": "Parent Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Inventory Stock IDs",
            "in": "query",
            "name": "inventory_stock_ids",
            "required": false,
            "schema": {
              "description": "List of Inventory Stock IDs",
              "items": {
                "type": "integer"
              },
              "title": "Inventory Stock Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Inventory Item IDs",
            "in": "query",
            "name": "inventory_item_ids",
            "required": false,
            "schema": {
              "description": "List of Inventory Item IDs",
              "items": {
                "type": "integer"
              },
              "title": "Inventory Item Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Customer IDs",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "description": "List of Customer IDs",
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order IDs",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "description": "List of Order IDs",
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Project IDs",
            "in": "query",
            "name": "project_ids",
            "required": false,
            "schema": {
              "description": "List of Project IDs",
              "items": {
                "type": "integer"
              },
              "title": "Project Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Source IDs",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "description": "List of Source IDs",
              "items": {
                "type": "integer"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Accessioning Type IDs",
            "in": "query",
            "name": "accessioning_type_ids",
            "required": false,
            "schema": {
              "description": "List of Accessioning Type IDs",
              "items": {
                "type": "integer"
              },
              "title": "Accessioning Type Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Location IDs",
            "in": "query",
            "name": "location_ids",
            "required": false,
            "schema": {
              "description": "List of Location IDs",
              "items": {
                "type": "integer"
              },
              "title": "Location Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs",
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample IDs",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "description": "List of Sample IDs",
              "items": {
                "type": "string"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample Confident Cannabis IDs",
            "in": "query",
            "name": "cc_ids",
            "required": false,
            "schema": {
              "description": "List of Sample Confident Cannabis IDs",
              "items": {
                "type": "string"
              },
              "title": "Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order Confident Cannabis IDs",
            "in": "query",
            "name": "order_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Order Confident Cannabis IDs",
              "items": {
                "type": "string"
              },
              "title": "Order Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample Tags",
            "in": "query",
            "name": "sample_tags",
            "required": false,
            "schema": {
              "description": "List of Sample Tags",
              "items": {
                "type": "string"
              },
              "title": "Sample Tags",
              "type": "array"
            }
          },
          {
            "description": "Sample tag filter action type",
            "in": "query",
            "name": "sample_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Sample tag filter action type"
            }
          },
          {
            "description": "List of Order Request statuses",
            "in": "query",
            "name": "order_request_statuses",
            "required": false,
            "schema": {
              "description": "List of Order Request statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Request Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Lab IDs",
            "in": "query",
            "name": "lab_ids",
            "required": false,
            "schema": {
              "description": "List of Lab IDs",
              "items": {
                "type": "string"
              },
              "title": "Lab Ids",
              "type": "array"
            }
          },
          {
            "description": "List of METRC UIDs",
            "in": "query",
            "name": "metrc_uids",
            "required": false,
            "schema": {
              "description": "List of METRC UIDs",
              "items": {
                "type": "string"
              },
              "title": "Metrc Uids",
              "type": "array"
            }
          },
          {
            "description": "Only return Linked Samples",
            "in": "query",
            "name": "linked",
            "required": false,
            "schema": {
              "description": "Only return Linked Samples",
              "title": "Linked",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Parent Samples",
            "in": "query",
            "name": "has_sub_sample",
            "required": false,
            "schema": {
              "description": "Only return Parent Samples",
              "title": "Has Sub Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Sub Samples",
            "in": "query",
            "name": "is_sub_sample",
            "required": false,
            "schema": {
              "description": "Only return Sub Samples",
              "title": "Is Sub Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples without an Order",
            "in": "query",
            "name": "no_associated_order",
            "required": false,
            "schema": {
              "description": "Only return Samples without an Order",
              "title": "No Associated Order",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples without a Project",
            "in": "query",
            "name": "no_associated_project",
            "required": false,
            "schema": {
              "description": "Only return Samples without a Project",
              "title": "No Associated Project",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that do not have Sub Samples",
            "in": "query",
            "name": "no_sub_samples",
            "required": false,
            "schema": {
              "description": "Only return Samples that do not have Sub Samples",
              "title": "No Sub Samples",
              "type": "boolean"
            }
          },
          {
            "description": "Only return unique Samples",
            "in": "query",
            "name": "unique_samples_only",
            "required": false,
            "schema": {
              "description": "Only return unique Samples",
              "title": "Unique Samples Only",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have all their Tests completed",
            "in": "query",
            "name": "completed",
            "required": false,
            "schema": {
              "description": "Only return Samples that have all their Tests completed",
              "title": "Completed",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that do not have an associated Batch",
            "in": "query",
            "name": "no_associated_batch",
            "required": false,
            "schema": {
              "description": "Only return Samples that do not have an associated Batch",
              "title": "No Associated Batch",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have been received",
            "in": "query",
            "name": "received",
            "required": false,
            "schema": {
              "description": "Only return Samples that have been received",
              "title": "Received",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have their report published",
            "in": "query",
            "name": "release_report",
            "required": false,
            "schema": {
              "description": "Only return Samples that have their report published",
              "title": "Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have a Report generated",
            "in": "query",
            "name": "report_generated",
            "required": false,
            "schema": {
              "description": "Only return Samples that have a Report generated",
              "title": "Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Field to sort by",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "description": "Field to sort by",
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "Sort by ascending or descending",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.SortOrderValues"
                }
              ],
              "description": "Sort by ascending or descending"
            }
          },
          {
            "description": "Sample Type",
            "in": "query",
            "name": "sample_type",
            "required": false,
            "schema": {
              "description": "Sample Type",
              "title": "Sample Type",
              "type": "string"
            }
          },
          {
            "description": "Sample Description",
            "in": "query",
            "name": "sample_description",
            "required": false,
            "schema": {
              "description": "Sample Description",
              "title": "Sample Description",
              "type": "string"
            }
          },
          {
            "description": "METRC UID",
            "in": "query",
            "name": "metrc_uid",
            "required": false,
            "schema": {
              "description": "METRC UID",
              "title": "Metrc Uid",
              "type": "string"
            }
          },
          {
            "description": "Lab ID",
            "in": "query",
            "name": "lab_id",
            "required": false,
            "schema": {
              "description": "Lab ID",
              "title": "Lab Id",
              "type": "string"
            }
          },
          {
            "description": "Return deleted Samples",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.IncludeDeletedValues"
                }
              ],
              "description": "Return deleted Samples"
            }
          },
          {
            "description": "Base64 Encoded Sample Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Sample Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "SAMPLE"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "customer_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Sample ID lower range",
            "in": "query",
            "name": "sample_id_range_start",
            "required": false,
            "schema": {
              "description": "Sample ID lower range",
              "title": "Sample Id Range Start",
              "type": "string"
            }
          },
          {
            "description": "Sample ID upper range",
            "in": "query",
            "name": "sample_id_range_end",
            "required": false,
            "schema": {
              "description": "Sample ID upper range",
              "title": "Sample Id Range End",
              "type": "string"
            }
          },
          {
            "description": "Samples started filter range",
            "in": "query",
            "name": "samples_started_filter_range",
            "required": false,
            "schema": {
              "description": "Samples started filter range",
              "title": "Samples Started Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection lower range",
            "in": "query",
            "name": "time_of_collection_start",
            "required": false,
            "schema": {
              "description": "Sample's time of collection lower range",
              "title": "Time Of Collection Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection upper range",
            "in": "query",
            "name": "time_of_collection_end",
            "required": false,
            "schema": {
              "description": "Sample's time of collection upper range",
              "title": "Time Of Collection End",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection pre-defined range",
            "in": "query",
            "name": "time_of_collection_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's time of collection pre-defined range",
              "title": "Time Of Collection Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received lower range",
            "in": "query",
            "name": "date_received_start",
            "required": false,
            "schema": {
              "description": "Sample's date received lower range",
              "title": "Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received upper range",
            "in": "query",
            "name": "date_received_end",
            "required": false,
            "schema": {
              "description": "Sample's date received upper range",
              "title": "Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received pre-defined range",
            "in": "query",
            "name": "date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's date received pre-defined range",
              "title": "Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date received lower range",
            "in": "query",
            "name": "order_date_received_start",
            "required": false,
            "schema": {
              "description": "Order's date received lower range",
              "title": "Order Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date received upper range",
            "in": "query",
            "name": "order_date_received_end",
            "required": false,
            "schema": {
              "description": "Order's date received upper range",
              "title": "Order Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Order's date received pre-defined range",
            "in": "query",
            "name": "order_date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date received pre-defined range",
              "title": "Order Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated lower range",
            "in": "query",
            "name": "last_updated_start",
            "required": false,
            "schema": {
              "description": "Sample's last updated lower range",
              "title": "Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated upper range",
            "in": "query",
            "name": "last_updated_end",
            "required": false,
            "schema": {
              "description": "Sample's last updated upper range",
              "title": "Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated pre-defined range",
            "in": "query",
            "name": "last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's last updated pre-defined range",
              "title": "Last Updated Filter Range",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSampleSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Samples for a Batch",
        "tags": [
          "BATCH",
          "SAMPLE"
        ]
      }
    },
    "/qbench/api/v2/batches/{batch_id}/tests": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_batches_{batch_id}_tests",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "batch_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "Customer ID list",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "description": "Customer ID list",
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "Assay ID list",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "description": "Assay ID list",
              "items": {
                "type": "integer"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "Project ID list for Orders",
            "in": "query",
            "name": "order_project_ids",
            "required": false,
            "schema": {
              "description": "Project ID list for Orders",
              "items": {
                "type": "integer"
              },
              "title": "Order Project Ids",
              "type": "array"
            }
          },
          {
            "description": "Project ID list for Samples",
            "in": "query",
            "name": "sample_project_ids",
            "required": false,
            "schema": {
              "description": "Project ID list for Samples",
              "items": {
                "type": "integer"
              },
              "title": "Sample Project Ids",
              "type": "array"
            }
          },
          {
            "description": "User IDs",
            "in": "query",
            "name": "tech_ids",
            "required": false,
            "schema": {
              "description": "User IDs",
              "items": {
                "type": "integer"
              },
              "title": "Tech Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Source IDs",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "description": "List of Source IDs",
              "items": {
                "type": "integer"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Test IDs",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "description": "List of Test IDs",
              "items": {
                "type": "string"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order IDs",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "description": "List of Order IDs",
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample IDs",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "description": "List of Sample IDs",
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Location IDs",
            "in": "query",
            "name": "location_ids",
            "required": false,
            "schema": {
              "description": "List of Location IDs",
              "items": {
                "type": "integer"
              },
              "title": "Location Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Panel IDs",
            "in": "query",
            "name": "panel_ids",
            "required": false,
            "schema": {
              "description": "List of Panel IDs",
              "items": {
                "type": "integer"
              },
              "title": "Panel Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Assay Condition IDs",
            "in": "query",
            "name": "assay_condition_ids",
            "required": false,
            "schema": {
              "description": "List of Assay Condition IDs",
              "items": {
                "type": "integer"
              },
              "title": "Assay Condition Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs",
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Accessioning Types for Samples",
            "in": "query",
            "name": "sample_accessioning_type_ids",
            "required": false,
            "schema": {
              "description": "List of Accessioning Types for Samples",
              "items": {
                "type": "integer"
              },
              "title": "Sample Accessioning Type Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs for a Sample",
            "in": "query",
            "name": "sample_batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs for a Sample",
              "items": {
                "type": "integer"
              },
              "title": "Sample Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Team IDs",
            "in": "query",
            "name": "team_ids",
            "required": false,
            "schema": {
              "description": "List of Team IDs",
              "items": {
                "type": "integer"
              },
              "title": "Team Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Deviation IDs",
            "in": "query",
            "name": "deviation_ids",
            "required": false,
            "schema": {
              "description": "List of Deviation IDs",
              "items": {
                "type": "integer"
              },
              "title": "Deviation Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Turnaround IDs",
            "in": "query",
            "name": "turnaround_ids",
            "required": false,
            "schema": {
              "description": "List of Turnaround IDs",
              "items": {
                "type": "integer"
              },
              "title": "Turnaround Ids",
              "type": "array"
            }
          },
          {
            "description": "List of tags for an Order",
            "in": "query",
            "name": "order_tags",
            "required": false,
            "schema": {
              "description": "List of tags for an Order",
              "items": {
                "type": "integer"
              },
              "title": "Order Tags",
              "type": "array"
            }
          },
          {
            "description": "Order tags filter action type",
            "in": "query",
            "name": "order_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Order tags filter action type"
            }
          },
          {
            "description": "List of tags for a Sample",
            "in": "query",
            "name": "sample_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Sample",
              "items": {
                "type": "string"
              },
              "title": "Sample Tags",
              "type": "array"
            }
          },
          {
            "description": "Sample tags filter action type",
            "in": "query",
            "name": "sample_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Sample tags filter action type"
            }
          },
          {
            "description": "List of tags for a Test",
            "in": "query",
            "name": "test_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Test",
              "items": {
                "type": "string"
              },
              "title": "Test Tags",
              "type": "array"
            }
          },
          {
            "description": "Test tags filter action type",
            "in": "query",
            "name": "test_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Test tags filter action type"
            }
          },
          {
            "description": "List of tags for a Customer",
            "in": "query",
            "name": "customer_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Customer",
              "items": {
                "type": "string"
              },
              "title": "Customer Tags",
              "type": "array"
            }
          },
          {
            "description": "Customer tags filter action type",
            "in": "query",
            "name": "customer_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Customer tags filter action type"
            }
          },
          {
            "description": "List of Test statuses",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "description": "List of Test statuses",
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Order statuses",
            "in": "query",
            "name": "order_statuses",
            "required": false,
            "schema": {
              "description": "List of Order statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Order Request statuses",
            "in": "query",
            "name": "order_request_statuses",
            "required": false,
            "schema": {
              "description": "List of Order Request statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Request Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Confident Cannabis IDs for Samples",
            "in": "query",
            "name": "sample_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Confident Cannabis IDs for Samples",
              "items": {
                "type": "string"
              },
              "title": "Sample Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Confident Cannabis IDs for Orders",
            "in": "query",
            "name": "order_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Confident Cannabis IDs for Orders",
              "items": {
                "type": "string"
              },
              "title": "Order Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "Sort by a field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "description": "Sort by a field",
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "Sort by ascending or descending",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.SortOrderValues"
                }
              ],
              "description": "Sort by ascending or descending"
            }
          },
          {
            "description": "Description of a Sample",
            "in": "query",
            "name": "sample_description",
            "required": false,
            "schema": {
              "description": "Description of a Sample",
              "title": "Sample Description",
              "type": "string"
            }
          },
          {
            "description": "Test results",
            "in": "query",
            "name": "results",
            "required": false,
            "schema": {
              "description": "Test results",
              "title": "Results",
              "type": "string"
            }
          },
          {
            "description": "Test results filter action type",
            "in": "query",
            "name": "results_action_option",
            "required": false,
            "schema": {
              "description": "Test results filter action type",
              "title": "Results Action Option",
              "type": "string"
            }
          },
          {
            "description": "Test results filter upper range number",
            "in": "query",
            "name": "results_range_upper",
            "required": false,
            "schema": {
              "description": "Test results filter upper range number",
              "title": "Results Range Upper",
              "type": "string"
            }
          },
          {
            "description": "Test results filter lower range number",
            "in": "query",
            "name": "results_range_lower",
            "required": false,
            "schema": {
              "description": "Test results filter lower range number",
              "title": "Results Range Lower",
              "type": "string"
            }
          },
          {
            "description": "Assay Condition filter action type",
            "in": "query",
            "name": "assay_conditions_action",
            "required": false,
            "schema": {
              "description": "Assay Condition filter action type",
              "title": "Assay Conditions Action",
              "type": "string"
            }
          },
          {
            "description": "Result tags",
            "in": "query",
            "name": "results_tags",
            "required": false,
            "schema": {
              "description": "Result tags",
              "title": "Results Tags",
              "type": "string"
            }
          },
          {
            "description": "Tags filter action type",
            "in": "query",
            "name": "tags_filter_action",
            "required": false,
            "schema": {
              "description": "Tags filter action type",
              "title": "Tags Filter Action",
              "type": "string"
            }
          },
          {
            "description": "Boolean whether or not to do an AND or an OR query when both Assay IDs and Panel IDs are filtered",
            "in": "query",
            "name": "panel_assay_and_query",
            "required": false,
            "schema": {
              "description": "Boolean whether or not to do an AND or an OR query when both Assay IDs and Panel IDs are filtered",
              "title": "Panel Assay And Query",
              "type": "string"
            }
          },
          {
            "description": "Sample ID filter lower range",
            "in": "query",
            "name": "sample_id_range_start",
            "required": false,
            "schema": {
              "description": "Sample ID filter lower range",
              "title": "Sample Id Range Start",
              "type": "string"
            }
          },
          {
            "description": "Sample ID filter upper range",
            "in": "query",
            "name": "sample_id_range_end",
            "required": false,
            "schema": {
              "description": "Sample ID filter upper range",
              "title": "Sample Id Range End",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Order Additional Field Filters",
            "in": "query",
            "name": "order_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Order Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ORDER"
              },
              "title": "Order Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Sample Additional Field Filters",
            "in": "query",
            "name": "sample_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Sample Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "SAMPLE"
              },
              "title": "Sample Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Test Additional Field Filters",
            "in": "query",
            "name": "test_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Test Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "TEST"
              },
              "title": "Test Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Assay Additional Field Filters",
            "in": "query",
            "name": "assay_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Assay Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ASSAY"
              },
              "title": "Assay Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Batch Additional Field Filters",
            "in": "query",
            "name": "batch_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Batch Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "customer_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Core Field Filters",
            "in": "query",
            "name": "customer_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Core Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Assay Core Field Filters",
            "in": "query",
            "name": "assay_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Assay Core Field Filters",
              "json_schema_extra": {
                "entity_type": "ASSAY"
              },
              "title": "Assay Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Batch Core Field Filters",
            "in": "query",
            "name": "batch_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Core Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Batch Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Boolean to include normal Orders when filtering by Order Request Status",
            "in": "query",
            "name": "include_orders",
            "required": false,
            "schema": {
              "description": "Boolean to include normal Orders when filtering by Order Request Status",
              "title": "Include Orders",
              "type": "boolean"
            }
          },
          {
            "description": "Return Tests where its Sample does not have a Batch associated",
            "in": "query",
            "name": "no_associated_batch_sample",
            "required": false,
            "schema": {
              "description": "Return Tests where its Sample does not have a Batch associated",
              "title": "No Associated Batch Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Return Tests that do not have a Batch associated",
            "in": "query",
            "name": "no_associated_batch_test",
            "required": false,
            "schema": {
              "description": "Return Tests that do not have a Batch associated",
              "title": "No Associated Batch Test",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to include Tests without priority when filtering by Priority",
            "in": "query",
            "name": "include_tests_without_priority",
            "required": false,
            "schema": {
              "description": "Boolean to include Tests without priority when filtering by Priority",
              "title": "Include Tests Without Priority",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have a Batch associated",
            "in": "query",
            "name": "samples_batched",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have a Batch associated",
              "title": "Samples Batched",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have a Report generated",
            "in": "query",
            "name": "order_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have a Report generated",
              "title": "Order Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have a Report generated",
            "in": "query",
            "name": "sample_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have a Report generated",
              "title": "Sample Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have a Report generated",
            "in": "query",
            "name": "test_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have a Report generated",
              "title": "Test Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have their report published",
            "in": "query",
            "name": "order_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have their report published",
              "title": "Order Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have their Report published",
            "in": "query",
            "name": "sample_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have their Report published",
              "title": "Sample Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their Report published",
            "in": "query",
            "name": "test_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their Report published",
              "title": "Test Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their results released",
            "in": "query",
            "name": "test_release_results",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their results released",
              "title": "Test Release Results",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their Report emailed",
            "in": "query",
            "name": "test_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their Report emailed",
              "title": "Test Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have their Report emailed",
            "in": "query",
            "name": "sample_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have their Report emailed",
              "title": "Sample Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have their Report emailed",
            "in": "query",
            "name": "order_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have their Report emailed",
              "title": "Order Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests without a Team assigned",
            "in": "query",
            "name": "include_tests_without_team",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests without a Team assigned",
              "title": "Include Tests Without Team",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Parent Samples",
            "in": "query",
            "name": "parent_sample_only",
            "required": false,
            "schema": {
              "description": "Boolean to only include Parent Samples",
              "title": "Parent Sample Only",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are the current priority",
            "in": "query",
            "name": "priority_current",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are the current priority",
              "title": "Priority Current",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Sub-Smaples",
            "in": "query",
            "name": "sub_sample_only",
            "required": false,
            "schema": {
              "description": "Boolean to only include Sub-Smaples",
              "title": "Sub Sample Only",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only included Tests that have been emailed",
            "in": "query",
            "name": "emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only included Tests that have been emailed",
              "title": "Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are unlocked",
            "in": "query",
            "name": "unlocked",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are unlocked",
              "title": "Unlocked",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to include deleted Tests",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.IncludeDeletedValues"
                }
              ],
              "description": "Boolean to include deleted Tests"
            }
          },
          {
            "description": "Boolean to filter by Tests overdue",
            "in": "query",
            "name": "overdue",
            "required": false,
            "schema": {
              "description": "Boolean to filter by Tests overdue",
              "title": "Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have been received",
            "in": "query",
            "name": "samples_received",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have been received",
              "title": "Samples Received",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include completed Samples",
            "in": "query",
            "name": "sample_complete",
            "required": false,
            "schema": {
              "description": "Boolean to only include completed Samples",
              "title": "Sample Complete",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that are overdue",
            "in": "query",
            "name": "order_overdue",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that are overdue",
              "title": "Order Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are assigned to the current user",
            "in": "query",
            "name": "assigned_to_current_user",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are assigned to the current user",
              "title": "Assigned To Current User",
              "type": "boolean"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp lower range",
            "in": "query",
            "name": "last_updated_start",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp lower range",
              "title": "Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp upper range",
            "in": "query",
            "name": "last_updated_end",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp upper range",
              "title": "Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp pre-defined range",
            "in": "query",
            "name": "last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp pre-defined range",
              "title": "Last Updated Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp relative range",
            "in": "query",
            "name": "last_updated_relative_days",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp relative range",
              "title": "Last Updated Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp relative filter type",
            "in": "query",
            "name": "last_updated_relative",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp relative filter type",
              "title": "Last Updated Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp lower range",
            "in": "query",
            "name": "sample_last_updated_start",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp lower range",
              "title": "Sample Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp upper range",
            "in": "query",
            "name": "sample_last_updated_end",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp upper range",
              "title": "Sample Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp pre-defined range's last updated timestamp pre-defined range",
            "in": "query",
            "name": "sample_last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp pre-defined range's last updated timestamp pre-defined range",
              "title": "Sample Last Updated Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp relative range",
            "in": "query",
            "name": "sample_last_updated_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp relative range",
              "title": "Sample Last Updated Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp relative filter type",
            "in": "query",
            "name": "sample_last_updated_relative",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp relative filter type",
              "title": "Sample Last Updated Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection lower range",
            "in": "query",
            "name": "sample_time_of_collection_start",
            "required": false,
            "schema": {
              "description": "Sample's time of collection lower range",
              "title": "Sample Time Of Collection Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection upper range",
            "in": "query",
            "name": "sample_time_of_collection_end",
            "required": false,
            "schema": {
              "description": "Sample's time of collection upper range",
              "title": "Sample Time Of Collection End",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection pre-defined range",
            "in": "query",
            "name": "sample_time_of_collection_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's time of collection pre-defined range",
              "title": "Sample Time Of Collection Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection relative range",
            "in": "query",
            "name": "sample_time_of_collection_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's time of collection relative range",
              "title": "Sample Time Of Collection Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection relative filter type",
            "in": "query",
            "name": "sample_time_of_collection_relative",
            "required": false,
            "schema": {
              "description": "Sample's time of collection relative filter type",
              "title": "Sample Time Of Collection Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date received lower range",
            "in": "query",
            "name": "date_received_start",
            "required": false,
            "schema": {
              "description": "Order's date received lower range",
              "title": "Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date received upper range",
            "in": "query",
            "name": "date_received_end",
            "required": false,
            "schema": {
              "description": "Order's date received upper range",
              "title": "Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Order's date received pre-defined range",
            "in": "query",
            "name": "date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date received pre-defined range",
              "title": "Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date received relative range",
            "in": "query",
            "name": "date_received_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date received relative range",
              "title": "Date Received Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date received relative filter type",
            "in": "query",
            "name": "date_received_relative",
            "required": false,
            "schema": {
              "description": "Order's date received relative filter type",
              "title": "Date Received Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received lower range",
            "in": "query",
            "name": "sample_date_received_start",
            "required": false,
            "schema": {
              "description": "Sample's date received lower range",
              "title": "Sample Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received upper range",
            "in": "query",
            "name": "sample_date_received_end",
            "required": false,
            "schema": {
              "description": "Sample's date received upper range",
              "title": "Sample Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received pre-defined range",
            "in": "query",
            "name": "sample_date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's date received pre-defined range",
              "title": "Sample Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received relative range",
            "in": "query",
            "name": "sample_date_received_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's date received relative range",
              "title": "Sample Date Received Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received relative filter type",
            "in": "query",
            "name": "sample_date_received_relative",
            "required": false,
            "schema": {
              "description": "Sample's date received relative filter type",
              "title": "Sample Date Received Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's date created lower range",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "description": "Test's date created lower range",
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "Test's date created upper range",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "description": "Test's date created upper range",
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "Test's date created pre-defined range",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "description": "Test's date created pre-defined range",
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's date created relative range",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "description": "Test's date created relative range",
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's date created relative filter type",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "description": "Test's date created relative filter type",
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's due date lower range",
            "in": "query",
            "name": "date_required_start",
            "required": false,
            "schema": {
              "description": "Order's due date lower range",
              "title": "Date Required Start",
              "type": "string"
            }
          },
          {
            "description": "Order's due date upper range",
            "in": "query",
            "name": "date_required_end",
            "required": false,
            "schema": {
              "description": "Order's due date upper range",
              "title": "Date Required End",
              "type": "string"
            }
          },
          {
            "description": "Order's due date pre-defined range",
            "in": "query",
            "name": "date_required_filter_range",
            "required": false,
            "schema": {
              "description": "Order's due date pre-defined range",
              "title": "Date Required Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's due date relative range",
            "in": "query",
            "name": "date_required_relative_days",
            "required": false,
            "schema": {
              "description": "Order's due date relative range",
              "title": "Date Required Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's due date relative filter type",
            "in": "query",
            "name": "date_required_relative",
            "required": false,
            "schema": {
              "description": "Order's due date relative filter type",
              "title": "Date Required Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved lower range",
            "in": "query",
            "name": "date_approved_start",
            "required": false,
            "schema": {
              "description": "Order's date approved lower range",
              "title": "Date Approved Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved upper range",
            "in": "query",
            "name": "date_approved_end",
            "required": false,
            "schema": {
              "description": "Order's date approved upper range",
              "title": "Date Approved End",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved pre-defined range",
            "in": "query",
            "name": "date_approved_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date approved pre-defined range",
              "title": "Date Approved Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved relative range",
            "in": "query",
            "name": "date_approved_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date approved relative range",
              "title": "Date Approved Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved relative filter type",
            "in": "query",
            "name": "date_approved_relative",
            "required": false,
            "schema": {
              "description": "Order's date approved relative filter type",
              "title": "Date Approved Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed lower range",
            "in": "query",
            "name": "order_date_completed_start",
            "required": false,
            "schema": {
              "description": "Order's date completed lower range",
              "title": "Order Date Completed Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed upper range",
            "in": "query",
            "name": "order_date_completed_end",
            "required": false,
            "schema": {
              "description": "Order's date completed upper range",
              "title": "Order Date Completed End",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed pre-defined range",
            "in": "query",
            "name": "order_date_completed_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date completed pre-defined range",
              "title": "Order Date Completed Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed relative range",
            "in": "query",
            "name": "order_date_completed_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date completed relative range",
              "title": "Order Date Completed Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed relative filter type",
            "in": "query",
            "name": "order_date_completed_relative",
            "required": false,
            "schema": {
              "description": "Order's date completed relative filter type",
              "title": "Order Date Completed Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date lower range",
            "in": "query",
            "name": "estimated_start_date_start",
            "required": false,
            "schema": {
              "description": "Test's estimated start date lower range",
              "title": "Estimated Start Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date upper range",
            "in": "query",
            "name": "estimated_start_date_end",
            "required": false,
            "schema": {
              "description": "Test's estimated start date upper range",
              "title": "Estimated Start Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date pre-defined range",
            "in": "query",
            "name": "estimated_start_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's estimated start date pre-defined range",
              "title": "Estimated Start Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date relative range",
            "in": "query",
            "name": "estimated_start_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's estimated start date relative range",
              "title": "Estimated Start Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date relative filter type",
            "in": "query",
            "name": "estimated_start_date_relative",
            "required": false,
            "schema": {
              "description": "Test's estimated start date relative filter type",
              "title": "Estimated Start Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date lower range",
            "in": "query",
            "name": "estimated_complete_date_start",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date lower range",
              "title": "Estimated Complete Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date upper range",
            "in": "query",
            "name": "estimated_complete_date_end",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date upper range",
              "title": "Estimated Complete Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date pre-defined range",
            "in": "query",
            "name": "estimated_complete_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date pre-defined range",
              "title": "Estimated Complete Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date relative range",
            "in": "query",
            "name": "estimated_complete_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date relative range",
              "title": "Estimated Complete Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date relative filter type",
            "in": "query",
            "name": "estimated_complete_date_relative",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date relative filter type",
              "title": "Estimated Complete Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's start date lower range",
            "in": "query",
            "name": "start_date_start",
            "required": false,
            "schema": {
              "description": "Test's start date lower range",
              "title": "Start Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's start date upper range",
            "in": "query",
            "name": "start_date_end",
            "required": false,
            "schema": {
              "description": "Test's start date upper range",
              "title": "Start Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's start date pre-defined range",
            "in": "query",
            "name": "start_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's start date pre-defined range",
              "title": "Start Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's start date relative range",
            "in": "query",
            "name": "start_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's start date relative range",
              "title": "Start Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's start date relative filter type",
            "in": "query",
            "name": "start_date_relative",
            "required": false,
            "schema": {
              "description": "Test's start date relative filter type",
              "title": "Start Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date lower range",
            "in": "query",
            "name": "complete_date_start",
            "required": false,
            "schema": {
              "description": "Test's complete date lower range",
              "title": "Complete Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date upper range",
            "in": "query",
            "name": "complete_date_end",
            "required": false,
            "schema": {
              "description": "Test's complete date upper range",
              "title": "Complete Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date pre-defined range",
            "in": "query",
            "name": "complete_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's complete date pre-defined range",
              "title": "Complete Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date relative range",
            "in": "query",
            "name": "complete_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's complete date relative range",
              "title": "Complete Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date relative filter type",
            "in": "query",
            "name": "complete_date_relative",
            "required": false,
            "schema": {
              "description": "Test's complete date relative filter type",
              "title": "Complete Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested lower range",
            "in": "query",
            "name": "order_date_requested_start",
            "required": false,
            "schema": {
              "description": "Order's date requested lower range",
              "title": "Order Date Requested Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested upper range",
            "in": "query",
            "name": "order_date_requested_end",
            "required": false,
            "schema": {
              "description": "Order's date requested upper range",
              "title": "Order Date Requested End",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested pre-defined range",
            "in": "query",
            "name": "order_date_requested_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date requested pre-defined range",
              "title": "Order Date Requested Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested relative range",
            "in": "query",
            "name": "order_date_requested_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date requested relative range",
              "title": "Order Date Requested Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested relative filter type",
            "in": "query",
            "name": "order_date_requested_relative",
            "required": false,
            "schema": {
              "description": "Order's date requested relative filter type",
              "title": "Order Date Requested Relative",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTestSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Tests for a Batch",
        "tags": [
          "BATCH",
          "TEST"
        ]
      }
    },
    "/qbench/api/v2/batches/{batch_id}/worksheet/data": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_batches_{batch_id}_worksheet_data",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "batch_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "raw_worksheet_data",
            "required": false,
            "schema": {
              "title": "Raw Worksheet Data",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "worksheet_config",
            "required": false,
            "schema": {
              "title": "Worksheet Config",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWorksheetResponseSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_batch_worksheet_info <GET>",
        "tags": [
          "BATCH",
          "WORKSHEET"
        ]
      }
    },
    "/qbench/api/v2/contacts": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_contacts",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "title": "First Name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "title": "Last Name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_id",
            "required": false,
            "schema": {
              "title": "Customer Id",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email_addresses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Email Addresses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Customer Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "is_doctor",
            "required": false,
            "schema": {
              "title": "Is Doctor",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Contact Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Contact Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CONTACT"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "contact_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ContactFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ContactFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ContactFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListContactSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "CONTACT"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_contacts",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseContactSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "CONTACT"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_contacts",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseContactSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "CONTACT"
        ]
      }
    },
    "/qbench/api/v2/contacts/{contact_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_contacts_{contact_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "contact_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "CONTACT"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_contacts_{contact_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "contact_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleContactSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "CONTACT"
        ]
      }
    },
    "/qbench/api/v2/contacts/{contact_id}/customers": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_contacts_{contact_id}_customers",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "contact_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "name_keyword",
            "required": false,
            "schema": {
              "title": "Name Keyword",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "contact_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Contact Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "api_client_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Api Client Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_sub_customers",
            "required": false,
            "schema": {
              "title": "Include Sub Customers",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Return the invoices updated after this unix timestamp",
            "in": "query",
            "name": "invoice_last_updated",
            "required": false,
            "schema": {
              "description": "Return the invoices updated after this unix timestamp",
              "title": "Invoice Last Updated",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomerSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Customers for a Contact",
        "tags": [
          "CONTACT",
          "CUSTOMER"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_contacts_{contact_id}_customers",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "contact_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCustomerCreateSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "CUSTOMER",
          "CONTACT"
        ]
      }
    },
    "/qbench/api/v2/customers": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_customers",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "name_keyword",
            "required": false,
            "schema": {
              "title": "Name Keyword",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "contact_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Contact Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "api_client_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Api Client Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_sub_customers",
            "required": false,
            "schema": {
              "title": "Include Sub Customers",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/CustomerFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Return the invoices updated after this unix timestamp",
            "in": "query",
            "name": "invoice_last_updated",
            "required": false,
            "schema": {
              "description": "Return the invoices updated after this unix timestamp",
              "title": "Invoice Last Updated",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomerSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "CUSTOMER"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_customers",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseCustomerSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "CUSTOMER"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_customers",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseCustomerSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "CUSTOMER"
        ]
      }
    },
    "/qbench/api/v2/customers/{customer_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_customers_{customer_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "CUSTOMER"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_customers_{customer_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleCustomerSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "CUSTOMER"
        ]
      }
    },
    "/qbench/api/v2/customers/{customer_id}/attachments": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_customers_{customer_id}_attachments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttachmentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_customer_attachments <GET>",
        "tags": [
          "CUSTOMER",
          "ATTACHMENT"
        ]
      }
    },
    "/qbench/api/v2/customers/{customer_id}/contacts": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_customers_{customer_id}_contacts",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "first_name",
            "required": false,
            "schema": {
              "title": "First Name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "last_name",
            "required": false,
            "schema": {
              "title": "Last Name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_id",
            "required": false,
            "schema": {
              "title": "Customer Id",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "email_addresses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Email Addresses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Customer Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "is_doctor",
            "required": false,
            "schema": {
              "title": "Is Doctor",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Contact Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Contact Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CONTACT"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "contact_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ContactFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ContactFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ContactFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListContactSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Contacts for a Customer",
        "tags": [
          "CUSTOMER",
          "CONTACT"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_customers_{customer_id}_contacts",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCustomerCreateSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "CUSTOMER",
          "CONTACT"
        ]
      }
    },
    "/qbench/api/v2/customers/{customer_id}/contacts/{contact_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_customers_{customer_id}_contacts_{contact_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "contact_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Remove a ContactCustomer relationship",
        "tags": [
          "CUSTOMER",
          "CONTACT"
        ]
      }
    },
    "/qbench/api/v2/customers/{customer_id}/divisions": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_customers_{customer_id}_divisions",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {},
        "summary": "Get paginated list of Divisions for a Customer",
        "tags": [
          "CUSTOMER",
          "DIVISION"
        ]
      }
    },
    "/qbench/api/v2/customers/{customer_id}/sources": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_customers_{customer_id}_sources",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {},
        "summary": "Get paginated list of Sources for a Customer",
        "tags": [
          "CUSTOMER",
          "SOURCE"
        ]
      }
    },
    "/qbench/api/v2/customers/{customer_id}/sub-customers": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_customers_{customer_id}_sub-customers",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomerSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Sub Customers for a Customer",
        "tags": [
          "CUSTOMER"
        ]
      }
    },
    "/qbench/api/v2/divisions": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_divisions",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDivisionSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "DIVISION"
        ]
      }
    },
    "/qbench/api/v2/divisions/{division_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_divisions_{division_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "division_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleDivisionSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "DIVISION"
        ]
      }
    },
    "/qbench/api/v2/epics": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_epics",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEpicSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "EPIC"
        ]
      }
    },
    "/qbench/api/v2/epics/{epic_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_epics_{epic_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "epic_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleEpicSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "EPIC"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/assays": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_assays",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_vendor_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Integration Vendor Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "entity_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Entity Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_assays <GET>",
        "tags": [
          "ASSAY",
          "INTEGRATION"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_integrations_{integration_id}_assays",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntityIntegrationVendorRelationshipSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create_assays <POST>",
        "tags": [
          "ASSAY",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/assays/{entity_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_assays_{entity_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "entity_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_assay <GET>",
        "tags": [
          "ASSAY",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/contacts": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_contacts",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_vendor_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Integration Vendor Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "entity_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Entity Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_contacts <GET>",
        "tags": [
          "CONTACT",
          "INTEGRATION"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_integrations_{integration_id}_contacts",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntityIntegrationVendorRelationshipSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create_contacts <POST>",
        "tags": [
          "CONTACT",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/contacts/{entity_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_contacts_{entity_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "entity_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_contact <GET>",
        "tags": [
          "CONTACT",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/customers": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_customers",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_vendor_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Integration Vendor Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "entity_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Entity Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_customers <GET>",
        "tags": [
          "CUSTOMER",
          "INTEGRATION"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_integrations_{integration_id}_customers",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntityIntegrationVendorRelationshipSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create_customers <POST>",
        "tags": [
          "CUSTOMER",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/customers/{entity_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_customers_{entity_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "entity_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_customer <GET>",
        "tags": [
          "CUSTOMER",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/invoice-payments": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_invoice-payments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_vendor_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Integration Vendor Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "entity_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Entity Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_invoice_payments <GET>",
        "tags": [
          "PAYMENT",
          "INVOICE",
          "INTEGRATION"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_integrations_{integration_id}_invoice-payments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntityIntegrationVendorRelationshipSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create_invoice_payments <POST>",
        "tags": [
          "PAYMENT",
          "INVOICE",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/invoice-payments/{entity_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_integrations_{integration_id}_invoice-payments_{entity_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "entity_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "delete_invoice_payment <DELETE>",
        "tags": [
          "PAYMENT",
          "INVOICE",
          "INTEGRATION"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_invoice-payments_{entity_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "entity_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_invoice_payment <GET>",
        "tags": [
          "PAYMENT",
          "INVOICE",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/invoices": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_invoices",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_vendor_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Integration Vendor Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "entity_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Entity Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_invoices <GET>",
        "tags": [
          "INVOICE",
          "INTEGRATION"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_integrations_{integration_id}_invoices",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntityIntegrationVendorRelationshipSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create_invoices <POST>",
        "tags": [
          "INVOICE",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/invoices/{entity_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_invoices_{entity_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "entity_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_invoice <GET>",
        "tags": [
          "INVOICE",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/panels": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_panels",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_vendor_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Integration Vendor Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "entity_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Entity Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_panels <GET>",
        "tags": [
          "PANEL",
          "INTEGRATION"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_integrations_{integration_id}_panels",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntityIntegrationVendorRelationshipSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create_panels <POST>",
        "tags": [
          "PANEL",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/panels/{entity_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_panels_{entity_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "entity_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_panel <GET>",
        "tags": [
          "PANEL",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/payments": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_payments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_vendor_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Integration Vendor Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "entity_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Entity Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_payments <GET>",
        "tags": [
          "PAYMENT",
          "INTEGRATION"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_integrations_{integration_id}_payments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntityIntegrationVendorRelationshipSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create_payments <POST>",
        "tags": [
          "PAYMENT",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/integrations/{integration_id}/payments/{entity_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_integrations_{integration_id}_payments_{entity_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "integration_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "entity_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleEntityIntegrationVendorRelationshipSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_payment <GET>",
        "tags": [
          "PAYMENT",
          "INTEGRATION"
        ]
      }
    },
    "/qbench/api/v2/invoice-items": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_invoice-items",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInvoiceItemSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "INVOICE_ITEM"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_invoice-items",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceItemSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseInvoiceItemSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "INVOICE_ITEM"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_invoice-items",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceItemSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseInvoiceItemSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "INVOICE_ITEM"
        ]
      }
    },
    "/qbench/api/v2/invoice-items/{invoice_item_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_invoice-items_{invoice_item_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "invoice_item_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "INVOICE_ITEM"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_invoice-items_{invoice_item_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "invoice_item_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleInvoiceItemSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "INVOICE_ITEM"
        ]
      }
    },
    "/qbench/api/v2/invoices": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_invoices",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Invoice Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Order Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "paid_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Paid Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "payment_term",
            "required": false,
            "schema": {
              "title": "Payment Term",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "external_id",
            "required": false,
            "schema": {
              "title": "External Id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_id",
            "required": false,
            "schema": {
              "title": "Qbd Id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_edit_sequence",
            "required": false,
            "schema": {
              "title": "Qbd Edit Sequence",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "total_amount",
            "required": false,
            "schema": {
              "title": "Total Amount",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "total_amount_2",
            "required": false,
            "schema": {
              "title": "Total Amount 2",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "total_amount_logic",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.InvoiceTotalAmountLogicValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_date_start",
            "required": false,
            "schema": {
              "title": "Invoice Date Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_date_end",
            "required": false,
            "schema": {
              "title": "Invoice Date End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_date_filter_range",
            "required": false,
            "schema": {
              "title": "Invoice Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_date_start",
            "required": false,
            "schema": {
              "title": "Due Date Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_date_end",
            "required": false,
            "schema": {
              "title": "Due Date End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_date_filter_range",
            "required": false,
            "schema": {
              "title": "Due Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "overdue",
            "required": false,
            "schema": {
              "title": "Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Invoice Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Invoice Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "INVOICE"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInvoiceSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "INVOICE"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_invoices",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseInvoiceSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "INVOICE"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_invoices",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseInvoiceSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "INVOICE"
        ]
      }
    },
    "/qbench/api/v2/invoices/{invoice_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_invoices_{invoice_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "invoice_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "INVOICE"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_invoices_{invoice_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "invoice_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleInvoiceSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "INVOICE"
        ]
      }
    },
    "/qbench/api/v2/invoices/{invoice_id}/invoice-items": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_invoices_{invoice_id}_invoice-items",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "invoice_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInvoiceItemSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of an Invoice's Items",
        "tags": [
          "INVOICE",
          "INVOICE_ITEM"
        ]
      }
    },
    "/qbench/api/v2/invoices/{invoice_id}/orders": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_invoices_{invoice_id}_orders",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "invoice_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_requested_start",
            "required": false,
            "schema": {
              "title": "Date Requested Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_requested_end",
            "required": false,
            "schema": {
              "title": "Date Requested End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_requested_filter_range",
            "required": false,
            "schema": {
              "title": "Date Requested Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_requested_relative_days",
            "required": false,
            "schema": {
              "title": "Date Requested Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_requested_relative",
            "required": false,
            "schema": {
              "title": "Date Requested Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_received_start",
            "required": false,
            "schema": {
              "title": "Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_received_end",
            "required": false,
            "schema": {
              "title": "Date Received End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_received_filter_range",
            "required": false,
            "schema": {
              "title": "Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_received_relative_days",
            "required": false,
            "schema": {
              "title": "Date Received Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_received_relative",
            "required": false,
            "schema": {
              "title": "Date Received Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_required_start",
            "required": false,
            "schema": {
              "title": "Date Required Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_required_end",
            "required": false,
            "schema": {
              "title": "Date Required End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_required_filter_range",
            "required": false,
            "schema": {
              "title": "Date Required Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_required_relative_days",
            "required": false,
            "schema": {
              "title": "Date Required Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_required_relative",
            "required": false,
            "schema": {
              "title": "Date Required Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_approved_start",
            "required": false,
            "schema": {
              "title": "Date Approved Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_approved_end",
            "required": false,
            "schema": {
              "title": "Date Approved End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_approved_filter_range",
            "required": false,
            "schema": {
              "title": "Date Approved Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_approved_relative_days",
            "required": false,
            "schema": {
              "title": "Date Approved Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_approved_relative",
            "required": false,
            "schema": {
              "title": "Date Approved Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_completed_start",
            "required": false,
            "schema": {
              "title": "Date Completed Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_completed_end",
            "required": false,
            "schema": {
              "title": "Date Completed End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_completed_filter_range",
            "required": false,
            "schema": {
              "title": "Date Completed Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_completed_relative_days",
            "required": false,
            "schema": {
              "title": "Date Completed Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_completed_relative",
            "required": false,
            "schema": {
              "title": "Date Completed Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_latest_sync_start",
            "required": false,
            "schema": {
              "title": "Cc Latest Sync Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_latest_sync_end",
            "required": false,
            "schema": {
              "title": "Cc Latest Sync End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_latest_sync_filter_range",
            "required": false,
            "schema": {
              "title": "Cc Latest Sync Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_latest_sync_relative_days",
            "required": false,
            "schema": {
              "title": "Cc Latest Sync Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_latest_sync_relative",
            "required": false,
            "schema": {
              "title": "Cc Latest Sync Relative",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "project_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Project Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Test Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_request_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Order Request Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Order Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Test Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Customer Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoicing_notes",
            "required": false,
            "schema": {
              "title": "Invoicing Notes",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "overdue",
            "required": false,
            "schema": {
              "title": "Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "published_to_portal",
            "required": false,
            "schema": {
              "title": "Published To Portal",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "Base64 Encoded Order Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Order Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ORDER"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "customer_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Invoice Additional Field Filters",
            "in": "query",
            "name": "invoice_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Invoice Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "INVOICE"
              },
              "title": "Invoice Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Core Field Filters",
            "in": "query",
            "name": "customer_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Core Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Invoice Core Field Filters",
            "in": "query",
            "name": "invoice_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Invoice Core Field Filters",
              "json_schema_extra": {
                "entity_type": "INVOICE"
              },
              "title": "Invoice Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOrderSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Orders for an Invoice",
        "tags": [
          "INVOICE",
          "ORDER"
        ]
      }
    },
    "/qbench/api/v2/invoices/{invoice_id}/payments": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_invoices_{invoice_id}_payments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "invoice_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPaymentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Payments for an Invoice",
        "tags": [
          "INVOICE",
          "PAYMENT"
        ]
      }
    },
    "/qbench/api/v2/invoices/{invoice_id}/send-email": {
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_invoices_{invoice_id}_send-email",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "invoice_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceEmailSchema.0d0ead6"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceEmailResponseSchema.69d0de0"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "send_invoice_email <POST>",
        "tags": [
          "INVOICE"
        ]
      }
    },
    "/qbench/api/v2/invoices/{invoice_id}/sync": {
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_invoices_{invoice_id}_sync",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "invoice_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "sync_invoices <POST>",
        "tags": [
          "INVOICE"
        ]
      }
    },
    "/qbench/api/v2/labels/{label_id}/{data_type}": {
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_labels_{label_id}_{data_type}",
        "parameters": [
          {
            "description": "Label ID",
            "in": "path",
            "name": "label_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Label Data Type. Possible values include orders, samples, tests, batches, projects, locations",
            "in": "path",
            "name": "data_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateLabelSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "print_labels <POST>",
        "tags": [
          "LABEL"
        ]
      }
    },
    "/qbench/api/v2/location-types": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_location-types",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLocationTypeSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "LOCATION_TYPE"
        ]
      }
    },
    "/qbench/api/v2/location-types/{location_type_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_location-types_{location_type_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "location_type_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleLocationTypeSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "LOCATION_TYPE"
        ]
      }
    },
    "/qbench/api/v2/locations": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_locations",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLocationSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "LOCATION"
        ]
      }
    },
    "/qbench/api/v2/locations/{location_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_locations_{location_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "location_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleLocationSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "LOCATION"
        ]
      }
    },
    "/qbench/api/v2/orders": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_orders",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_requested_start",
            "required": false,
            "schema": {
              "title": "Date Requested Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_requested_end",
            "required": false,
            "schema": {
              "title": "Date Requested End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_requested_filter_range",
            "required": false,
            "schema": {
              "title": "Date Requested Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_requested_relative_days",
            "required": false,
            "schema": {
              "title": "Date Requested Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_requested_relative",
            "required": false,
            "schema": {
              "title": "Date Requested Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_received_start",
            "required": false,
            "schema": {
              "title": "Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_received_end",
            "required": false,
            "schema": {
              "title": "Date Received End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_received_filter_range",
            "required": false,
            "schema": {
              "title": "Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_received_relative_days",
            "required": false,
            "schema": {
              "title": "Date Received Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_received_relative",
            "required": false,
            "schema": {
              "title": "Date Received Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_required_start",
            "required": false,
            "schema": {
              "title": "Date Required Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_required_end",
            "required": false,
            "schema": {
              "title": "Date Required End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_required_filter_range",
            "required": false,
            "schema": {
              "title": "Date Required Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_required_relative_days",
            "required": false,
            "schema": {
              "title": "Date Required Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_required_relative",
            "required": false,
            "schema": {
              "title": "Date Required Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_approved_start",
            "required": false,
            "schema": {
              "title": "Date Approved Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_approved_end",
            "required": false,
            "schema": {
              "title": "Date Approved End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_approved_filter_range",
            "required": false,
            "schema": {
              "title": "Date Approved Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_approved_relative_days",
            "required": false,
            "schema": {
              "title": "Date Approved Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_approved_relative",
            "required": false,
            "schema": {
              "title": "Date Approved Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_completed_start",
            "required": false,
            "schema": {
              "title": "Date Completed Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_completed_end",
            "required": false,
            "schema": {
              "title": "Date Completed End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_completed_filter_range",
            "required": false,
            "schema": {
              "title": "Date Completed Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_completed_relative_days",
            "required": false,
            "schema": {
              "title": "Date Completed Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_completed_relative",
            "required": false,
            "schema": {
              "title": "Date Completed Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_latest_sync_start",
            "required": false,
            "schema": {
              "title": "Cc Latest Sync Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_latest_sync_end",
            "required": false,
            "schema": {
              "title": "Cc Latest Sync End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_latest_sync_filter_range",
            "required": false,
            "schema": {
              "title": "Cc Latest Sync Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_latest_sync_relative_days",
            "required": false,
            "schema": {
              "title": "Cc Latest Sync Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_latest_sync_relative",
            "required": false,
            "schema": {
              "title": "Cc Latest Sync Relative",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "project_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Project Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Test Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_request_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Order Request Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "cc_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Order Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Test Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Customer Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoicing_notes",
            "required": false,
            "schema": {
              "title": "Invoicing Notes",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "overdue",
            "required": false,
            "schema": {
              "title": "Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "published_to_portal",
            "required": false,
            "schema": {
              "title": "Published To Portal",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "Base64 Encoded Order Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Order Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ORDER"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "customer_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Invoice Additional Field Filters",
            "in": "query",
            "name": "invoice_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Invoice Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "INVOICE"
              },
              "title": "Invoice Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Core Field Filters",
            "in": "query",
            "name": "customer_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Core Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Invoice Core Field Filters",
            "in": "query",
            "name": "invoice_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Invoice Core Field Filters",
              "json_schema_extra": {
                "entity_type": "INVOICE"
              },
              "title": "Invoice Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOrderSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "ORDER"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_orders",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseOrderSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "ORDER"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_orders",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseOrderSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "ORDER"
        ]
      }
    },
    "/qbench/api/v2/orders/{order_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_orders_{order_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "ORDER"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_orders_{order_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleOrderSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "ORDER"
        ]
      }
    },
    "/qbench/api/v2/orders/{order_id}/attachments": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_orders_{order_id}_attachments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttachmentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_order_attachments <GET>",
        "tags": [
          "ORDER",
          "ATTACHMENT"
        ]
      }
    },
    "/qbench/api/v2/orders/{order_id}/comments": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_orders_{order_id}_comments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "List of Comment IDs",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "description": "List of Comment IDs",
              "items": {
                "type": "integer"
              },
              "title": "Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCommentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_order_comments <GET>",
        "tags": [
          "ORDER",
          "COMMENT"
        ]
      }
    },
    "/qbench/api/v2/orders/{order_id}/invoices": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_orders_{order_id}_invoices",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Invoice Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Order Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "paid_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Paid Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "payment_term",
            "required": false,
            "schema": {
              "title": "Payment Term",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "external_id",
            "required": false,
            "schema": {
              "title": "External Id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_id",
            "required": false,
            "schema": {
              "title": "Qbd Id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_edit_sequence",
            "required": false,
            "schema": {
              "title": "Qbd Edit Sequence",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "total_amount",
            "required": false,
            "schema": {
              "title": "Total Amount",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "total_amount_2",
            "required": false,
            "schema": {
              "title": "Total Amount 2",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "total_amount_logic",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.InvoiceTotalAmountLogicValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_date_start",
            "required": false,
            "schema": {
              "title": "Invoice Date Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_date_end",
            "required": false,
            "schema": {
              "title": "Invoice Date End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_date_filter_range",
            "required": false,
            "schema": {
              "title": "Invoice Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_date_start",
            "required": false,
            "schema": {
              "title": "Due Date Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_date_end",
            "required": false,
            "schema": {
              "title": "Due Date End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_date_filter_range",
            "required": false,
            "schema": {
              "title": "Due Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "overdue",
            "required": false,
            "schema": {
              "title": "Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Invoice Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Invoice Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "INVOICE"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInvoiceSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Invoices for an Order",
        "tags": [
          "ORDER",
          "INVOICE"
        ]
      }
    },
    "/qbench/api/v2/orders/{order_id}/reports": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_orders_{order_id}_reports",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "emailed",
            "required": false,
            "schema": {
              "title": "Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "public",
            "required": false,
            "schema": {
              "title": "Public",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "report_render_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Report Render Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "report_config_levels",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Report Config Levels",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Test Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListGenReportSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Reports for an Order",
        "tags": [
          "ORDER",
          "REPORT"
        ]
      }
    },
    "/qbench/api/v2/orders/{order_id}/samples": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_orders_{order_id}_samples",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "List of Parent Sample IDs",
            "in": "query",
            "name": "parent_sample_ids",
            "required": false,
            "schema": {
              "description": "List of Parent Sample IDs",
              "items": {
                "type": "integer"
              },
              "title": "Parent Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Inventory Stock IDs",
            "in": "query",
            "name": "inventory_stock_ids",
            "required": false,
            "schema": {
              "description": "List of Inventory Stock IDs",
              "items": {
                "type": "integer"
              },
              "title": "Inventory Stock Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Inventory Item IDs",
            "in": "query",
            "name": "inventory_item_ids",
            "required": false,
            "schema": {
              "description": "List of Inventory Item IDs",
              "items": {
                "type": "integer"
              },
              "title": "Inventory Item Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Customer IDs",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "description": "List of Customer IDs",
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order IDs",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "description": "List of Order IDs",
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Project IDs",
            "in": "query",
            "name": "project_ids",
            "required": false,
            "schema": {
              "description": "List of Project IDs",
              "items": {
                "type": "integer"
              },
              "title": "Project Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Source IDs",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "description": "List of Source IDs",
              "items": {
                "type": "integer"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Accessioning Type IDs",
            "in": "query",
            "name": "accessioning_type_ids",
            "required": false,
            "schema": {
              "description": "List of Accessioning Type IDs",
              "items": {
                "type": "integer"
              },
              "title": "Accessioning Type Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Location IDs",
            "in": "query",
            "name": "location_ids",
            "required": false,
            "schema": {
              "description": "List of Location IDs",
              "items": {
                "type": "integer"
              },
              "title": "Location Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs",
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample IDs",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "description": "List of Sample IDs",
              "items": {
                "type": "string"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample Confident Cannabis IDs",
            "in": "query",
            "name": "cc_ids",
            "required": false,
            "schema": {
              "description": "List of Sample Confident Cannabis IDs",
              "items": {
                "type": "string"
              },
              "title": "Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order Confident Cannabis IDs",
            "in": "query",
            "name": "order_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Order Confident Cannabis IDs",
              "items": {
                "type": "string"
              },
              "title": "Order Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample Tags",
            "in": "query",
            "name": "sample_tags",
            "required": false,
            "schema": {
              "description": "List of Sample Tags",
              "items": {
                "type": "string"
              },
              "title": "Sample Tags",
              "type": "array"
            }
          },
          {
            "description": "Sample tag filter action type",
            "in": "query",
            "name": "sample_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Sample tag filter action type"
            }
          },
          {
            "description": "List of Order Request statuses",
            "in": "query",
            "name": "order_request_statuses",
            "required": false,
            "schema": {
              "description": "List of Order Request statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Request Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Lab IDs",
            "in": "query",
            "name": "lab_ids",
            "required": false,
            "schema": {
              "description": "List of Lab IDs",
              "items": {
                "type": "string"
              },
              "title": "Lab Ids",
              "type": "array"
            }
          },
          {
            "description": "List of METRC UIDs",
            "in": "query",
            "name": "metrc_uids",
            "required": false,
            "schema": {
              "description": "List of METRC UIDs",
              "items": {
                "type": "string"
              },
              "title": "Metrc Uids",
              "type": "array"
            }
          },
          {
            "description": "Only return Linked Samples",
            "in": "query",
            "name": "linked",
            "required": false,
            "schema": {
              "description": "Only return Linked Samples",
              "title": "Linked",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Parent Samples",
            "in": "query",
            "name": "has_sub_sample",
            "required": false,
            "schema": {
              "description": "Only return Parent Samples",
              "title": "Has Sub Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Sub Samples",
            "in": "query",
            "name": "is_sub_sample",
            "required": false,
            "schema": {
              "description": "Only return Sub Samples",
              "title": "Is Sub Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples without an Order",
            "in": "query",
            "name": "no_associated_order",
            "required": false,
            "schema": {
              "description": "Only return Samples without an Order",
              "title": "No Associated Order",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples without a Project",
            "in": "query",
            "name": "no_associated_project",
            "required": false,
            "schema": {
              "description": "Only return Samples without a Project",
              "title": "No Associated Project",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that do not have Sub Samples",
            "in": "query",
            "name": "no_sub_samples",
            "required": false,
            "schema": {
              "description": "Only return Samples that do not have Sub Samples",
              "title": "No Sub Samples",
              "type": "boolean"
            }
          },
          {
            "description": "Only return unique Samples",
            "in": "query",
            "name": "unique_samples_only",
            "required": false,
            "schema": {
              "description": "Only return unique Samples",
              "title": "Unique Samples Only",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have all their Tests completed",
            "in": "query",
            "name": "completed",
            "required": false,
            "schema": {
              "description": "Only return Samples that have all their Tests completed",
              "title": "Completed",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that do not have an associated Batch",
            "in": "query",
            "name": "no_associated_batch",
            "required": false,
            "schema": {
              "description": "Only return Samples that do not have an associated Batch",
              "title": "No Associated Batch",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have been received",
            "in": "query",
            "name": "received",
            "required": false,
            "schema": {
              "description": "Only return Samples that have been received",
              "title": "Received",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have their report published",
            "in": "query",
            "name": "release_report",
            "required": false,
            "schema": {
              "description": "Only return Samples that have their report published",
              "title": "Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have a Report generated",
            "in": "query",
            "name": "report_generated",
            "required": false,
            "schema": {
              "description": "Only return Samples that have a Report generated",
              "title": "Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Field to sort by",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "description": "Field to sort by",
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "Sort by ascending or descending",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.SortOrderValues"
                }
              ],
              "description": "Sort by ascending or descending"
            }
          },
          {
            "description": "Sample Type",
            "in": "query",
            "name": "sample_type",
            "required": false,
            "schema": {
              "description": "Sample Type",
              "title": "Sample Type",
              "type": "string"
            }
          },
          {
            "description": "Sample Description",
            "in": "query",
            "name": "sample_description",
            "required": false,
            "schema": {
              "description": "Sample Description",
              "title": "Sample Description",
              "type": "string"
            }
          },
          {
            "description": "METRC UID",
            "in": "query",
            "name": "metrc_uid",
            "required": false,
            "schema": {
              "description": "METRC UID",
              "title": "Metrc Uid",
              "type": "string"
            }
          },
          {
            "description": "Lab ID",
            "in": "query",
            "name": "lab_id",
            "required": false,
            "schema": {
              "description": "Lab ID",
              "title": "Lab Id",
              "type": "string"
            }
          },
          {
            "description": "Return deleted Samples",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.IncludeDeletedValues"
                }
              ],
              "description": "Return deleted Samples"
            }
          },
          {
            "description": "Base64 Encoded Sample Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Sample Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "SAMPLE"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "customer_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Sample ID lower range",
            "in": "query",
            "name": "sample_id_range_start",
            "required": false,
            "schema": {
              "description": "Sample ID lower range",
              "title": "Sample Id Range Start",
              "type": "string"
            }
          },
          {
            "description": "Sample ID upper range",
            "in": "query",
            "name": "sample_id_range_end",
            "required": false,
            "schema": {
              "description": "Sample ID upper range",
              "title": "Sample Id Range End",
              "type": "string"
            }
          },
          {
            "description": "Samples started filter range",
            "in": "query",
            "name": "samples_started_filter_range",
            "required": false,
            "schema": {
              "description": "Samples started filter range",
              "title": "Samples Started Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection lower range",
            "in": "query",
            "name": "time_of_collection_start",
            "required": false,
            "schema": {
              "description": "Sample's time of collection lower range",
              "title": "Time Of Collection Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection upper range",
            "in": "query",
            "name": "time_of_collection_end",
            "required": false,
            "schema": {
              "description": "Sample's time of collection upper range",
              "title": "Time Of Collection End",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection pre-defined range",
            "in": "query",
            "name": "time_of_collection_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's time of collection pre-defined range",
              "title": "Time Of Collection Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received lower range",
            "in": "query",
            "name": "date_received_start",
            "required": false,
            "schema": {
              "description": "Sample's date received lower range",
              "title": "Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received upper range",
            "in": "query",
            "name": "date_received_end",
            "required": false,
            "schema": {
              "description": "Sample's date received upper range",
              "title": "Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received pre-defined range",
            "in": "query",
            "name": "date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's date received pre-defined range",
              "title": "Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date received lower range",
            "in": "query",
            "name": "order_date_received_start",
            "required": false,
            "schema": {
              "description": "Order's date received lower range",
              "title": "Order Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date received upper range",
            "in": "query",
            "name": "order_date_received_end",
            "required": false,
            "schema": {
              "description": "Order's date received upper range",
              "title": "Order Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Order's date received pre-defined range",
            "in": "query",
            "name": "order_date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date received pre-defined range",
              "title": "Order Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated lower range",
            "in": "query",
            "name": "last_updated_start",
            "required": false,
            "schema": {
              "description": "Sample's last updated lower range",
              "title": "Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated upper range",
            "in": "query",
            "name": "last_updated_end",
            "required": false,
            "schema": {
              "description": "Sample's last updated upper range",
              "title": "Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated pre-defined range",
            "in": "query",
            "name": "last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's last updated pre-defined range",
              "title": "Last Updated Filter Range",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSampleSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Samples for an Order",
        "tags": [
          "ORDER",
          "SAMPLE"
        ]
      }
    },
    "/qbench/api/v2/orders/{order_id}/tests": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_orders_{order_id}_tests",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "Customer ID list",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "description": "Customer ID list",
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "Assay ID list",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "description": "Assay ID list",
              "items": {
                "type": "integer"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "Project ID list for Orders",
            "in": "query",
            "name": "order_project_ids",
            "required": false,
            "schema": {
              "description": "Project ID list for Orders",
              "items": {
                "type": "integer"
              },
              "title": "Order Project Ids",
              "type": "array"
            }
          },
          {
            "description": "Project ID list for Samples",
            "in": "query",
            "name": "sample_project_ids",
            "required": false,
            "schema": {
              "description": "Project ID list for Samples",
              "items": {
                "type": "integer"
              },
              "title": "Sample Project Ids",
              "type": "array"
            }
          },
          {
            "description": "User IDs",
            "in": "query",
            "name": "tech_ids",
            "required": false,
            "schema": {
              "description": "User IDs",
              "items": {
                "type": "integer"
              },
              "title": "Tech Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Source IDs",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "description": "List of Source IDs",
              "items": {
                "type": "integer"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Test IDs",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "description": "List of Test IDs",
              "items": {
                "type": "string"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order IDs",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "description": "List of Order IDs",
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample IDs",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "description": "List of Sample IDs",
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Location IDs",
            "in": "query",
            "name": "location_ids",
            "required": false,
            "schema": {
              "description": "List of Location IDs",
              "items": {
                "type": "integer"
              },
              "title": "Location Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Panel IDs",
            "in": "query",
            "name": "panel_ids",
            "required": false,
            "schema": {
              "description": "List of Panel IDs",
              "items": {
                "type": "integer"
              },
              "title": "Panel Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Assay Condition IDs",
            "in": "query",
            "name": "assay_condition_ids",
            "required": false,
            "schema": {
              "description": "List of Assay Condition IDs",
              "items": {
                "type": "integer"
              },
              "title": "Assay Condition Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs",
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Accessioning Types for Samples",
            "in": "query",
            "name": "sample_accessioning_type_ids",
            "required": false,
            "schema": {
              "description": "List of Accessioning Types for Samples",
              "items": {
                "type": "integer"
              },
              "title": "Sample Accessioning Type Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs for a Sample",
            "in": "query",
            "name": "sample_batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs for a Sample",
              "items": {
                "type": "integer"
              },
              "title": "Sample Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Team IDs",
            "in": "query",
            "name": "team_ids",
            "required": false,
            "schema": {
              "description": "List of Team IDs",
              "items": {
                "type": "integer"
              },
              "title": "Team Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Deviation IDs",
            "in": "query",
            "name": "deviation_ids",
            "required": false,
            "schema": {
              "description": "List of Deviation IDs",
              "items": {
                "type": "integer"
              },
              "title": "Deviation Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Turnaround IDs",
            "in": "query",
            "name": "turnaround_ids",
            "required": false,
            "schema": {
              "description": "List of Turnaround IDs",
              "items": {
                "type": "integer"
              },
              "title": "Turnaround Ids",
              "type": "array"
            }
          },
          {
            "description": "List of tags for an Order",
            "in": "query",
            "name": "order_tags",
            "required": false,
            "schema": {
              "description": "List of tags for an Order",
              "items": {
                "type": "integer"
              },
              "title": "Order Tags",
              "type": "array"
            }
          },
          {
            "description": "Order tags filter action type",
            "in": "query",
            "name": "order_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Order tags filter action type"
            }
          },
          {
            "description": "List of tags for a Sample",
            "in": "query",
            "name": "sample_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Sample",
              "items": {
                "type": "string"
              },
              "title": "Sample Tags",
              "type": "array"
            }
          },
          {
            "description": "Sample tags filter action type",
            "in": "query",
            "name": "sample_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Sample tags filter action type"
            }
          },
          {
            "description": "List of tags for a Test",
            "in": "query",
            "name": "test_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Test",
              "items": {
                "type": "string"
              },
              "title": "Test Tags",
              "type": "array"
            }
          },
          {
            "description": "Test tags filter action type",
            "in": "query",
            "name": "test_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Test tags filter action type"
            }
          },
          {
            "description": "List of tags for a Customer",
            "in": "query",
            "name": "customer_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Customer",
              "items": {
                "type": "string"
              },
              "title": "Customer Tags",
              "type": "array"
            }
          },
          {
            "description": "Customer tags filter action type",
            "in": "query",
            "name": "customer_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Customer tags filter action type"
            }
          },
          {
            "description": "List of Test statuses",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "description": "List of Test statuses",
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Order statuses",
            "in": "query",
            "name": "order_statuses",
            "required": false,
            "schema": {
              "description": "List of Order statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Order Request statuses",
            "in": "query",
            "name": "order_request_statuses",
            "required": false,
            "schema": {
              "description": "List of Order Request statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Request Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Confident Cannabis IDs for Samples",
            "in": "query",
            "name": "sample_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Confident Cannabis IDs for Samples",
              "items": {
                "type": "string"
              },
              "title": "Sample Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Confident Cannabis IDs for Orders",
            "in": "query",
            "name": "order_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Confident Cannabis IDs for Orders",
              "items": {
                "type": "string"
              },
              "title": "Order Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "Sort by a field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "description": "Sort by a field",
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "Sort by ascending or descending",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.SortOrderValues"
                }
              ],
              "description": "Sort by ascending or descending"
            }
          },
          {
            "description": "Description of a Sample",
            "in": "query",
            "name": "sample_description",
            "required": false,
            "schema": {
              "description": "Description of a Sample",
              "title": "Sample Description",
              "type": "string"
            }
          },
          {
            "description": "Test results",
            "in": "query",
            "name": "results",
            "required": false,
            "schema": {
              "description": "Test results",
              "title": "Results",
              "type": "string"
            }
          },
          {
            "description": "Test results filter action type",
            "in": "query",
            "name": "results_action_option",
            "required": false,
            "schema": {
              "description": "Test results filter action type",
              "title": "Results Action Option",
              "type": "string"
            }
          },
          {
            "description": "Test results filter upper range number",
            "in": "query",
            "name": "results_range_upper",
            "required": false,
            "schema": {
              "description": "Test results filter upper range number",
              "title": "Results Range Upper",
              "type": "string"
            }
          },
          {
            "description": "Test results filter lower range number",
            "in": "query",
            "name": "results_range_lower",
            "required": false,
            "schema": {
              "description": "Test results filter lower range number",
              "title": "Results Range Lower",
              "type": "string"
            }
          },
          {
            "description": "Assay Condition filter action type",
            "in": "query",
            "name": "assay_conditions_action",
            "required": false,
            "schema": {
              "description": "Assay Condition filter action type",
              "title": "Assay Conditions Action",
              "type": "string"
            }
          },
          {
            "description": "Result tags",
            "in": "query",
            "name": "results_tags",
            "required": false,
            "schema": {
              "description": "Result tags",
              "title": "Results Tags",
              "type": "string"
            }
          },
          {
            "description": "Tags filter action type",
            "in": "query",
            "name": "tags_filter_action",
            "required": false,
            "schema": {
              "description": "Tags filter action type",
              "title": "Tags Filter Action",
              "type": "string"
            }
          },
          {
            "description": "Boolean whether or not to do an AND or an OR query when both Assay IDs and Panel IDs are filtered",
            "in": "query",
            "name": "panel_assay_and_query",
            "required": false,
            "schema": {
              "description": "Boolean whether or not to do an AND or an OR query when both Assay IDs and Panel IDs are filtered",
              "title": "Panel Assay And Query",
              "type": "string"
            }
          },
          {
            "description": "Sample ID filter lower range",
            "in": "query",
            "name": "sample_id_range_start",
            "required": false,
            "schema": {
              "description": "Sample ID filter lower range",
              "title": "Sample Id Range Start",
              "type": "string"
            }
          },
          {
            "description": "Sample ID filter upper range",
            "in": "query",
            "name": "sample_id_range_end",
            "required": false,
            "schema": {
              "description": "Sample ID filter upper range",
              "title": "Sample Id Range End",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Order Additional Field Filters",
            "in": "query",
            "name": "order_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Order Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ORDER"
              },
              "title": "Order Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Sample Additional Field Filters",
            "in": "query",
            "name": "sample_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Sample Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "SAMPLE"
              },
              "title": "Sample Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Test Additional Field Filters",
            "in": "query",
            "name": "test_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Test Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "TEST"
              },
              "title": "Test Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Assay Additional Field Filters",
            "in": "query",
            "name": "assay_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Assay Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ASSAY"
              },
              "title": "Assay Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Batch Additional Field Filters",
            "in": "query",
            "name": "batch_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Batch Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "customer_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Core Field Filters",
            "in": "query",
            "name": "customer_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Core Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Assay Core Field Filters",
            "in": "query",
            "name": "assay_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Assay Core Field Filters",
              "json_schema_extra": {
                "entity_type": "ASSAY"
              },
              "title": "Assay Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Batch Core Field Filters",
            "in": "query",
            "name": "batch_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Core Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Batch Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Boolean to include normal Orders when filtering by Order Request Status",
            "in": "query",
            "name": "include_orders",
            "required": false,
            "schema": {
              "description": "Boolean to include normal Orders when filtering by Order Request Status",
              "title": "Include Orders",
              "type": "boolean"
            }
          },
          {
            "description": "Return Tests where its Sample does not have a Batch associated",
            "in": "query",
            "name": "no_associated_batch_sample",
            "required": false,
            "schema": {
              "description": "Return Tests where its Sample does not have a Batch associated",
              "title": "No Associated Batch Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Return Tests that do not have a Batch associated",
            "in": "query",
            "name": "no_associated_batch_test",
            "required": false,
            "schema": {
              "description": "Return Tests that do not have a Batch associated",
              "title": "No Associated Batch Test",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to include Tests without priority when filtering by Priority",
            "in": "query",
            "name": "include_tests_without_priority",
            "required": false,
            "schema": {
              "description": "Boolean to include Tests without priority when filtering by Priority",
              "title": "Include Tests Without Priority",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have a Batch associated",
            "in": "query",
            "name": "samples_batched",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have a Batch associated",
              "title": "Samples Batched",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have a Report generated",
            "in": "query",
            "name": "order_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have a Report generated",
              "title": "Order Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have a Report generated",
            "in": "query",
            "name": "sample_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have a Report generated",
              "title": "Sample Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have a Report generated",
            "in": "query",
            "name": "test_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have a Report generated",
              "title": "Test Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have their report published",
            "in": "query",
            "name": "order_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have their report published",
              "title": "Order Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have their Report published",
            "in": "query",
            "name": "sample_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have their Report published",
              "title": "Sample Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their Report published",
            "in": "query",
            "name": "test_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their Report published",
              "title": "Test Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their results released",
            "in": "query",
            "name": "test_release_results",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their results released",
              "title": "Test Release Results",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their Report emailed",
            "in": "query",
            "name": "test_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their Report emailed",
              "title": "Test Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have their Report emailed",
            "in": "query",
            "name": "sample_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have their Report emailed",
              "title": "Sample Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have their Report emailed",
            "in": "query",
            "name": "order_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have their Report emailed",
              "title": "Order Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests without a Team assigned",
            "in": "query",
            "name": "include_tests_without_team",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests without a Team assigned",
              "title": "Include Tests Without Team",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Parent Samples",
            "in": "query",
            "name": "parent_sample_only",
            "required": false,
            "schema": {
              "description": "Boolean to only include Parent Samples",
              "title": "Parent Sample Only",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are the current priority",
            "in": "query",
            "name": "priority_current",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are the current priority",
              "title": "Priority Current",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Sub-Smaples",
            "in": "query",
            "name": "sub_sample_only",
            "required": false,
            "schema": {
              "description": "Boolean to only include Sub-Smaples",
              "title": "Sub Sample Only",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only included Tests that have been emailed",
            "in": "query",
            "name": "emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only included Tests that have been emailed",
              "title": "Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are unlocked",
            "in": "query",
            "name": "unlocked",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are unlocked",
              "title": "Unlocked",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to include deleted Tests",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.IncludeDeletedValues"
                }
              ],
              "description": "Boolean to include deleted Tests"
            }
          },
          {
            "description": "Boolean to filter by Tests overdue",
            "in": "query",
            "name": "overdue",
            "required": false,
            "schema": {
              "description": "Boolean to filter by Tests overdue",
              "title": "Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have been received",
            "in": "query",
            "name": "samples_received",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have been received",
              "title": "Samples Received",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include completed Samples",
            "in": "query",
            "name": "sample_complete",
            "required": false,
            "schema": {
              "description": "Boolean to only include completed Samples",
              "title": "Sample Complete",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that are overdue",
            "in": "query",
            "name": "order_overdue",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that are overdue",
              "title": "Order Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are assigned to the current user",
            "in": "query",
            "name": "assigned_to_current_user",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are assigned to the current user",
              "title": "Assigned To Current User",
              "type": "boolean"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp lower range",
            "in": "query",
            "name": "last_updated_start",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp lower range",
              "title": "Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp upper range",
            "in": "query",
            "name": "last_updated_end",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp upper range",
              "title": "Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp pre-defined range",
            "in": "query",
            "name": "last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp pre-defined range",
              "title": "Last Updated Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp relative range",
            "in": "query",
            "name": "last_updated_relative_days",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp relative range",
              "title": "Last Updated Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp relative filter type",
            "in": "query",
            "name": "last_updated_relative",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp relative filter type",
              "title": "Last Updated Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp lower range",
            "in": "query",
            "name": "sample_last_updated_start",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp lower range",
              "title": "Sample Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp upper range",
            "in": "query",
            "name": "sample_last_updated_end",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp upper range",
              "title": "Sample Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp pre-defined range's last updated timestamp pre-defined range",
            "in": "query",
            "name": "sample_last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp pre-defined range's last updated timestamp pre-defined range",
              "title": "Sample Last Updated Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp relative range",
            "in": "query",
            "name": "sample_last_updated_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp relative range",
              "title": "Sample Last Updated Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp relative filter type",
            "in": "query",
            "name": "sample_last_updated_relative",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp relative filter type",
              "title": "Sample Last Updated Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection lower range",
            "in": "query",
            "name": "sample_time_of_collection_start",
            "required": false,
            "schema": {
              "description": "Sample's time of collection lower range",
              "title": "Sample Time Of Collection Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection upper range",
            "in": "query",
            "name": "sample_time_of_collection_end",
            "required": false,
            "schema": {
              "description": "Sample's time of collection upper range",
              "title": "Sample Time Of Collection End",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection pre-defined range",
            "in": "query",
            "name": "sample_time_of_collection_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's time of collection pre-defined range",
              "title": "Sample Time Of Collection Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection relative range",
            "in": "query",
            "name": "sample_time_of_collection_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's time of collection relative range",
              "title": "Sample Time Of Collection Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection relative filter type",
            "in": "query",
            "name": "sample_time_of_collection_relative",
            "required": false,
            "schema": {
              "description": "Sample's time of collection relative filter type",
              "title": "Sample Time Of Collection Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date received lower range",
            "in": "query",
            "name": "date_received_start",
            "required": false,
            "schema": {
              "description": "Order's date received lower range",
              "title": "Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date received upper range",
            "in": "query",
            "name": "date_received_end",
            "required": false,
            "schema": {
              "description": "Order's date received upper range",
              "title": "Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Order's date received pre-defined range",
            "in": "query",
            "name": "date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date received pre-defined range",
              "title": "Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date received relative range",
            "in": "query",
            "name": "date_received_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date received relative range",
              "title": "Date Received Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date received relative filter type",
            "in": "query",
            "name": "date_received_relative",
            "required": false,
            "schema": {
              "description": "Order's date received relative filter type",
              "title": "Date Received Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received lower range",
            "in": "query",
            "name": "sample_date_received_start",
            "required": false,
            "schema": {
              "description": "Sample's date received lower range",
              "title": "Sample Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received upper range",
            "in": "query",
            "name": "sample_date_received_end",
            "required": false,
            "schema": {
              "description": "Sample's date received upper range",
              "title": "Sample Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received pre-defined range",
            "in": "query",
            "name": "sample_date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's date received pre-defined range",
              "title": "Sample Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received relative range",
            "in": "query",
            "name": "sample_date_received_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's date received relative range",
              "title": "Sample Date Received Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received relative filter type",
            "in": "query",
            "name": "sample_date_received_relative",
            "required": false,
            "schema": {
              "description": "Sample's date received relative filter type",
              "title": "Sample Date Received Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's date created lower range",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "description": "Test's date created lower range",
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "Test's date created upper range",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "description": "Test's date created upper range",
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "Test's date created pre-defined range",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "description": "Test's date created pre-defined range",
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's date created relative range",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "description": "Test's date created relative range",
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's date created relative filter type",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "description": "Test's date created relative filter type",
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's due date lower range",
            "in": "query",
            "name": "date_required_start",
            "required": false,
            "schema": {
              "description": "Order's due date lower range",
              "title": "Date Required Start",
              "type": "string"
            }
          },
          {
            "description": "Order's due date upper range",
            "in": "query",
            "name": "date_required_end",
            "required": false,
            "schema": {
              "description": "Order's due date upper range",
              "title": "Date Required End",
              "type": "string"
            }
          },
          {
            "description": "Order's due date pre-defined range",
            "in": "query",
            "name": "date_required_filter_range",
            "required": false,
            "schema": {
              "description": "Order's due date pre-defined range",
              "title": "Date Required Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's due date relative range",
            "in": "query",
            "name": "date_required_relative_days",
            "required": false,
            "schema": {
              "description": "Order's due date relative range",
              "title": "Date Required Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's due date relative filter type",
            "in": "query",
            "name": "date_required_relative",
            "required": false,
            "schema": {
              "description": "Order's due date relative filter type",
              "title": "Date Required Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved lower range",
            "in": "query",
            "name": "date_approved_start",
            "required": false,
            "schema": {
              "description": "Order's date approved lower range",
              "title": "Date Approved Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved upper range",
            "in": "query",
            "name": "date_approved_end",
            "required": false,
            "schema": {
              "description": "Order's date approved upper range",
              "title": "Date Approved End",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved pre-defined range",
            "in": "query",
            "name": "date_approved_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date approved pre-defined range",
              "title": "Date Approved Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved relative range",
            "in": "query",
            "name": "date_approved_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date approved relative range",
              "title": "Date Approved Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved relative filter type",
            "in": "query",
            "name": "date_approved_relative",
            "required": false,
            "schema": {
              "description": "Order's date approved relative filter type",
              "title": "Date Approved Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed lower range",
            "in": "query",
            "name": "order_date_completed_start",
            "required": false,
            "schema": {
              "description": "Order's date completed lower range",
              "title": "Order Date Completed Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed upper range",
            "in": "query",
            "name": "order_date_completed_end",
            "required": false,
            "schema": {
              "description": "Order's date completed upper range",
              "title": "Order Date Completed End",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed pre-defined range",
            "in": "query",
            "name": "order_date_completed_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date completed pre-defined range",
              "title": "Order Date Completed Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed relative range",
            "in": "query",
            "name": "order_date_completed_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date completed relative range",
              "title": "Order Date Completed Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed relative filter type",
            "in": "query",
            "name": "order_date_completed_relative",
            "required": false,
            "schema": {
              "description": "Order's date completed relative filter type",
              "title": "Order Date Completed Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date lower range",
            "in": "query",
            "name": "estimated_start_date_start",
            "required": false,
            "schema": {
              "description": "Test's estimated start date lower range",
              "title": "Estimated Start Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date upper range",
            "in": "query",
            "name": "estimated_start_date_end",
            "required": false,
            "schema": {
              "description": "Test's estimated start date upper range",
              "title": "Estimated Start Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date pre-defined range",
            "in": "query",
            "name": "estimated_start_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's estimated start date pre-defined range",
              "title": "Estimated Start Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date relative range",
            "in": "query",
            "name": "estimated_start_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's estimated start date relative range",
              "title": "Estimated Start Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date relative filter type",
            "in": "query",
            "name": "estimated_start_date_relative",
            "required": false,
            "schema": {
              "description": "Test's estimated start date relative filter type",
              "title": "Estimated Start Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date lower range",
            "in": "query",
            "name": "estimated_complete_date_start",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date lower range",
              "title": "Estimated Complete Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date upper range",
            "in": "query",
            "name": "estimated_complete_date_end",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date upper range",
              "title": "Estimated Complete Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date pre-defined range",
            "in": "query",
            "name": "estimated_complete_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date pre-defined range",
              "title": "Estimated Complete Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date relative range",
            "in": "query",
            "name": "estimated_complete_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date relative range",
              "title": "Estimated Complete Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date relative filter type",
            "in": "query",
            "name": "estimated_complete_date_relative",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date relative filter type",
              "title": "Estimated Complete Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's start date lower range",
            "in": "query",
            "name": "start_date_start",
            "required": false,
            "schema": {
              "description": "Test's start date lower range",
              "title": "Start Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's start date upper range",
            "in": "query",
            "name": "start_date_end",
            "required": false,
            "schema": {
              "description": "Test's start date upper range",
              "title": "Start Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's start date pre-defined range",
            "in": "query",
            "name": "start_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's start date pre-defined range",
              "title": "Start Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's start date relative range",
            "in": "query",
            "name": "start_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's start date relative range",
              "title": "Start Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's start date relative filter type",
            "in": "query",
            "name": "start_date_relative",
            "required": false,
            "schema": {
              "description": "Test's start date relative filter type",
              "title": "Start Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date lower range",
            "in": "query",
            "name": "complete_date_start",
            "required": false,
            "schema": {
              "description": "Test's complete date lower range",
              "title": "Complete Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date upper range",
            "in": "query",
            "name": "complete_date_end",
            "required": false,
            "schema": {
              "description": "Test's complete date upper range",
              "title": "Complete Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date pre-defined range",
            "in": "query",
            "name": "complete_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's complete date pre-defined range",
              "title": "Complete Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date relative range",
            "in": "query",
            "name": "complete_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's complete date relative range",
              "title": "Complete Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date relative filter type",
            "in": "query",
            "name": "complete_date_relative",
            "required": false,
            "schema": {
              "description": "Test's complete date relative filter type",
              "title": "Complete Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested lower range",
            "in": "query",
            "name": "order_date_requested_start",
            "required": false,
            "schema": {
              "description": "Order's date requested lower range",
              "title": "Order Date Requested Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested upper range",
            "in": "query",
            "name": "order_date_requested_end",
            "required": false,
            "schema": {
              "description": "Order's date requested upper range",
              "title": "Order Date Requested End",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested pre-defined range",
            "in": "query",
            "name": "order_date_requested_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date requested pre-defined range",
              "title": "Order Date Requested Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested relative range",
            "in": "query",
            "name": "order_date_requested_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date requested relative range",
              "title": "Order Date Requested Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested relative filter type",
            "in": "query",
            "name": "order_date_requested_relative",
            "required": false,
            "schema": {
              "description": "Order's date requested relative filter type",
              "title": "Order Date Requested Relative",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTestSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Tests for an Order",
        "tags": [
          "ORDER",
          "TEST"
        ]
      }
    },
    "/qbench/api/v2/panels": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_panels",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "title_keyword",
            "required": false,
            "schema": {
              "title": "Title Keyword",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_id",
            "required": false,
            "schema": {
              "title": "Qbd Id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_edit_sequence",
            "required": false,
            "schema": {
              "title": "Qbd Edit Sequence",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PanelFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PanelFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "Base64 Encoded Panel Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Panel Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "PANEL"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Return the panels whose related invoices were updated after this unix timestamp",
            "in": "query",
            "name": "invoice_last_updated",
            "required": false,
            "schema": {
              "description": "Return the panels whose related invoices were updated after this unix timestamp",
              "title": "Invoice Last Updated",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPanelSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "PANEL"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_panels",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePanelSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponsePanelSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "PANEL"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_panels",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePanelSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponsePanelSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "PANEL"
        ]
      }
    },
    "/qbench/api/v2/panels/{panel_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_panels_{panel_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "panel_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "PANEL"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_panels_{panel_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "panel_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SinglePanelSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "PANEL"
        ]
      }
    },
    "/qbench/api/v2/panels/{panel_id}/assays": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_panels_{panel_id}_assays",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "panel_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tech_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Tech Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "team_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Team Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "category_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Category Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "worksheet_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Worksheet Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AssayFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_edit_sequence",
            "required": false,
            "schema": {
              "title": "Qbd Edit Sequence",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_id",
            "required": false,
            "schema": {
              "title": "Qbd Id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "title_keyword",
            "required": false,
            "schema": {
              "title": "Title Keyword",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AssayFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "active",
            "required": false,
            "schema": {
              "title": "Active",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Assay Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Assay Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ASSAY"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AssayFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Return the assays whose related invoices were updated after this unix timestamp",
            "in": "query",
            "name": "invoice_last_updated",
            "required": false,
            "schema": {
              "description": "Return the assays whose related invoices were updated after this unix timestamp",
              "title": "Invoice Last Updated",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssaySchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Assays for a Panel",
        "tags": [
          "ASSAY",
          "PANEL"
        ]
      }
    },
    "/qbench/api/v2/payments": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_payments",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPaymentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "PAYMENT"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_payments",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponsePaymentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "PAYMENT"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_payments",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponsePaymentSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "PAYMENT"
        ]
      }
    },
    "/qbench/api/v2/payments/{payment_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_payments_{payment_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "payment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "PAYMENT"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_payments_{payment_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "payment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SinglePaymentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "PAYMENT"
        ]
      }
    },
    "/qbench/api/v2/payments/{payment_id}/invoices": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_payments_{payment_id}_invoices",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "payment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Invoice Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Order Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "paid_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Paid Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "not_integration_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Not Integration Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "payment_term",
            "required": false,
            "schema": {
              "title": "Payment Term",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "external_id",
            "required": false,
            "schema": {
              "title": "External Id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_id",
            "required": false,
            "schema": {
              "title": "Qbd Id",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "qbd_edit_sequence",
            "required": false,
            "schema": {
              "title": "Qbd Edit Sequence",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "total_amount",
            "required": false,
            "schema": {
              "title": "Total Amount",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "total_amount_2",
            "required": false,
            "schema": {
              "title": "Total Amount 2",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "total_amount_logic",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.InvoiceTotalAmountLogicValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_date_start",
            "required": false,
            "schema": {
              "title": "Invoice Date Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_date_end",
            "required": false,
            "schema": {
              "title": "Invoice Date End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "invoice_date_filter_range",
            "required": false,
            "schema": {
              "title": "Invoice Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_date_start",
            "required": false,
            "schema": {
              "title": "Due Date Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_date_end",
            "required": false,
            "schema": {
              "title": "Due Date End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "due_date_filter_range",
            "required": false,
            "schema": {
              "title": "Due Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "overdue",
            "required": false,
            "schema": {
              "title": "Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Invoice Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Invoice Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "INVOICE"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InvoiceFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInvoiceSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Invoices for a Payment",
        "tags": [
          "PAYMENT",
          "INVOICE"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_payments_{payment_id}_invoices",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "payment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentUpdateSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update_invoice_payments <PATCH>",
        "tags": [
          "PAYMENT",
          "INVOICE"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_payments_{payment_id}_invoices",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "payment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyPaymentToInvoiceSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "apply_payment <POST>",
        "tags": [
          "PAYMENT",
          "INVOICE"
        ]
      }
    },
    "/qbench/api/v2/payments/{payment_id}/invoices/{invoice_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_payments_{payment_id}_invoices_{invoice_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "payment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "invoice_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "unapply_payment <DELETE>",
        "tags": [
          "PAYMENT",
          "INVOICE"
        ]
      }
    },
    "/qbench/api/v2/payments/{payment_id}/send-email": {
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_payments_{payment_id}_send-email",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "payment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPaymentEmailSchema.0d0ead6"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "send_payment_email <POST>",
        "tags": [
          "PAYMENT",
          "INVOICE"
        ]
      }
    },
    "/qbench/api/v2/printdocs": {
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_printdocs",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePrintDocSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponsePrintDocSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "PRINTDOC"
        ]
      }
    },
    "/qbench/api/v2/printdocs/{printdoc_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_printdocs_{printdoc_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "printdoc_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SinglePrintDocSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "PRINTDOC"
        ]
      }
    },
    "/qbench/api/v2/projects": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_projects",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListProjectSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "PROJECT"
        ]
      }
    },
    "/qbench/api/v2/projects/{project_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_projects_{project_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "project_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleProjectSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "PROJECT"
        ]
      }
    },
    "/qbench/api/v2/quotations": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_quotations",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "quotation_date_start",
            "required": false,
            "schema": {
              "title": "Quotation Date Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "quotation_date_end",
            "required": false,
            "schema": {
              "title": "Quotation Date End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "quotation_date_filter_range",
            "required": false,
            "schema": {
              "title": "Quotation Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "quotation_date_relative_days",
            "required": false,
            "schema": {
              "title": "Quotation Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "quotation_date_relative",
            "required": false,
            "schema": {
              "title": "Quotation Date Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "expiration_date_start",
            "required": false,
            "schema": {
              "title": "Expiration Date Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "expiration_date_end",
            "required": false,
            "schema": {
              "title": "Expiration Date End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "expiration_date_filter_range",
            "required": false,
            "schema": {
              "title": "Expiration Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "expiration_date_relative_days",
            "required": false,
            "schema": {
              "title": "Expiration Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "expiration_date_relative",
            "required": false,
            "schema": {
              "title": "Expiration Date Relative",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_emailed_start",
            "required": false,
            "schema": {
              "title": "Date Emailed Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_emailed_end",
            "required": false,
            "schema": {
              "title": "Date Emailed End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_emailed_filter_range",
            "required": false,
            "schema": {
              "title": "Date Emailed Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_emailed_relative_days",
            "required": false,
            "schema": {
              "title": "Date Emailed Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_emailed_relative",
            "required": false,
            "schema": {
              "title": "Date Emailed Relative",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListQuotationSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "QUOTATION"
        ]
      }
    },
    "/qbench/api/v2/quotations/{quotation_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_quotations_{quotation_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "quotation_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleQuotationSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "QUOTATION"
        ]
      }
    },
    "/qbench/api/v2/reports": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_reports",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "emailed",
            "required": false,
            "schema": {
              "title": "Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "public",
            "required": false,
            "schema": {
              "title": "Public",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "report_render_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Report Render Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "report_config_levels",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Report Config Levels",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Test Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListGenReportSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "REPORT"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_reports",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGenReportSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseGenReportSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "REPORT"
        ]
      }
    },
    "/qbench/api/v2/reports/publish": {
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_reports_publish",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenReportPublishSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "publish_order_report <POST>",
        "tags": [
          "REPORT"
        ]
      }
    },
    "/qbench/api/v2/reports/{report_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_reports_{report_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "report_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleGenReportSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "REPORT"
        ]
      }
    },
    "/qbench/api/v2/samples": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_samples",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "List of Parent Sample IDs",
            "in": "query",
            "name": "parent_sample_ids",
            "required": false,
            "schema": {
              "description": "List of Parent Sample IDs",
              "items": {
                "type": "integer"
              },
              "title": "Parent Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Inventory Stock IDs",
            "in": "query",
            "name": "inventory_stock_ids",
            "required": false,
            "schema": {
              "description": "List of Inventory Stock IDs",
              "items": {
                "type": "integer"
              },
              "title": "Inventory Stock Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Inventory Item IDs",
            "in": "query",
            "name": "inventory_item_ids",
            "required": false,
            "schema": {
              "description": "List of Inventory Item IDs",
              "items": {
                "type": "integer"
              },
              "title": "Inventory Item Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Customer IDs",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "description": "List of Customer IDs",
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order IDs",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "description": "List of Order IDs",
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Project IDs",
            "in": "query",
            "name": "project_ids",
            "required": false,
            "schema": {
              "description": "List of Project IDs",
              "items": {
                "type": "integer"
              },
              "title": "Project Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Source IDs",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "description": "List of Source IDs",
              "items": {
                "type": "integer"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Accessioning Type IDs",
            "in": "query",
            "name": "accessioning_type_ids",
            "required": false,
            "schema": {
              "description": "List of Accessioning Type IDs",
              "items": {
                "type": "integer"
              },
              "title": "Accessioning Type Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Location IDs",
            "in": "query",
            "name": "location_ids",
            "required": false,
            "schema": {
              "description": "List of Location IDs",
              "items": {
                "type": "integer"
              },
              "title": "Location Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs",
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample IDs",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "description": "List of Sample IDs",
              "items": {
                "type": "string"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample Confident Cannabis IDs",
            "in": "query",
            "name": "cc_ids",
            "required": false,
            "schema": {
              "description": "List of Sample Confident Cannabis IDs",
              "items": {
                "type": "string"
              },
              "title": "Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order Confident Cannabis IDs",
            "in": "query",
            "name": "order_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Order Confident Cannabis IDs",
              "items": {
                "type": "string"
              },
              "title": "Order Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample Tags",
            "in": "query",
            "name": "sample_tags",
            "required": false,
            "schema": {
              "description": "List of Sample Tags",
              "items": {
                "type": "string"
              },
              "title": "Sample Tags",
              "type": "array"
            }
          },
          {
            "description": "Sample tag filter action type",
            "in": "query",
            "name": "sample_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Sample tag filter action type"
            }
          },
          {
            "description": "List of Order Request statuses",
            "in": "query",
            "name": "order_request_statuses",
            "required": false,
            "schema": {
              "description": "List of Order Request statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Request Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Lab IDs",
            "in": "query",
            "name": "lab_ids",
            "required": false,
            "schema": {
              "description": "List of Lab IDs",
              "items": {
                "type": "string"
              },
              "title": "Lab Ids",
              "type": "array"
            }
          },
          {
            "description": "List of METRC UIDs",
            "in": "query",
            "name": "metrc_uids",
            "required": false,
            "schema": {
              "description": "List of METRC UIDs",
              "items": {
                "type": "string"
              },
              "title": "Metrc Uids",
              "type": "array"
            }
          },
          {
            "description": "Only return Linked Samples",
            "in": "query",
            "name": "linked",
            "required": false,
            "schema": {
              "description": "Only return Linked Samples",
              "title": "Linked",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Parent Samples",
            "in": "query",
            "name": "has_sub_sample",
            "required": false,
            "schema": {
              "description": "Only return Parent Samples",
              "title": "Has Sub Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Sub Samples",
            "in": "query",
            "name": "is_sub_sample",
            "required": false,
            "schema": {
              "description": "Only return Sub Samples",
              "title": "Is Sub Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples without an Order",
            "in": "query",
            "name": "no_associated_order",
            "required": false,
            "schema": {
              "description": "Only return Samples without an Order",
              "title": "No Associated Order",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples without a Project",
            "in": "query",
            "name": "no_associated_project",
            "required": false,
            "schema": {
              "description": "Only return Samples without a Project",
              "title": "No Associated Project",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that do not have Sub Samples",
            "in": "query",
            "name": "no_sub_samples",
            "required": false,
            "schema": {
              "description": "Only return Samples that do not have Sub Samples",
              "title": "No Sub Samples",
              "type": "boolean"
            }
          },
          {
            "description": "Only return unique Samples",
            "in": "query",
            "name": "unique_samples_only",
            "required": false,
            "schema": {
              "description": "Only return unique Samples",
              "title": "Unique Samples Only",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have all their Tests completed",
            "in": "query",
            "name": "completed",
            "required": false,
            "schema": {
              "description": "Only return Samples that have all their Tests completed",
              "title": "Completed",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that do not have an associated Batch",
            "in": "query",
            "name": "no_associated_batch",
            "required": false,
            "schema": {
              "description": "Only return Samples that do not have an associated Batch",
              "title": "No Associated Batch",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have been received",
            "in": "query",
            "name": "received",
            "required": false,
            "schema": {
              "description": "Only return Samples that have been received",
              "title": "Received",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have their report published",
            "in": "query",
            "name": "release_report",
            "required": false,
            "schema": {
              "description": "Only return Samples that have their report published",
              "title": "Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have a Report generated",
            "in": "query",
            "name": "report_generated",
            "required": false,
            "schema": {
              "description": "Only return Samples that have a Report generated",
              "title": "Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Field to sort by",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "description": "Field to sort by",
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "Sort by ascending or descending",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.SortOrderValues"
                }
              ],
              "description": "Sort by ascending or descending"
            }
          },
          {
            "description": "Sample Type",
            "in": "query",
            "name": "sample_type",
            "required": false,
            "schema": {
              "description": "Sample Type",
              "title": "Sample Type",
              "type": "string"
            }
          },
          {
            "description": "Sample Description",
            "in": "query",
            "name": "sample_description",
            "required": false,
            "schema": {
              "description": "Sample Description",
              "title": "Sample Description",
              "type": "string"
            }
          },
          {
            "description": "METRC UID",
            "in": "query",
            "name": "metrc_uid",
            "required": false,
            "schema": {
              "description": "METRC UID",
              "title": "Metrc Uid",
              "type": "string"
            }
          },
          {
            "description": "Lab ID",
            "in": "query",
            "name": "lab_id",
            "required": false,
            "schema": {
              "description": "Lab ID",
              "title": "Lab Id",
              "type": "string"
            }
          },
          {
            "description": "Return deleted Samples",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.IncludeDeletedValues"
                }
              ],
              "description": "Return deleted Samples"
            }
          },
          {
            "description": "Base64 Encoded Sample Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Sample Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "SAMPLE"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "customer_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Sample ID lower range",
            "in": "query",
            "name": "sample_id_range_start",
            "required": false,
            "schema": {
              "description": "Sample ID lower range",
              "title": "Sample Id Range Start",
              "type": "string"
            }
          },
          {
            "description": "Sample ID upper range",
            "in": "query",
            "name": "sample_id_range_end",
            "required": false,
            "schema": {
              "description": "Sample ID upper range",
              "title": "Sample Id Range End",
              "type": "string"
            }
          },
          {
            "description": "Samples started filter range",
            "in": "query",
            "name": "samples_started_filter_range",
            "required": false,
            "schema": {
              "description": "Samples started filter range",
              "title": "Samples Started Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection lower range",
            "in": "query",
            "name": "time_of_collection_start",
            "required": false,
            "schema": {
              "description": "Sample's time of collection lower range",
              "title": "Time Of Collection Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection upper range",
            "in": "query",
            "name": "time_of_collection_end",
            "required": false,
            "schema": {
              "description": "Sample's time of collection upper range",
              "title": "Time Of Collection End",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection pre-defined range",
            "in": "query",
            "name": "time_of_collection_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's time of collection pre-defined range",
              "title": "Time Of Collection Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received lower range",
            "in": "query",
            "name": "date_received_start",
            "required": false,
            "schema": {
              "description": "Sample's date received lower range",
              "title": "Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received upper range",
            "in": "query",
            "name": "date_received_end",
            "required": false,
            "schema": {
              "description": "Sample's date received upper range",
              "title": "Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received pre-defined range",
            "in": "query",
            "name": "date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's date received pre-defined range",
              "title": "Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date received lower range",
            "in": "query",
            "name": "order_date_received_start",
            "required": false,
            "schema": {
              "description": "Order's date received lower range",
              "title": "Order Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date received upper range",
            "in": "query",
            "name": "order_date_received_end",
            "required": false,
            "schema": {
              "description": "Order's date received upper range",
              "title": "Order Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Order's date received pre-defined range",
            "in": "query",
            "name": "order_date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date received pre-defined range",
              "title": "Order Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated lower range",
            "in": "query",
            "name": "last_updated_start",
            "required": false,
            "schema": {
              "description": "Sample's last updated lower range",
              "title": "Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated upper range",
            "in": "query",
            "name": "last_updated_end",
            "required": false,
            "schema": {
              "description": "Sample's last updated upper range",
              "title": "Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated pre-defined range",
            "in": "query",
            "name": "last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's last updated pre-defined range",
              "title": "Last Updated Filter Range",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSampleSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "SAMPLE"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_samples",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSampleSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseSampleSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "SAMPLE"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_samples",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSampleSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseSampleSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "SAMPLE"
        ]
      }
    },
    "/qbench/api/v2/samples/{sample_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_samples_{sample_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "sample_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "SAMPLE"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_samples_{sample_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "sample_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleSampleSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "SAMPLE"
        ]
      }
    },
    "/qbench/api/v2/samples/{sample_id}/attachments": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_samples_{sample_id}_attachments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "sample_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttachmentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_sample_attachments <GET>",
        "tags": [
          "SAMPLE",
          "ATTACHMENT"
        ]
      }
    },
    "/qbench/api/v2/samples/{sample_id}/batches": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_samples_{sample_id}_batches",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "sample_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Test Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "project_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Project Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "protocol_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Protocol Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_protocol_step_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Current Protocol Step Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "parent_batch_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Parent Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_object_protocol_step_user_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Current Object Protocol Step User Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_assigned_user_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Object Protocol Step Assigned User Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Object Protocol Step Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "batch_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "display_name",
            "required": false,
            "schema": {
              "title": "Display Name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_batches_without_assay",
            "required": false,
            "schema": {
              "title": "Include Batches Without Assay",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_assigned_current_user",
            "required": false,
            "schema": {
              "title": "Object Protocol Step Assigned Current User",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_object_protocol_step_current_user",
            "required": false,
            "schema": {
              "title": "Current Object Protocol Step Current User",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_no_user_assigned",
            "required": false,
            "schema": {
              "title": "Object Protocol Step No User Assigned",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Batch Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBatchSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Batches for a Sample",
        "tags": [
          "SAMPLE",
          "BATCH"
        ]
      }
    },
    "/qbench/api/v2/samples/{sample_id}/reports": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_samples_{sample_id}_reports",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "sample_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "emailed",
            "required": false,
            "schema": {
              "title": "Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "public",
            "required": false,
            "schema": {
              "title": "Public",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "report_render_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Report Render Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "report_config_levels",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Report Config Levels",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Test Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListGenReportSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of report for an Sample",
        "tags": [
          "SAMPLE",
          "REPORT"
        ]
      }
    },
    "/qbench/api/v2/samples/{sample_id}/sub-samples": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_samples_{sample_id}_sub-samples",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "sample_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "List of Parent Sample IDs",
            "in": "query",
            "name": "parent_sample_ids",
            "required": false,
            "schema": {
              "description": "List of Parent Sample IDs",
              "items": {
                "type": "integer"
              },
              "title": "Parent Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Inventory Stock IDs",
            "in": "query",
            "name": "inventory_stock_ids",
            "required": false,
            "schema": {
              "description": "List of Inventory Stock IDs",
              "items": {
                "type": "integer"
              },
              "title": "Inventory Stock Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Inventory Item IDs",
            "in": "query",
            "name": "inventory_item_ids",
            "required": false,
            "schema": {
              "description": "List of Inventory Item IDs",
              "items": {
                "type": "integer"
              },
              "title": "Inventory Item Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Customer IDs",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "description": "List of Customer IDs",
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order IDs",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "description": "List of Order IDs",
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Project IDs",
            "in": "query",
            "name": "project_ids",
            "required": false,
            "schema": {
              "description": "List of Project IDs",
              "items": {
                "type": "integer"
              },
              "title": "Project Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Source IDs",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "description": "List of Source IDs",
              "items": {
                "type": "integer"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Accessioning Type IDs",
            "in": "query",
            "name": "accessioning_type_ids",
            "required": false,
            "schema": {
              "description": "List of Accessioning Type IDs",
              "items": {
                "type": "integer"
              },
              "title": "Accessioning Type Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Location IDs",
            "in": "query",
            "name": "location_ids",
            "required": false,
            "schema": {
              "description": "List of Location IDs",
              "items": {
                "type": "integer"
              },
              "title": "Location Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs",
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample IDs",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "description": "List of Sample IDs",
              "items": {
                "type": "string"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample Confident Cannabis IDs",
            "in": "query",
            "name": "cc_ids",
            "required": false,
            "schema": {
              "description": "List of Sample Confident Cannabis IDs",
              "items": {
                "type": "string"
              },
              "title": "Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order Confident Cannabis IDs",
            "in": "query",
            "name": "order_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Order Confident Cannabis IDs",
              "items": {
                "type": "string"
              },
              "title": "Order Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample Tags",
            "in": "query",
            "name": "sample_tags",
            "required": false,
            "schema": {
              "description": "List of Sample Tags",
              "items": {
                "type": "string"
              },
              "title": "Sample Tags",
              "type": "array"
            }
          },
          {
            "description": "Sample tag filter action type",
            "in": "query",
            "name": "sample_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Sample tag filter action type"
            }
          },
          {
            "description": "List of Order Request statuses",
            "in": "query",
            "name": "order_request_statuses",
            "required": false,
            "schema": {
              "description": "List of Order Request statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Request Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Lab IDs",
            "in": "query",
            "name": "lab_ids",
            "required": false,
            "schema": {
              "description": "List of Lab IDs",
              "items": {
                "type": "string"
              },
              "title": "Lab Ids",
              "type": "array"
            }
          },
          {
            "description": "List of METRC UIDs",
            "in": "query",
            "name": "metrc_uids",
            "required": false,
            "schema": {
              "description": "List of METRC UIDs",
              "items": {
                "type": "string"
              },
              "title": "Metrc Uids",
              "type": "array"
            }
          },
          {
            "description": "Only return Linked Samples",
            "in": "query",
            "name": "linked",
            "required": false,
            "schema": {
              "description": "Only return Linked Samples",
              "title": "Linked",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Parent Samples",
            "in": "query",
            "name": "has_sub_sample",
            "required": false,
            "schema": {
              "description": "Only return Parent Samples",
              "title": "Has Sub Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Sub Samples",
            "in": "query",
            "name": "is_sub_sample",
            "required": false,
            "schema": {
              "description": "Only return Sub Samples",
              "title": "Is Sub Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples without an Order",
            "in": "query",
            "name": "no_associated_order",
            "required": false,
            "schema": {
              "description": "Only return Samples without an Order",
              "title": "No Associated Order",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples without a Project",
            "in": "query",
            "name": "no_associated_project",
            "required": false,
            "schema": {
              "description": "Only return Samples without a Project",
              "title": "No Associated Project",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that do not have Sub Samples",
            "in": "query",
            "name": "no_sub_samples",
            "required": false,
            "schema": {
              "description": "Only return Samples that do not have Sub Samples",
              "title": "No Sub Samples",
              "type": "boolean"
            }
          },
          {
            "description": "Only return unique Samples",
            "in": "query",
            "name": "unique_samples_only",
            "required": false,
            "schema": {
              "description": "Only return unique Samples",
              "title": "Unique Samples Only",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have all their Tests completed",
            "in": "query",
            "name": "completed",
            "required": false,
            "schema": {
              "description": "Only return Samples that have all their Tests completed",
              "title": "Completed",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that do not have an associated Batch",
            "in": "query",
            "name": "no_associated_batch",
            "required": false,
            "schema": {
              "description": "Only return Samples that do not have an associated Batch",
              "title": "No Associated Batch",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have been received",
            "in": "query",
            "name": "received",
            "required": false,
            "schema": {
              "description": "Only return Samples that have been received",
              "title": "Received",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have their report published",
            "in": "query",
            "name": "release_report",
            "required": false,
            "schema": {
              "description": "Only return Samples that have their report published",
              "title": "Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Only return Samples that have a Report generated",
            "in": "query",
            "name": "report_generated",
            "required": false,
            "schema": {
              "description": "Only return Samples that have a Report generated",
              "title": "Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Field to sort by",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "description": "Field to sort by",
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "Sort by ascending or descending",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.SortOrderValues"
                }
              ],
              "description": "Sort by ascending or descending"
            }
          },
          {
            "description": "Sample Type",
            "in": "query",
            "name": "sample_type",
            "required": false,
            "schema": {
              "description": "Sample Type",
              "title": "Sample Type",
              "type": "string"
            }
          },
          {
            "description": "Sample Description",
            "in": "query",
            "name": "sample_description",
            "required": false,
            "schema": {
              "description": "Sample Description",
              "title": "Sample Description",
              "type": "string"
            }
          },
          {
            "description": "METRC UID",
            "in": "query",
            "name": "metrc_uid",
            "required": false,
            "schema": {
              "description": "METRC UID",
              "title": "Metrc Uid",
              "type": "string"
            }
          },
          {
            "description": "Lab ID",
            "in": "query",
            "name": "lab_id",
            "required": false,
            "schema": {
              "description": "Lab ID",
              "title": "Lab Id",
              "type": "string"
            }
          },
          {
            "description": "Return deleted Samples",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SampleFilterSchema.7a3ad72.IncludeDeletedValues"
                }
              ],
              "description": "Return deleted Samples"
            }
          },
          {
            "description": "Base64 Encoded Sample Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Sample Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "SAMPLE"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "customer_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Sample ID lower range",
            "in": "query",
            "name": "sample_id_range_start",
            "required": false,
            "schema": {
              "description": "Sample ID lower range",
              "title": "Sample Id Range Start",
              "type": "string"
            }
          },
          {
            "description": "Sample ID upper range",
            "in": "query",
            "name": "sample_id_range_end",
            "required": false,
            "schema": {
              "description": "Sample ID upper range",
              "title": "Sample Id Range End",
              "type": "string"
            }
          },
          {
            "description": "Samples started filter range",
            "in": "query",
            "name": "samples_started_filter_range",
            "required": false,
            "schema": {
              "description": "Samples started filter range",
              "title": "Samples Started Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection lower range",
            "in": "query",
            "name": "time_of_collection_start",
            "required": false,
            "schema": {
              "description": "Sample's time of collection lower range",
              "title": "Time Of Collection Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection upper range",
            "in": "query",
            "name": "time_of_collection_end",
            "required": false,
            "schema": {
              "description": "Sample's time of collection upper range",
              "title": "Time Of Collection End",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection pre-defined range",
            "in": "query",
            "name": "time_of_collection_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's time of collection pre-defined range",
              "title": "Time Of Collection Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received lower range",
            "in": "query",
            "name": "date_received_start",
            "required": false,
            "schema": {
              "description": "Sample's date received lower range",
              "title": "Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received upper range",
            "in": "query",
            "name": "date_received_end",
            "required": false,
            "schema": {
              "description": "Sample's date received upper range",
              "title": "Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received pre-defined range",
            "in": "query",
            "name": "date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's date received pre-defined range",
              "title": "Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date received lower range",
            "in": "query",
            "name": "order_date_received_start",
            "required": false,
            "schema": {
              "description": "Order's date received lower range",
              "title": "Order Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date received upper range",
            "in": "query",
            "name": "order_date_received_end",
            "required": false,
            "schema": {
              "description": "Order's date received upper range",
              "title": "Order Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Order's date received pre-defined range",
            "in": "query",
            "name": "order_date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date received pre-defined range",
              "title": "Order Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated lower range",
            "in": "query",
            "name": "last_updated_start",
            "required": false,
            "schema": {
              "description": "Sample's last updated lower range",
              "title": "Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated upper range",
            "in": "query",
            "name": "last_updated_end",
            "required": false,
            "schema": {
              "description": "Sample's last updated upper range",
              "title": "Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated pre-defined range",
            "in": "query",
            "name": "last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's last updated pre-defined range",
              "title": "Last Updated Filter Range",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSampleSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Sub-Samples for a Sample",
        "tags": [
          "SAMPLE"
        ]
      }
    },
    "/qbench/api/v2/samples/{sample_id}/tests": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_samples_{sample_id}_tests",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "sample_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "Customer ID list",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "description": "Customer ID list",
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "Assay ID list",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "description": "Assay ID list",
              "items": {
                "type": "integer"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "Project ID list for Orders",
            "in": "query",
            "name": "order_project_ids",
            "required": false,
            "schema": {
              "description": "Project ID list for Orders",
              "items": {
                "type": "integer"
              },
              "title": "Order Project Ids",
              "type": "array"
            }
          },
          {
            "description": "Project ID list for Samples",
            "in": "query",
            "name": "sample_project_ids",
            "required": false,
            "schema": {
              "description": "Project ID list for Samples",
              "items": {
                "type": "integer"
              },
              "title": "Sample Project Ids",
              "type": "array"
            }
          },
          {
            "description": "User IDs",
            "in": "query",
            "name": "tech_ids",
            "required": false,
            "schema": {
              "description": "User IDs",
              "items": {
                "type": "integer"
              },
              "title": "Tech Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Source IDs",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "description": "List of Source IDs",
              "items": {
                "type": "integer"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Test IDs",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "description": "List of Test IDs",
              "items": {
                "type": "string"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order IDs",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "description": "List of Order IDs",
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample IDs",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "description": "List of Sample IDs",
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Location IDs",
            "in": "query",
            "name": "location_ids",
            "required": false,
            "schema": {
              "description": "List of Location IDs",
              "items": {
                "type": "integer"
              },
              "title": "Location Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Panel IDs",
            "in": "query",
            "name": "panel_ids",
            "required": false,
            "schema": {
              "description": "List of Panel IDs",
              "items": {
                "type": "integer"
              },
              "title": "Panel Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Assay Condition IDs",
            "in": "query",
            "name": "assay_condition_ids",
            "required": false,
            "schema": {
              "description": "List of Assay Condition IDs",
              "items": {
                "type": "integer"
              },
              "title": "Assay Condition Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs",
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Accessioning Types for Samples",
            "in": "query",
            "name": "sample_accessioning_type_ids",
            "required": false,
            "schema": {
              "description": "List of Accessioning Types for Samples",
              "items": {
                "type": "integer"
              },
              "title": "Sample Accessioning Type Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs for a Sample",
            "in": "query",
            "name": "sample_batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs for a Sample",
              "items": {
                "type": "integer"
              },
              "title": "Sample Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Team IDs",
            "in": "query",
            "name": "team_ids",
            "required": false,
            "schema": {
              "description": "List of Team IDs",
              "items": {
                "type": "integer"
              },
              "title": "Team Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Deviation IDs",
            "in": "query",
            "name": "deviation_ids",
            "required": false,
            "schema": {
              "description": "List of Deviation IDs",
              "items": {
                "type": "integer"
              },
              "title": "Deviation Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Turnaround IDs",
            "in": "query",
            "name": "turnaround_ids",
            "required": false,
            "schema": {
              "description": "List of Turnaround IDs",
              "items": {
                "type": "integer"
              },
              "title": "Turnaround Ids",
              "type": "array"
            }
          },
          {
            "description": "List of tags for an Order",
            "in": "query",
            "name": "order_tags",
            "required": false,
            "schema": {
              "description": "List of tags for an Order",
              "items": {
                "type": "integer"
              },
              "title": "Order Tags",
              "type": "array"
            }
          },
          {
            "description": "Order tags filter action type",
            "in": "query",
            "name": "order_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Order tags filter action type"
            }
          },
          {
            "description": "List of tags for a Sample",
            "in": "query",
            "name": "sample_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Sample",
              "items": {
                "type": "string"
              },
              "title": "Sample Tags",
              "type": "array"
            }
          },
          {
            "description": "Sample tags filter action type",
            "in": "query",
            "name": "sample_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Sample tags filter action type"
            }
          },
          {
            "description": "List of tags for a Test",
            "in": "query",
            "name": "test_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Test",
              "items": {
                "type": "string"
              },
              "title": "Test Tags",
              "type": "array"
            }
          },
          {
            "description": "Test tags filter action type",
            "in": "query",
            "name": "test_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Test tags filter action type"
            }
          },
          {
            "description": "List of tags for a Customer",
            "in": "query",
            "name": "customer_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Customer",
              "items": {
                "type": "string"
              },
              "title": "Customer Tags",
              "type": "array"
            }
          },
          {
            "description": "Customer tags filter action type",
            "in": "query",
            "name": "customer_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Customer tags filter action type"
            }
          },
          {
            "description": "List of Test statuses",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "description": "List of Test statuses",
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Order statuses",
            "in": "query",
            "name": "order_statuses",
            "required": false,
            "schema": {
              "description": "List of Order statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Order Request statuses",
            "in": "query",
            "name": "order_request_statuses",
            "required": false,
            "schema": {
              "description": "List of Order Request statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Request Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Confident Cannabis IDs for Samples",
            "in": "query",
            "name": "sample_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Confident Cannabis IDs for Samples",
              "items": {
                "type": "string"
              },
              "title": "Sample Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Confident Cannabis IDs for Orders",
            "in": "query",
            "name": "order_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Confident Cannabis IDs for Orders",
              "items": {
                "type": "string"
              },
              "title": "Order Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "Sort by a field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "description": "Sort by a field",
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "Sort by ascending or descending",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.SortOrderValues"
                }
              ],
              "description": "Sort by ascending or descending"
            }
          },
          {
            "description": "Description of a Sample",
            "in": "query",
            "name": "sample_description",
            "required": false,
            "schema": {
              "description": "Description of a Sample",
              "title": "Sample Description",
              "type": "string"
            }
          },
          {
            "description": "Test results",
            "in": "query",
            "name": "results",
            "required": false,
            "schema": {
              "description": "Test results",
              "title": "Results",
              "type": "string"
            }
          },
          {
            "description": "Test results filter action type",
            "in": "query",
            "name": "results_action_option",
            "required": false,
            "schema": {
              "description": "Test results filter action type",
              "title": "Results Action Option",
              "type": "string"
            }
          },
          {
            "description": "Test results filter upper range number",
            "in": "query",
            "name": "results_range_upper",
            "required": false,
            "schema": {
              "description": "Test results filter upper range number",
              "title": "Results Range Upper",
              "type": "string"
            }
          },
          {
            "description": "Test results filter lower range number",
            "in": "query",
            "name": "results_range_lower",
            "required": false,
            "schema": {
              "description": "Test results filter lower range number",
              "title": "Results Range Lower",
              "type": "string"
            }
          },
          {
            "description": "Assay Condition filter action type",
            "in": "query",
            "name": "assay_conditions_action",
            "required": false,
            "schema": {
              "description": "Assay Condition filter action type",
              "title": "Assay Conditions Action",
              "type": "string"
            }
          },
          {
            "description": "Result tags",
            "in": "query",
            "name": "results_tags",
            "required": false,
            "schema": {
              "description": "Result tags",
              "title": "Results Tags",
              "type": "string"
            }
          },
          {
            "description": "Tags filter action type",
            "in": "query",
            "name": "tags_filter_action",
            "required": false,
            "schema": {
              "description": "Tags filter action type",
              "title": "Tags Filter Action",
              "type": "string"
            }
          },
          {
            "description": "Boolean whether or not to do an AND or an OR query when both Assay IDs and Panel IDs are filtered",
            "in": "query",
            "name": "panel_assay_and_query",
            "required": false,
            "schema": {
              "description": "Boolean whether or not to do an AND or an OR query when both Assay IDs and Panel IDs are filtered",
              "title": "Panel Assay And Query",
              "type": "string"
            }
          },
          {
            "description": "Sample ID filter lower range",
            "in": "query",
            "name": "sample_id_range_start",
            "required": false,
            "schema": {
              "description": "Sample ID filter lower range",
              "title": "Sample Id Range Start",
              "type": "string"
            }
          },
          {
            "description": "Sample ID filter upper range",
            "in": "query",
            "name": "sample_id_range_end",
            "required": false,
            "schema": {
              "description": "Sample ID filter upper range",
              "title": "Sample Id Range End",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Order Additional Field Filters",
            "in": "query",
            "name": "order_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Order Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ORDER"
              },
              "title": "Order Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Sample Additional Field Filters",
            "in": "query",
            "name": "sample_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Sample Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "SAMPLE"
              },
              "title": "Sample Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Test Additional Field Filters",
            "in": "query",
            "name": "test_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Test Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "TEST"
              },
              "title": "Test Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Assay Additional Field Filters",
            "in": "query",
            "name": "assay_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Assay Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ASSAY"
              },
              "title": "Assay Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Batch Additional Field Filters",
            "in": "query",
            "name": "batch_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Batch Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "customer_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Core Field Filters",
            "in": "query",
            "name": "customer_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Core Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Assay Core Field Filters",
            "in": "query",
            "name": "assay_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Assay Core Field Filters",
              "json_schema_extra": {
                "entity_type": "ASSAY"
              },
              "title": "Assay Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Batch Core Field Filters",
            "in": "query",
            "name": "batch_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Core Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Batch Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Boolean to include normal Orders when filtering by Order Request Status",
            "in": "query",
            "name": "include_orders",
            "required": false,
            "schema": {
              "description": "Boolean to include normal Orders when filtering by Order Request Status",
              "title": "Include Orders",
              "type": "boolean"
            }
          },
          {
            "description": "Return Tests where its Sample does not have a Batch associated",
            "in": "query",
            "name": "no_associated_batch_sample",
            "required": false,
            "schema": {
              "description": "Return Tests where its Sample does not have a Batch associated",
              "title": "No Associated Batch Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Return Tests that do not have a Batch associated",
            "in": "query",
            "name": "no_associated_batch_test",
            "required": false,
            "schema": {
              "description": "Return Tests that do not have a Batch associated",
              "title": "No Associated Batch Test",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to include Tests without priority when filtering by Priority",
            "in": "query",
            "name": "include_tests_without_priority",
            "required": false,
            "schema": {
              "description": "Boolean to include Tests without priority when filtering by Priority",
              "title": "Include Tests Without Priority",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have a Batch associated",
            "in": "query",
            "name": "samples_batched",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have a Batch associated",
              "title": "Samples Batched",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have a Report generated",
            "in": "query",
            "name": "order_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have a Report generated",
              "title": "Order Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have a Report generated",
            "in": "query",
            "name": "sample_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have a Report generated",
              "title": "Sample Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have a Report generated",
            "in": "query",
            "name": "test_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have a Report generated",
              "title": "Test Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have their report published",
            "in": "query",
            "name": "order_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have their report published",
              "title": "Order Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have their Report published",
            "in": "query",
            "name": "sample_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have their Report published",
              "title": "Sample Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their Report published",
            "in": "query",
            "name": "test_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their Report published",
              "title": "Test Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their results released",
            "in": "query",
            "name": "test_release_results",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their results released",
              "title": "Test Release Results",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their Report emailed",
            "in": "query",
            "name": "test_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their Report emailed",
              "title": "Test Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have their Report emailed",
            "in": "query",
            "name": "sample_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have their Report emailed",
              "title": "Sample Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have their Report emailed",
            "in": "query",
            "name": "order_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have their Report emailed",
              "title": "Order Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests without a Team assigned",
            "in": "query",
            "name": "include_tests_without_team",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests without a Team assigned",
              "title": "Include Tests Without Team",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Parent Samples",
            "in": "query",
            "name": "parent_sample_only",
            "required": false,
            "schema": {
              "description": "Boolean to only include Parent Samples",
              "title": "Parent Sample Only",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are the current priority",
            "in": "query",
            "name": "priority_current",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are the current priority",
              "title": "Priority Current",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Sub-Smaples",
            "in": "query",
            "name": "sub_sample_only",
            "required": false,
            "schema": {
              "description": "Boolean to only include Sub-Smaples",
              "title": "Sub Sample Only",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only included Tests that have been emailed",
            "in": "query",
            "name": "emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only included Tests that have been emailed",
              "title": "Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are unlocked",
            "in": "query",
            "name": "unlocked",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are unlocked",
              "title": "Unlocked",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to include deleted Tests",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.IncludeDeletedValues"
                }
              ],
              "description": "Boolean to include deleted Tests"
            }
          },
          {
            "description": "Boolean to filter by Tests overdue",
            "in": "query",
            "name": "overdue",
            "required": false,
            "schema": {
              "description": "Boolean to filter by Tests overdue",
              "title": "Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have been received",
            "in": "query",
            "name": "samples_received",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have been received",
              "title": "Samples Received",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include completed Samples",
            "in": "query",
            "name": "sample_complete",
            "required": false,
            "schema": {
              "description": "Boolean to only include completed Samples",
              "title": "Sample Complete",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that are overdue",
            "in": "query",
            "name": "order_overdue",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that are overdue",
              "title": "Order Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are assigned to the current user",
            "in": "query",
            "name": "assigned_to_current_user",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are assigned to the current user",
              "title": "Assigned To Current User",
              "type": "boolean"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp lower range",
            "in": "query",
            "name": "last_updated_start",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp lower range",
              "title": "Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp upper range",
            "in": "query",
            "name": "last_updated_end",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp upper range",
              "title": "Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp pre-defined range",
            "in": "query",
            "name": "last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp pre-defined range",
              "title": "Last Updated Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp relative range",
            "in": "query",
            "name": "last_updated_relative_days",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp relative range",
              "title": "Last Updated Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp relative filter type",
            "in": "query",
            "name": "last_updated_relative",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp relative filter type",
              "title": "Last Updated Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp lower range",
            "in": "query",
            "name": "sample_last_updated_start",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp lower range",
              "title": "Sample Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp upper range",
            "in": "query",
            "name": "sample_last_updated_end",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp upper range",
              "title": "Sample Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp pre-defined range's last updated timestamp pre-defined range",
            "in": "query",
            "name": "sample_last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp pre-defined range's last updated timestamp pre-defined range",
              "title": "Sample Last Updated Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp relative range",
            "in": "query",
            "name": "sample_last_updated_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp relative range",
              "title": "Sample Last Updated Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp relative filter type",
            "in": "query",
            "name": "sample_last_updated_relative",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp relative filter type",
              "title": "Sample Last Updated Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection lower range",
            "in": "query",
            "name": "sample_time_of_collection_start",
            "required": false,
            "schema": {
              "description": "Sample's time of collection lower range",
              "title": "Sample Time Of Collection Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection upper range",
            "in": "query",
            "name": "sample_time_of_collection_end",
            "required": false,
            "schema": {
              "description": "Sample's time of collection upper range",
              "title": "Sample Time Of Collection End",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection pre-defined range",
            "in": "query",
            "name": "sample_time_of_collection_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's time of collection pre-defined range",
              "title": "Sample Time Of Collection Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection relative range",
            "in": "query",
            "name": "sample_time_of_collection_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's time of collection relative range",
              "title": "Sample Time Of Collection Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection relative filter type",
            "in": "query",
            "name": "sample_time_of_collection_relative",
            "required": false,
            "schema": {
              "description": "Sample's time of collection relative filter type",
              "title": "Sample Time Of Collection Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date received lower range",
            "in": "query",
            "name": "date_received_start",
            "required": false,
            "schema": {
              "description": "Order's date received lower range",
              "title": "Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date received upper range",
            "in": "query",
            "name": "date_received_end",
            "required": false,
            "schema": {
              "description": "Order's date received upper range",
              "title": "Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Order's date received pre-defined range",
            "in": "query",
            "name": "date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date received pre-defined range",
              "title": "Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date received relative range",
            "in": "query",
            "name": "date_received_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date received relative range",
              "title": "Date Received Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date received relative filter type",
            "in": "query",
            "name": "date_received_relative",
            "required": false,
            "schema": {
              "description": "Order's date received relative filter type",
              "title": "Date Received Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received lower range",
            "in": "query",
            "name": "sample_date_received_start",
            "required": false,
            "schema": {
              "description": "Sample's date received lower range",
              "title": "Sample Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received upper range",
            "in": "query",
            "name": "sample_date_received_end",
            "required": false,
            "schema": {
              "description": "Sample's date received upper range",
              "title": "Sample Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received pre-defined range",
            "in": "query",
            "name": "sample_date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's date received pre-defined range",
              "title": "Sample Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received relative range",
            "in": "query",
            "name": "sample_date_received_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's date received relative range",
              "title": "Sample Date Received Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received relative filter type",
            "in": "query",
            "name": "sample_date_received_relative",
            "required": false,
            "schema": {
              "description": "Sample's date received relative filter type",
              "title": "Sample Date Received Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's date created lower range",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "description": "Test's date created lower range",
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "Test's date created upper range",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "description": "Test's date created upper range",
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "Test's date created pre-defined range",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "description": "Test's date created pre-defined range",
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's date created relative range",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "description": "Test's date created relative range",
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's date created relative filter type",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "description": "Test's date created relative filter type",
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's due date lower range",
            "in": "query",
            "name": "date_required_start",
            "required": false,
            "schema": {
              "description": "Order's due date lower range",
              "title": "Date Required Start",
              "type": "string"
            }
          },
          {
            "description": "Order's due date upper range",
            "in": "query",
            "name": "date_required_end",
            "required": false,
            "schema": {
              "description": "Order's due date upper range",
              "title": "Date Required End",
              "type": "string"
            }
          },
          {
            "description": "Order's due date pre-defined range",
            "in": "query",
            "name": "date_required_filter_range",
            "required": false,
            "schema": {
              "description": "Order's due date pre-defined range",
              "title": "Date Required Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's due date relative range",
            "in": "query",
            "name": "date_required_relative_days",
            "required": false,
            "schema": {
              "description": "Order's due date relative range",
              "title": "Date Required Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's due date relative filter type",
            "in": "query",
            "name": "date_required_relative",
            "required": false,
            "schema": {
              "description": "Order's due date relative filter type",
              "title": "Date Required Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved lower range",
            "in": "query",
            "name": "date_approved_start",
            "required": false,
            "schema": {
              "description": "Order's date approved lower range",
              "title": "Date Approved Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved upper range",
            "in": "query",
            "name": "date_approved_end",
            "required": false,
            "schema": {
              "description": "Order's date approved upper range",
              "title": "Date Approved End",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved pre-defined range",
            "in": "query",
            "name": "date_approved_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date approved pre-defined range",
              "title": "Date Approved Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved relative range",
            "in": "query",
            "name": "date_approved_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date approved relative range",
              "title": "Date Approved Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved relative filter type",
            "in": "query",
            "name": "date_approved_relative",
            "required": false,
            "schema": {
              "description": "Order's date approved relative filter type",
              "title": "Date Approved Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed lower range",
            "in": "query",
            "name": "order_date_completed_start",
            "required": false,
            "schema": {
              "description": "Order's date completed lower range",
              "title": "Order Date Completed Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed upper range",
            "in": "query",
            "name": "order_date_completed_end",
            "required": false,
            "schema": {
              "description": "Order's date completed upper range",
              "title": "Order Date Completed End",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed pre-defined range",
            "in": "query",
            "name": "order_date_completed_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date completed pre-defined range",
              "title": "Order Date Completed Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed relative range",
            "in": "query",
            "name": "order_date_completed_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date completed relative range",
              "title": "Order Date Completed Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed relative filter type",
            "in": "query",
            "name": "order_date_completed_relative",
            "required": false,
            "schema": {
              "description": "Order's date completed relative filter type",
              "title": "Order Date Completed Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date lower range",
            "in": "query",
            "name": "estimated_start_date_start",
            "required": false,
            "schema": {
              "description": "Test's estimated start date lower range",
              "title": "Estimated Start Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date upper range",
            "in": "query",
            "name": "estimated_start_date_end",
            "required": false,
            "schema": {
              "description": "Test's estimated start date upper range",
              "title": "Estimated Start Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date pre-defined range",
            "in": "query",
            "name": "estimated_start_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's estimated start date pre-defined range",
              "title": "Estimated Start Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date relative range",
            "in": "query",
            "name": "estimated_start_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's estimated start date relative range",
              "title": "Estimated Start Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date relative filter type",
            "in": "query",
            "name": "estimated_start_date_relative",
            "required": false,
            "schema": {
              "description": "Test's estimated start date relative filter type",
              "title": "Estimated Start Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date lower range",
            "in": "query",
            "name": "estimated_complete_date_start",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date lower range",
              "title": "Estimated Complete Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date upper range",
            "in": "query",
            "name": "estimated_complete_date_end",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date upper range",
              "title": "Estimated Complete Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date pre-defined range",
            "in": "query",
            "name": "estimated_complete_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date pre-defined range",
              "title": "Estimated Complete Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date relative range",
            "in": "query",
            "name": "estimated_complete_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date relative range",
              "title": "Estimated Complete Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date relative filter type",
            "in": "query",
            "name": "estimated_complete_date_relative",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date relative filter type",
              "title": "Estimated Complete Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's start date lower range",
            "in": "query",
            "name": "start_date_start",
            "required": false,
            "schema": {
              "description": "Test's start date lower range",
              "title": "Start Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's start date upper range",
            "in": "query",
            "name": "start_date_end",
            "required": false,
            "schema": {
              "description": "Test's start date upper range",
              "title": "Start Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's start date pre-defined range",
            "in": "query",
            "name": "start_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's start date pre-defined range",
              "title": "Start Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's start date relative range",
            "in": "query",
            "name": "start_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's start date relative range",
              "title": "Start Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's start date relative filter type",
            "in": "query",
            "name": "start_date_relative",
            "required": false,
            "schema": {
              "description": "Test's start date relative filter type",
              "title": "Start Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date lower range",
            "in": "query",
            "name": "complete_date_start",
            "required": false,
            "schema": {
              "description": "Test's complete date lower range",
              "title": "Complete Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date upper range",
            "in": "query",
            "name": "complete_date_end",
            "required": false,
            "schema": {
              "description": "Test's complete date upper range",
              "title": "Complete Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date pre-defined range",
            "in": "query",
            "name": "complete_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's complete date pre-defined range",
              "title": "Complete Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date relative range",
            "in": "query",
            "name": "complete_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's complete date relative range",
              "title": "Complete Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date relative filter type",
            "in": "query",
            "name": "complete_date_relative",
            "required": false,
            "schema": {
              "description": "Test's complete date relative filter type",
              "title": "Complete Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested lower range",
            "in": "query",
            "name": "order_date_requested_start",
            "required": false,
            "schema": {
              "description": "Order's date requested lower range",
              "title": "Order Date Requested Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested upper range",
            "in": "query",
            "name": "order_date_requested_end",
            "required": false,
            "schema": {
              "description": "Order's date requested upper range",
              "title": "Order Date Requested End",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested pre-defined range",
            "in": "query",
            "name": "order_date_requested_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date requested pre-defined range",
              "title": "Order Date Requested Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested relative range",
            "in": "query",
            "name": "order_date_requested_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date requested relative range",
              "title": "Order Date Requested Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested relative filter type",
            "in": "query",
            "name": "order_date_requested_relative",
            "required": false,
            "schema": {
              "description": "Order's date requested relative filter type",
              "title": "Order Date Requested Relative",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTestSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Tests for a Sample",
        "tags": [
          "SAMPLE",
          "TEST"
        ]
      }
    },
    "/qbench/api/v2/sources": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_sources",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSourceSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "SOURCE"
        ]
      }
    },
    "/qbench/api/v2/sources/{source_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_sources_{source_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "source_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleSourceSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "SOURCE"
        ]
      }
    },
    "/qbench/api/v2/teams": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_teams",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTeamSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "TEAM"
        ]
      }
    },
    "/qbench/api/v2/teams/{team_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_teams_{team_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "team_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleTeamSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "TEAM"
        ]
      }
    },
    "/qbench/api/v2/tests": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_tests",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "Customer ID list",
            "in": "query",
            "name": "customer_ids",
            "required": false,
            "schema": {
              "description": "Customer ID list",
              "items": {
                "type": "integer"
              },
              "title": "Customer Ids",
              "type": "array"
            }
          },
          {
            "description": "Assay ID list",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "description": "Assay ID list",
              "items": {
                "type": "integer"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "Project ID list for Orders",
            "in": "query",
            "name": "order_project_ids",
            "required": false,
            "schema": {
              "description": "Project ID list for Orders",
              "items": {
                "type": "integer"
              },
              "title": "Order Project Ids",
              "type": "array"
            }
          },
          {
            "description": "Project ID list for Samples",
            "in": "query",
            "name": "sample_project_ids",
            "required": false,
            "schema": {
              "description": "Project ID list for Samples",
              "items": {
                "type": "integer"
              },
              "title": "Sample Project Ids",
              "type": "array"
            }
          },
          {
            "description": "User IDs",
            "in": "query",
            "name": "tech_ids",
            "required": false,
            "schema": {
              "description": "User IDs",
              "items": {
                "type": "integer"
              },
              "title": "Tech Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Source IDs",
            "in": "query",
            "name": "source_ids",
            "required": false,
            "schema": {
              "description": "List of Source IDs",
              "items": {
                "type": "integer"
              },
              "title": "Source Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Test IDs",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "description": "List of Test IDs",
              "items": {
                "type": "string"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Order IDs",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "description": "List of Order IDs",
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Sample IDs",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "description": "List of Sample IDs",
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Location IDs",
            "in": "query",
            "name": "location_ids",
            "required": false,
            "schema": {
              "description": "List of Location IDs",
              "items": {
                "type": "integer"
              },
              "title": "Location Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Panel IDs",
            "in": "query",
            "name": "panel_ids",
            "required": false,
            "schema": {
              "description": "List of Panel IDs",
              "items": {
                "type": "integer"
              },
              "title": "Panel Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Assay Condition IDs",
            "in": "query",
            "name": "assay_condition_ids",
            "required": false,
            "schema": {
              "description": "List of Assay Condition IDs",
              "items": {
                "type": "integer"
              },
              "title": "Assay Condition Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs",
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Accessioning Types for Samples",
            "in": "query",
            "name": "sample_accessioning_type_ids",
            "required": false,
            "schema": {
              "description": "List of Accessioning Types for Samples",
              "items": {
                "type": "integer"
              },
              "title": "Sample Accessioning Type Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Batch IDs for a Sample",
            "in": "query",
            "name": "sample_batch_ids",
            "required": false,
            "schema": {
              "description": "List of Batch IDs for a Sample",
              "items": {
                "type": "integer"
              },
              "title": "Sample Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Team IDs",
            "in": "query",
            "name": "team_ids",
            "required": false,
            "schema": {
              "description": "List of Team IDs",
              "items": {
                "type": "integer"
              },
              "title": "Team Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Deviation IDs",
            "in": "query",
            "name": "deviation_ids",
            "required": false,
            "schema": {
              "description": "List of Deviation IDs",
              "items": {
                "type": "integer"
              },
              "title": "Deviation Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Turnaround IDs",
            "in": "query",
            "name": "turnaround_ids",
            "required": false,
            "schema": {
              "description": "List of Turnaround IDs",
              "items": {
                "type": "integer"
              },
              "title": "Turnaround Ids",
              "type": "array"
            }
          },
          {
            "description": "List of tags for an Order",
            "in": "query",
            "name": "order_tags",
            "required": false,
            "schema": {
              "description": "List of tags for an Order",
              "items": {
                "type": "integer"
              },
              "title": "Order Tags",
              "type": "array"
            }
          },
          {
            "description": "Order tags filter action type",
            "in": "query",
            "name": "order_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Order tags filter action type"
            }
          },
          {
            "description": "List of tags for a Sample",
            "in": "query",
            "name": "sample_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Sample",
              "items": {
                "type": "string"
              },
              "title": "Sample Tags",
              "type": "array"
            }
          },
          {
            "description": "Sample tags filter action type",
            "in": "query",
            "name": "sample_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Sample tags filter action type"
            }
          },
          {
            "description": "List of tags for a Test",
            "in": "query",
            "name": "test_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Test",
              "items": {
                "type": "string"
              },
              "title": "Test Tags",
              "type": "array"
            }
          },
          {
            "description": "Test tags filter action type",
            "in": "query",
            "name": "test_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Test tags filter action type"
            }
          },
          {
            "description": "List of tags for a Customer",
            "in": "query",
            "name": "customer_tags",
            "required": false,
            "schema": {
              "description": "List of tags for a Customer",
              "items": {
                "type": "string"
              },
              "title": "Customer Tags",
              "type": "array"
            }
          },
          {
            "description": "Customer tags filter action type",
            "in": "query",
            "name": "customer_tags_action",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.TagActionValues"
                }
              ],
              "description": "Customer tags filter action type"
            }
          },
          {
            "description": "List of Test statuses",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "description": "List of Test statuses",
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Order statuses",
            "in": "query",
            "name": "order_statuses",
            "required": false,
            "schema": {
              "description": "List of Order statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Order Request statuses",
            "in": "query",
            "name": "order_request_statuses",
            "required": false,
            "schema": {
              "description": "List of Order Request statuses",
              "items": {
                "type": "string"
              },
              "title": "Order Request Statuses",
              "type": "array"
            }
          },
          {
            "description": "List of Confident Cannabis IDs for Samples",
            "in": "query",
            "name": "sample_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Confident Cannabis IDs for Samples",
              "items": {
                "type": "string"
              },
              "title": "Sample Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "List of Confident Cannabis IDs for Orders",
            "in": "query",
            "name": "order_cc_ids",
            "required": false,
            "schema": {
              "description": "List of Confident Cannabis IDs for Orders",
              "items": {
                "type": "string"
              },
              "title": "Order Cc Ids",
              "type": "array"
            }
          },
          {
            "description": "Sort by a field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "description": "Sort by a field",
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "Sort by ascending or descending",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.SortOrderValues"
                }
              ],
              "description": "Sort by ascending or descending"
            }
          },
          {
            "description": "Description of a Sample",
            "in": "query",
            "name": "sample_description",
            "required": false,
            "schema": {
              "description": "Description of a Sample",
              "title": "Sample Description",
              "type": "string"
            }
          },
          {
            "description": "Test results",
            "in": "query",
            "name": "results",
            "required": false,
            "schema": {
              "description": "Test results",
              "title": "Results",
              "type": "string"
            }
          },
          {
            "description": "Test results filter action type",
            "in": "query",
            "name": "results_action_option",
            "required": false,
            "schema": {
              "description": "Test results filter action type",
              "title": "Results Action Option",
              "type": "string"
            }
          },
          {
            "description": "Test results filter upper range number",
            "in": "query",
            "name": "results_range_upper",
            "required": false,
            "schema": {
              "description": "Test results filter upper range number",
              "title": "Results Range Upper",
              "type": "string"
            }
          },
          {
            "description": "Test results filter lower range number",
            "in": "query",
            "name": "results_range_lower",
            "required": false,
            "schema": {
              "description": "Test results filter lower range number",
              "title": "Results Range Lower",
              "type": "string"
            }
          },
          {
            "description": "Assay Condition filter action type",
            "in": "query",
            "name": "assay_conditions_action",
            "required": false,
            "schema": {
              "description": "Assay Condition filter action type",
              "title": "Assay Conditions Action",
              "type": "string"
            }
          },
          {
            "description": "Result tags",
            "in": "query",
            "name": "results_tags",
            "required": false,
            "schema": {
              "description": "Result tags",
              "title": "Results Tags",
              "type": "string"
            }
          },
          {
            "description": "Tags filter action type",
            "in": "query",
            "name": "tags_filter_action",
            "required": false,
            "schema": {
              "description": "Tags filter action type",
              "title": "Tags Filter Action",
              "type": "string"
            }
          },
          {
            "description": "Boolean whether or not to do an AND or an OR query when both Assay IDs and Panel IDs are filtered",
            "in": "query",
            "name": "panel_assay_and_query",
            "required": false,
            "schema": {
              "description": "Boolean whether or not to do an AND or an OR query when both Assay IDs and Panel IDs are filtered",
              "title": "Panel Assay And Query",
              "type": "string"
            }
          },
          {
            "description": "Sample ID filter lower range",
            "in": "query",
            "name": "sample_id_range_start",
            "required": false,
            "schema": {
              "description": "Sample ID filter lower range",
              "title": "Sample Id Range Start",
              "type": "string"
            }
          },
          {
            "description": "Sample ID filter upper range",
            "in": "query",
            "name": "sample_id_range_end",
            "required": false,
            "schema": {
              "description": "Sample ID filter upper range",
              "title": "Sample Id Range End",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Order Additional Field Filters",
            "in": "query",
            "name": "order_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Order Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ORDER"
              },
              "title": "Order Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Sample Additional Field Filters",
            "in": "query",
            "name": "sample_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Sample Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "SAMPLE"
              },
              "title": "Sample Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Test Additional Field Filters",
            "in": "query",
            "name": "test_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Test Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "TEST"
              },
              "title": "Test Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Assay Additional Field Filters",
            "in": "query",
            "name": "assay_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Assay Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "ASSAY"
              },
              "title": "Assay Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Batch Additional Field Filters",
            "in": "query",
            "name": "batch_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Batch Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Additional Field Filters",
            "in": "query",
            "name": "customer_additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Additional Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Customer Core Field Filters",
            "in": "query",
            "name": "customer_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Customer Core Field Filters",
              "json_schema_extra": {
                "entity_type": "CUSTOMER"
              },
              "title": "Customer Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Assay Core Field Filters",
            "in": "query",
            "name": "assay_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Assay Core Field Filters",
              "json_schema_extra": {
                "entity_type": "ASSAY"
              },
              "title": "Assay Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Base64 Encoded Batch Core Field Filters",
            "in": "query",
            "name": "batch_core_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Core Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Batch Core Fields Encoded",
              "type": "string"
            }
          },
          {
            "description": "Boolean to include normal Orders when filtering by Order Request Status",
            "in": "query",
            "name": "include_orders",
            "required": false,
            "schema": {
              "description": "Boolean to include normal Orders when filtering by Order Request Status",
              "title": "Include Orders",
              "type": "boolean"
            }
          },
          {
            "description": "Return Tests where its Sample does not have a Batch associated",
            "in": "query",
            "name": "no_associated_batch_sample",
            "required": false,
            "schema": {
              "description": "Return Tests where its Sample does not have a Batch associated",
              "title": "No Associated Batch Sample",
              "type": "boolean"
            }
          },
          {
            "description": "Return Tests that do not have a Batch associated",
            "in": "query",
            "name": "no_associated_batch_test",
            "required": false,
            "schema": {
              "description": "Return Tests that do not have a Batch associated",
              "title": "No Associated Batch Test",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to include Tests without priority when filtering by Priority",
            "in": "query",
            "name": "include_tests_without_priority",
            "required": false,
            "schema": {
              "description": "Boolean to include Tests without priority when filtering by Priority",
              "title": "Include Tests Without Priority",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have a Batch associated",
            "in": "query",
            "name": "samples_batched",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have a Batch associated",
              "title": "Samples Batched",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have a Report generated",
            "in": "query",
            "name": "order_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have a Report generated",
              "title": "Order Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have a Report generated",
            "in": "query",
            "name": "sample_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have a Report generated",
              "title": "Sample Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have a Report generated",
            "in": "query",
            "name": "test_report_generated",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have a Report generated",
              "title": "Test Report Generated",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have their report published",
            "in": "query",
            "name": "order_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have their report published",
              "title": "Order Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have their Report published",
            "in": "query",
            "name": "sample_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have their Report published",
              "title": "Sample Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their Report published",
            "in": "query",
            "name": "test_release_report",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their Report published",
              "title": "Test Release Report",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their results released",
            "in": "query",
            "name": "test_release_results",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their results released",
              "title": "Test Release Results",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that have their Report emailed",
            "in": "query",
            "name": "test_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that have their Report emailed",
              "title": "Test Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have their Report emailed",
            "in": "query",
            "name": "sample_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have their Report emailed",
              "title": "Sample Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that have their Report emailed",
            "in": "query",
            "name": "order_report_emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that have their Report emailed",
              "title": "Order Report Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests without a Team assigned",
            "in": "query",
            "name": "include_tests_without_team",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests without a Team assigned",
              "title": "Include Tests Without Team",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Parent Samples",
            "in": "query",
            "name": "parent_sample_only",
            "required": false,
            "schema": {
              "description": "Boolean to only include Parent Samples",
              "title": "Parent Sample Only",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are the current priority",
            "in": "query",
            "name": "priority_current",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are the current priority",
              "title": "Priority Current",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Sub-Smaples",
            "in": "query",
            "name": "sub_sample_only",
            "required": false,
            "schema": {
              "description": "Boolean to only include Sub-Smaples",
              "title": "Sub Sample Only",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only included Tests that have been emailed",
            "in": "query",
            "name": "emailed",
            "required": false,
            "schema": {
              "description": "Boolean to only included Tests that have been emailed",
              "title": "Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are unlocked",
            "in": "query",
            "name": "unlocked",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are unlocked",
              "title": "Unlocked",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to include deleted Tests",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TestFilterSchema.7a3ad72.IncludeDeletedValues"
                }
              ],
              "description": "Boolean to include deleted Tests"
            }
          },
          {
            "description": "Boolean to filter by Tests overdue",
            "in": "query",
            "name": "overdue",
            "required": false,
            "schema": {
              "description": "Boolean to filter by Tests overdue",
              "title": "Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Samples that have been received",
            "in": "query",
            "name": "samples_received",
            "required": false,
            "schema": {
              "description": "Boolean to only include Samples that have been received",
              "title": "Samples Received",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include completed Samples",
            "in": "query",
            "name": "sample_complete",
            "required": false,
            "schema": {
              "description": "Boolean to only include completed Samples",
              "title": "Sample Complete",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Orders that are overdue",
            "in": "query",
            "name": "order_overdue",
            "required": false,
            "schema": {
              "description": "Boolean to only include Orders that are overdue",
              "title": "Order Overdue",
              "type": "boolean"
            }
          },
          {
            "description": "Boolean to only include Tests that are assigned to the current user",
            "in": "query",
            "name": "assigned_to_current_user",
            "required": false,
            "schema": {
              "description": "Boolean to only include Tests that are assigned to the current user",
              "title": "Assigned To Current User",
              "type": "boolean"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp lower range",
            "in": "query",
            "name": "last_updated_start",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp lower range",
              "title": "Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp upper range",
            "in": "query",
            "name": "last_updated_end",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp upper range",
              "title": "Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp pre-defined range",
            "in": "query",
            "name": "last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp pre-defined range",
              "title": "Last Updated Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp relative range",
            "in": "query",
            "name": "last_updated_relative_days",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp relative range",
              "title": "Last Updated Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's last updated timestamp relative filter type",
            "in": "query",
            "name": "last_updated_relative",
            "required": false,
            "schema": {
              "description": "Test's last updated timestamp relative filter type",
              "title": "Last Updated Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp lower range",
            "in": "query",
            "name": "sample_last_updated_start",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp lower range",
              "title": "Sample Last Updated Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp upper range",
            "in": "query",
            "name": "sample_last_updated_end",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp upper range",
              "title": "Sample Last Updated End",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp pre-defined range's last updated timestamp pre-defined range",
            "in": "query",
            "name": "sample_last_updated_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp pre-defined range's last updated timestamp pre-defined range",
              "title": "Sample Last Updated Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp relative range",
            "in": "query",
            "name": "sample_last_updated_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp relative range",
              "title": "Sample Last Updated Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's last updated timestamp relative filter type",
            "in": "query",
            "name": "sample_last_updated_relative",
            "required": false,
            "schema": {
              "description": "Sample's last updated timestamp relative filter type",
              "title": "Sample Last Updated Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection lower range",
            "in": "query",
            "name": "sample_time_of_collection_start",
            "required": false,
            "schema": {
              "description": "Sample's time of collection lower range",
              "title": "Sample Time Of Collection Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection upper range",
            "in": "query",
            "name": "sample_time_of_collection_end",
            "required": false,
            "schema": {
              "description": "Sample's time of collection upper range",
              "title": "Sample Time Of Collection End",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection pre-defined range",
            "in": "query",
            "name": "sample_time_of_collection_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's time of collection pre-defined range",
              "title": "Sample Time Of Collection Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection relative range",
            "in": "query",
            "name": "sample_time_of_collection_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's time of collection relative range",
              "title": "Sample Time Of Collection Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's time of collection relative filter type",
            "in": "query",
            "name": "sample_time_of_collection_relative",
            "required": false,
            "schema": {
              "description": "Sample's time of collection relative filter type",
              "title": "Sample Time Of Collection Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date received lower range",
            "in": "query",
            "name": "date_received_start",
            "required": false,
            "schema": {
              "description": "Order's date received lower range",
              "title": "Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date received upper range",
            "in": "query",
            "name": "date_received_end",
            "required": false,
            "schema": {
              "description": "Order's date received upper range",
              "title": "Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Order's date received pre-defined range",
            "in": "query",
            "name": "date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date received pre-defined range",
              "title": "Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date received relative range",
            "in": "query",
            "name": "date_received_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date received relative range",
              "title": "Date Received Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date received relative filter type",
            "in": "query",
            "name": "date_received_relative",
            "required": false,
            "schema": {
              "description": "Order's date received relative filter type",
              "title": "Date Received Relative",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received lower range",
            "in": "query",
            "name": "sample_date_received_start",
            "required": false,
            "schema": {
              "description": "Sample's date received lower range",
              "title": "Sample Date Received Start",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received upper range",
            "in": "query",
            "name": "sample_date_received_end",
            "required": false,
            "schema": {
              "description": "Sample's date received upper range",
              "title": "Sample Date Received End",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received pre-defined range",
            "in": "query",
            "name": "sample_date_received_filter_range",
            "required": false,
            "schema": {
              "description": "Sample's date received pre-defined range",
              "title": "Sample Date Received Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received relative range",
            "in": "query",
            "name": "sample_date_received_relative_days",
            "required": false,
            "schema": {
              "description": "Sample's date received relative range",
              "title": "Sample Date Received Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Sample's date received relative filter type",
            "in": "query",
            "name": "sample_date_received_relative",
            "required": false,
            "schema": {
              "description": "Sample's date received relative filter type",
              "title": "Sample Date Received Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's date created lower range",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "description": "Test's date created lower range",
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "Test's date created upper range",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "description": "Test's date created upper range",
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "Test's date created pre-defined range",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "description": "Test's date created pre-defined range",
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's date created relative range",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "description": "Test's date created relative range",
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's date created relative filter type",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "description": "Test's date created relative filter type",
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's due date lower range",
            "in": "query",
            "name": "date_required_start",
            "required": false,
            "schema": {
              "description": "Order's due date lower range",
              "title": "Date Required Start",
              "type": "string"
            }
          },
          {
            "description": "Order's due date upper range",
            "in": "query",
            "name": "date_required_end",
            "required": false,
            "schema": {
              "description": "Order's due date upper range",
              "title": "Date Required End",
              "type": "string"
            }
          },
          {
            "description": "Order's due date pre-defined range",
            "in": "query",
            "name": "date_required_filter_range",
            "required": false,
            "schema": {
              "description": "Order's due date pre-defined range",
              "title": "Date Required Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's due date relative range",
            "in": "query",
            "name": "date_required_relative_days",
            "required": false,
            "schema": {
              "description": "Order's due date relative range",
              "title": "Date Required Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's due date relative filter type",
            "in": "query",
            "name": "date_required_relative",
            "required": false,
            "schema": {
              "description": "Order's due date relative filter type",
              "title": "Date Required Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved lower range",
            "in": "query",
            "name": "date_approved_start",
            "required": false,
            "schema": {
              "description": "Order's date approved lower range",
              "title": "Date Approved Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved upper range",
            "in": "query",
            "name": "date_approved_end",
            "required": false,
            "schema": {
              "description": "Order's date approved upper range",
              "title": "Date Approved End",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved pre-defined range",
            "in": "query",
            "name": "date_approved_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date approved pre-defined range",
              "title": "Date Approved Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved relative range",
            "in": "query",
            "name": "date_approved_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date approved relative range",
              "title": "Date Approved Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date approved relative filter type",
            "in": "query",
            "name": "date_approved_relative",
            "required": false,
            "schema": {
              "description": "Order's date approved relative filter type",
              "title": "Date Approved Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed lower range",
            "in": "query",
            "name": "order_date_completed_start",
            "required": false,
            "schema": {
              "description": "Order's date completed lower range",
              "title": "Order Date Completed Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed upper range",
            "in": "query",
            "name": "order_date_completed_end",
            "required": false,
            "schema": {
              "description": "Order's date completed upper range",
              "title": "Order Date Completed End",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed pre-defined range",
            "in": "query",
            "name": "order_date_completed_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date completed pre-defined range",
              "title": "Order Date Completed Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed relative range",
            "in": "query",
            "name": "order_date_completed_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date completed relative range",
              "title": "Order Date Completed Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date completed relative filter type",
            "in": "query",
            "name": "order_date_completed_relative",
            "required": false,
            "schema": {
              "description": "Order's date completed relative filter type",
              "title": "Order Date Completed Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date lower range",
            "in": "query",
            "name": "estimated_start_date_start",
            "required": false,
            "schema": {
              "description": "Test's estimated start date lower range",
              "title": "Estimated Start Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date upper range",
            "in": "query",
            "name": "estimated_start_date_end",
            "required": false,
            "schema": {
              "description": "Test's estimated start date upper range",
              "title": "Estimated Start Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date pre-defined range",
            "in": "query",
            "name": "estimated_start_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's estimated start date pre-defined range",
              "title": "Estimated Start Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date relative range",
            "in": "query",
            "name": "estimated_start_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's estimated start date relative range",
              "title": "Estimated Start Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated start date relative filter type",
            "in": "query",
            "name": "estimated_start_date_relative",
            "required": false,
            "schema": {
              "description": "Test's estimated start date relative filter type",
              "title": "Estimated Start Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date lower range",
            "in": "query",
            "name": "estimated_complete_date_start",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date lower range",
              "title": "Estimated Complete Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date upper range",
            "in": "query",
            "name": "estimated_complete_date_end",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date upper range",
              "title": "Estimated Complete Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date pre-defined range",
            "in": "query",
            "name": "estimated_complete_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date pre-defined range",
              "title": "Estimated Complete Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date relative range",
            "in": "query",
            "name": "estimated_complete_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date relative range",
              "title": "Estimated Complete Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's estimated complete date relative filter type",
            "in": "query",
            "name": "estimated_complete_date_relative",
            "required": false,
            "schema": {
              "description": "Test's estimated complete date relative filter type",
              "title": "Estimated Complete Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's start date lower range",
            "in": "query",
            "name": "start_date_start",
            "required": false,
            "schema": {
              "description": "Test's start date lower range",
              "title": "Start Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's start date upper range",
            "in": "query",
            "name": "start_date_end",
            "required": false,
            "schema": {
              "description": "Test's start date upper range",
              "title": "Start Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's start date pre-defined range",
            "in": "query",
            "name": "start_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's start date pre-defined range",
              "title": "Start Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's start date relative range",
            "in": "query",
            "name": "start_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's start date relative range",
              "title": "Start Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's start date relative filter type",
            "in": "query",
            "name": "start_date_relative",
            "required": false,
            "schema": {
              "description": "Test's start date relative filter type",
              "title": "Start Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date lower range",
            "in": "query",
            "name": "complete_date_start",
            "required": false,
            "schema": {
              "description": "Test's complete date lower range",
              "title": "Complete Date Start",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date upper range",
            "in": "query",
            "name": "complete_date_end",
            "required": false,
            "schema": {
              "description": "Test's complete date upper range",
              "title": "Complete Date End",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date pre-defined range",
            "in": "query",
            "name": "complete_date_filter_range",
            "required": false,
            "schema": {
              "description": "Test's complete date pre-defined range",
              "title": "Complete Date Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date relative range",
            "in": "query",
            "name": "complete_date_relative_days",
            "required": false,
            "schema": {
              "description": "Test's complete date relative range",
              "title": "Complete Date Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Test's complete date relative filter type",
            "in": "query",
            "name": "complete_date_relative",
            "required": false,
            "schema": {
              "description": "Test's complete date relative filter type",
              "title": "Complete Date Relative",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested lower range",
            "in": "query",
            "name": "order_date_requested_start",
            "required": false,
            "schema": {
              "description": "Order's date requested lower range",
              "title": "Order Date Requested Start",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested upper range",
            "in": "query",
            "name": "order_date_requested_end",
            "required": false,
            "schema": {
              "description": "Order's date requested upper range",
              "title": "Order Date Requested End",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested pre-defined range",
            "in": "query",
            "name": "order_date_requested_filter_range",
            "required": false,
            "schema": {
              "description": "Order's date requested pre-defined range",
              "title": "Order Date Requested Filter Range",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested relative range",
            "in": "query",
            "name": "order_date_requested_relative_days",
            "required": false,
            "schema": {
              "description": "Order's date requested relative range",
              "title": "Order Date Requested Relative Days",
              "type": "string"
            }
          },
          {
            "description": "Order's date requested relative filter type",
            "in": "query",
            "name": "order_date_requested_relative",
            "required": false,
            "schema": {
              "description": "Order's date requested relative filter type",
              "title": "Order Date Requested Relative",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTestSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "TEST"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_tests",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTestSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseTestSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "TEST"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_tests",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTestSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseTestSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "TEST"
        ]
      }
    },
    "/qbench/api/v2/tests/worksheets/dynamic/named-cells": {
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_tests_worksheets_dynamic_named-cells",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestDynamicWorksheetNamedCellSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update_test_worksheet_info <PATCH>",
        "tags": [
          "TEST",
          "WORKSHEET"
        ]
      }
    },
    "/qbench/api/v2/tests/{test_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_tests_{test_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "test_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "TEST"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_tests_{test_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "test_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleTestSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "TEST"
        ]
      }
    },
    "/qbench/api/v2/tests/{test_id}/attachments": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_tests_{test_id}_attachments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "test_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttachmentSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_test_attachments <GET>",
        "tags": [
          "TEST",
          "ATTACHMENT"
        ]
      }
    },
    "/qbench/api/v2/tests/{test_id}/batches": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_tests_{test_id}_batches",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "test_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "batch_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Test Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "project_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Project Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "protocol_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Protocol Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_protocol_step_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Current Protocol Step Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "assay_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Assay Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "parent_batch_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Parent Batch Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_object_protocol_step_user_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Current Object Protocol Step User Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_assigned_user_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Object Protocol Step Assigned User Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Object Protocol Step Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Tags",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "batch_tags_action",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.TagActionValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "display_name",
            "required": false,
            "schema": {
              "title": "Display Name",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.SortOrderValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_deleted",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BatchFilterSchema.7a3ad72.IncludeDeletedValues"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_start",
            "required": false,
            "schema": {
              "title": "Date Created Start",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_end",
            "required": false,
            "schema": {
              "title": "Date Created End",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_filter_range",
            "required": false,
            "schema": {
              "title": "Date Created Filter Range",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative_days",
            "required": false,
            "schema": {
              "title": "Date Created Relative Days",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "date_created_relative",
            "required": false,
            "schema": {
              "title": "Date Created Relative",
              "type": "string"
            }
          },
          {
            "description": "Last updated unix timestamp",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "description": "Last updated unix timestamp",
              "title": "Last Updated",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "include_batches_without_assay",
            "required": false,
            "schema": {
              "title": "Include Batches Without Assay",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_assigned_current_user",
            "required": false,
            "schema": {
              "title": "Object Protocol Step Assigned Current User",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "current_object_protocol_step_current_user",
            "required": false,
            "schema": {
              "title": "Current Object Protocol Step Current User",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "object_protocol_step_no_user_assigned",
            "required": false,
            "schema": {
              "title": "Object Protocol Step No User Assigned",
              "type": "boolean"
            }
          },
          {
            "description": "Base64 Encoded Batch Additional Field Filters",
            "in": "query",
            "name": "additional_fields_encoded",
            "required": false,
            "schema": {
              "description": "Base64 Encoded Batch Additional Field Filters",
              "json_schema_extra": {
                "entity_type": "BATCH"
              },
              "title": "Additional Fields Encoded",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBatchSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Batches for a Test",
        "tags": [
          "TEST",
          "BATCH"
        ]
      }
    },
    "/qbench/api/v2/tests/{test_id}/reports": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_tests_{test_id}_reports",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "test_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "emailed",
            "required": false,
            "schema": {
              "title": "Emailed",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "public",
            "required": false,
            "schema": {
              "title": "Public",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "report_render_statuses",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Report Render Statuses",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "report_config_levels",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "title": "Report Config Levels",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "order_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Order Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "sample_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Sample Ids",
              "type": "array"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "test_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "title": "Test Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListGenReportSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of report for a Test",
        "tags": [
          "TEST",
          "REPORT"
        ]
      }
    },
    "/qbench/api/v2/tests/{test_id}/worksheet/data": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_tests_{test_id}_worksheet_data",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "test_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "raw_worksheet_data",
            "required": false,
            "schema": {
              "title": "Raw Worksheet Data",
              "type": "boolean"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "worksheet_config",
            "required": false,
            "schema": {
              "title": "Worksheet Config",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleTestWorksheetResponseSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_test_worksheet_info <GET>",
        "tags": [
          "TEST",
          "WORKSHEET"
        ]
      }
    },
    "/qbench/api/v2/turnarounds": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_turnarounds",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTurnaroundSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "TURNAROUND"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "patch__qbench_api_v2_turnarounds",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTurnaroundSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseTurnaroundSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update a list of resources",
        "tags": [
          "TURNAROUND"
        ]
      },
      "post": {
        "description": "",
        "operationId": "post__qbench_api_v2_turnarounds",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTurnaroundSchemaList.a9993e3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseTurnaroundSchema.a9993e3"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create a list of resources",
        "tags": [
          "TURNAROUND"
        ]
      }
    },
    "/qbench/api/v2/turnarounds/{turnaround_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__qbench_api_v2_turnarounds_{turnaround_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "turnaround_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a single resource by ID",
        "tags": [
          "TURNAROUND"
        ]
      },
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_turnarounds_{turnaround_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "turnaround_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleTurnaroundSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "TURNAROUND"
        ]
      }
    },
    "/qbench/api/v2/turnarounds/{turnaround_id}/divisions": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_turnarounds_{turnaround_id}_divisions",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "turnaround_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDivisionSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get paginated list of Divisions for a turnaround",
        "tags": [
          "TURNAROUND",
          "DIVISION"
        ]
      }
    },
    "/qbench/api/v2/users": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_users",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUserSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "USER"
        ]
      }
    },
    "/qbench/api/v2/users/{user_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_users_{user_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleUserSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "USER"
        ]
      }
    },
    "/qbench/api/v2/worksheets": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_worksheets",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "page_num",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page Num",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 20,
              "title": "Page Size",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListWorksheetSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "get_entity_list <GET>",
        "tags": [
          "WORKSHEET"
        ]
      }
    },
    "/qbench/api/v2/worksheets/{worksheet_id}": {
      "get": {
        "description": "",
        "operationId": "get__qbench_api_v2_worksheets_{worksheet_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "worksheet_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWorksheetSchema.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseSchema.69d0de0"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralErrorResponseSchema.69d0de0"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve a single resource by ID",
        "tags": [
          "WORKSHEET"
        ]
      }
    }
  },
  "security": [
    {
      "BearerToken": []
    }
  ],
  "tags": [
    {
      "name": "ACCESSIONING_TYPE"
    },
    {
      "name": "API_CLIENT"
    },
    {
      "name": "CUSTOMER"
    },
    {
      "name": "ASSAY_CATEGORY"
    },
    {
      "name": "ASSAY"
    },
    {
      "name": "TURNAROUND"
    },
    {
      "name": "PANEL"
    },
    {
      "name": "DIVISION"
    },
    {
      "name": "ATTACHMENT"
    },
    {
      "name": "AUTHENTICATION"
    },
    {
      "name": "BATCH"
    },
    {
      "name": "SAMPLE"
    },
    {
      "name": "TEST"
    },
    {
      "name": "WORKSHEET"
    },
    {
      "name": "CONTACT"
    },
    {
      "name": "SOURCE"
    },
    {
      "name": "EPIC"
    },
    {
      "name": "PAYMENT"
    },
    {
      "name": "INTEGRATION"
    },
    {
      "name": "INVOICE"
    },
    {
      "name": "INVOICE_ITEM"
    },
    {
      "name": "ORDER"
    },
    {
      "name": "LABEL"
    },
    {
      "name": "LOCATION_TYPE"
    },
    {
      "name": "LOCATION"
    },
    {
      "name": "REPORT"
    },
    {
      "name": "COMMENT"
    },
    {
      "name": "PRINTDOC"
    },
    {
      "name": "PROJECT"
    },
    {
      "name": "QUOTATION"
    },
    {
      "name": "TEAM"
    },
    {
      "name": "USER"
    }
  ],
  "qb57": "19742f8c74954e2b"
}